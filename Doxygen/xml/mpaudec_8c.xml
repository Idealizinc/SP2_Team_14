<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="mpaudec_8c" kind="file" language="C++">
    <compoundname>mpaudec.c</compoundname>
    <includes refid="internal_8h" local="yes">internal.h</includes>
    <includes refid="mpegaudio_8h" local="yes">mpegaudio.h</includes>
    <includes refid="mpaudectab_8h" local="yes">mpaudectab.h</includes>
    <incdepgraph>
      <node id="2943">
        <label>internal.h</label>
        <link refid="internal_8h"/>
        <childnode refid="2944" relation="include">
        </childnode>
        <childnode refid="2945" relation="include">
        </childnode>
        <childnode refid="2946" relation="include">
        </childnode>
        <childnode refid="2947" relation="include">
        </childnode>
        <childnode refid="2948" relation="include">
        </childnode>
        <childnode refid="2949" relation="include">
        </childnode>
        <childnode refid="2950" relation="include">
        </childnode>
        <childnode refid="2951" relation="include">
        </childnode>
        <childnode refid="2952" relation="include">
        </childnode>
      </node>
      <node id="2952">
        <label>assert.h</label>
      </node>
      <node id="2953">
        <label>mpegaudio.h</label>
        <link refid="mpegaudio_8h"/>
      </node>
      <node id="2944">
        <label>stdlib.h</label>
      </node>
      <node id="2949">
        <label>stddef.h</label>
      </node>
      <node id="2942">
        <label>irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c</label>
        <link refid="mpaudec.c"/>
        <childnode refid="2943" relation="include">
        </childnode>
        <childnode refid="2953" relation="include">
        </childnode>
        <childnode refid="2954" relation="include">
        </childnode>
      </node>
      <node id="2950">
        <label>mpaudec.h</label>
        <link refid="mpaudec_8h"/>
      </node>
      <node id="2954">
        <label>mpaudectab.h</label>
        <link refid="mpaudectab_8h"/>
      </node>
      <node id="2946">
        <label>string.h</label>
      </node>
      <node id="2948">
        <label>math.h</label>
      </node>
      <node id="2947">
        <label>ctype.h</label>
      </node>
      <node id="2945">
        <label>stdio.h</label>
      </node>
      <node id="2951">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structMPADecodeContext" prot="public">MPADecodeContext</innerclass>
    <innerclass refid="structGranuleDef" prot="public">GranuleDef</innerclass>
    <innerclass refid="structHuffTable" prot="public">HuffTable</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="mpaudec_8c_1af509079bdc3b387e5b67a1e551276913" prot="public" static="no">
        <name>USE_HIGHPRECISION</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="39" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" prot="public" static="no">
        <name>FRAC_BITS</name>
        <initializer>23   /* fractional bits for sb_samples and dct */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="42" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="42" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
        <referencedby refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" compoundref="mpaudec_8c" startline="206" endline="232">l3_unscale</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a1b4651c62d39bf11121b02dd6233818e" prot="public" static="no">
        <name>WFRAC_BITS</name>
        <initializer>16   /* fractional bits for <ref refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" kindref="member">window</ref> */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="43" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="43" bodyend="-1"/>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" prot="public" static="no">
        <name>FRAC_ONE</name>
        <initializer>(1 &lt;&lt; <ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="49" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" prot="public" static="no">
        <name>MULL</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((int64_t)(a) * (int64_t)(b)) &gt;&gt; <ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="51" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="51" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" compoundref="mpaudec_8c" startline="1862" endline="1960">compute_imdct</referencedby>
        <referencedby refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" prot="public" static="no">
        <name>MUL64</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((int64_t)(a) * (int64_t)(b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="52" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="52" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" compoundref="mpaudec_8c" startline="1828" endline="1860">compute_antialias</referencedby>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
        <referencedby refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" compoundref="mpaudec_8c" startline="176" endline="188">l1_unscale</referencedby>
        <referencedby refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" compoundref="mpaudec_8c" startline="206" endline="232">l3_unscale</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a88cf220be3bb27c93f7a42530b7b15b8" prot="public" static="no">
        <name>FIX</name>
        <param><defname>a</defname></param>
        <initializer>((int)((a) * <ref refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" kindref="member">FRAC_ONE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="53" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="53" bodyend="-1"/>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" prot="public" static="no">
        <name>FIXR</name>
        <param><defname>a</defname></param>
        <initializer>((int)((a) * <ref refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" kindref="member">FRAC_ONE</ref> + 0.5))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="55" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="55" bodyend="-1"/>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" prot="public" static="no">
        <name>FRAC_RND</name>
        <param><defname>a</defname></param>
        <initializer>(((a) + (<ref refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" kindref="member">FRAC_ONE</ref>/2)) &gt;&gt; <ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="56" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="56" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" compoundref="mpaudec_8c" startline="1828" endline="1860">compute_antialias</referencedby>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" prot="public" static="no">
        <name>HEADER_SIZE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="66" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="66" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</referencedby>
        <referencedby refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" compoundref="mpaudec_8c" startline="2312" endline="2470">mpaudec_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" prot="public" static="no">
        <name>BACKSTEP_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="67" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="67" bodyend="-1"/>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
        <referencedby refid="mpaudec_8c_1ab3d38c0057af45f5edb7f6dc158ede46" compoundref="mpaudec_8c" startline="1472" endline="1490">seek_to_maindata</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" prot="public" static="no">
        <name>MODE_EXT_MS_STEREO</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="117" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="117" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</referencedby>
        <referencedby refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" compoundref="mpaudec_8c" startline="1079" endline="1170">decode_header</referencedby>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" prot="public" static="no">
        <name>MODE_EXT_I_STEREO</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="118" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="118" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</referencedby>
        <referencedby refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" compoundref="mpaudec_8c" startline="1079" endline="1170">decode_header</referencedby>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" prot="public" static="no">
        <name>TABLE_4_3_SIZE</name>
        <initializer>(8191 + 16)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="136" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="136" bodyend="-1"/>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" prot="public" static="no">
        <name>SCALE_GEN</name>
        <param><defname>v</defname></param>
        <initializer>{ <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0 * (v)), <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.7937005259 * (v)), <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.6299605249 * (v)) }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="155" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" prot="public" static="no">
        <name>DEV_ORDER</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="235" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="235" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
        <referencedby refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" compoundref="mpaudec_8c" startline="250" endline="259">int_pow_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" prot="public" static="no">
        <name>POW_FRAC_BITS</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="237" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="237" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a828f92b290aa8d1789b59ad77e2eed90" prot="public" static="no">
        <name>POW_FRAC_ONE</name>
        <initializer>(1 &lt;&lt; <ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="238" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="238" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" prot="public" static="no">
        <name>POW_FIX</name>
        <param><defname>a</defname></param>
        <initializer>((int)((a) * <ref refid="mpaudec_8c_1a828f92b290aa8d1789b59ad77e2eed90" kindref="member">POW_FRAC_ONE</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="239" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="239" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" compoundref="mpaudec_8c" startline="250" endline="259">int_pow_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" prot="public" static="no">
        <name>POW_MULL</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((int64_t)(a) * (int64_t)(b)) &gt;&gt; <ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="240" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="240" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
        <referencedby refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" compoundref="mpaudec_8c" startline="250" endline="259">int_pow_init</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a3c7f14ddeed4db84b6a04a44defc0ef8" prot="public" static="no">
        <name>COS0_0</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.50060299823519630134)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="502" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="502" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a6a04514f1c1ce5656a66ac27881ba183" prot="public" static="no">
        <name>COS0_1</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.50547095989754365998)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="503" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="503" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1abbc0d0a758ec52e79b8d740fa45bd040" prot="public" static="no">
        <name>COS0_2</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.51544730992262454697)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="504" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="504" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a0026f39414e802034982b1b4cc3e3e82" prot="public" static="no">
        <name>COS0_3</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.53104259108978417447)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="505" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="505" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a06b6de5ad74b06b623f32fe6e8f22fa9" prot="public" static="no">
        <name>COS0_4</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.55310389603444452782)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="506" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="506" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a542bd94c69a783504ac305f27d48cd07" prot="public" static="no">
        <name>COS0_5</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.58293496820613387367)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="507" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="507" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ae4a6061d734c76e32dc2cd4455e5f9b9" prot="public" static="no">
        <name>COS0_6</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.62250412303566481615)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="508" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="508" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ac8f634c2c0b2b132dc5102b665e82f7e" prot="public" static="no">
        <name>COS0_7</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.67480834145500574602)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="509" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="509" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a2dfea6e209510cb1419d17e053f49ba8" prot="public" static="no">
        <name>COS0_8</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.74453627100229844977)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="510" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="510" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a711428429f446493a4ea55d7995af3ff" prot="public" static="no">
        <name>COS0_9</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.83934964541552703873)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="511" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="511" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a2ee87149ee2c0377e029e2202f879539" prot="public" static="no">
        <name>COS0_10</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.97256823786196069369)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="512" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="512" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ad3752e7b42fadb8272368ab18def573c" prot="public" static="no">
        <name>COS0_11</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.16943993343288495515)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="513" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="513" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1accef694fc0f3ed4ee4a1ba4eb1e39daa" prot="public" static="no">
        <name>COS0_12</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.48416461631416627724)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="514" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="514" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1af4b0adbb8f7a66ad724b87787af91660" prot="public" static="no">
        <name>COS0_13</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(2.05778100995341155085)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="515" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="515" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ace35139f22692892a1b6eab6056a0acb" prot="public" static="no">
        <name>COS0_14</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(3.40760841846871878570)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="516" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="516" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ada802c9dcd935c89dd685c1e4c5ea39a" prot="public" static="no">
        <name>COS0_15</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(10.19000812354805681150)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="517" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="517" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a80fe7c3bc55400ac33d20162946bfbeb" prot="public" static="no">
        <name>COS1_0</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.50241928618815570551)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="519" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="519" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a968b7cd171308bd5a8669789b2bc5f24" prot="public" static="no">
        <name>COS1_1</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.52249861493968888062)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="520" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="520" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a60e6e20a6a7f8450fc260de0ef7cbae3" prot="public" static="no">
        <name>COS1_2</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.56694403481635770368)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="521" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="521" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1acb19e87b4b82935d05eaef77dc9e0418" prot="public" static="no">
        <name>COS1_3</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.64682178335999012954)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="522" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="522" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a936b019be7a7354d11cb8aaaf9a7d46d" prot="public" static="no">
        <name>COS1_4</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.78815462345125022473)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="523" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="523" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a90c8fd99f2746e413c06b558d9363f6a" prot="public" static="no">
        <name>COS1_5</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.06067768599034747134)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="524" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="524" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a12669a29f2c1b308d3f2a25a8891aadb" prot="public" static="no">
        <name>COS1_6</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.72244709823833392782)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="525" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="525" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a434031c1963b120c1d92fa745c5ca3b1" prot="public" static="no">
        <name>COS1_7</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(5.10114861868916385802)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="526" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="526" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" prot="public" static="no">
        <name>COS2_0</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.50979557910415916894)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="528" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="528" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" prot="public" static="no">
        <name>COS2_1</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.60134488693504528054)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="529" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="529" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" prot="public" static="no">
        <name>COS2_2</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.89997622313641570463)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="530" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="530" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" prot="public" static="no">
        <name>COS2_3</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(2.56291544774150617881)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="531" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="531" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" prot="public" static="no">
        <name>COS3_0</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.54119610014619698439)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="533" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="533" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" prot="public" static="no">
        <name>COS3_1</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.30656296487637652785)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="534" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="534" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a3e45a461f953a779296743a365934b86" prot="public" static="no">
        <name>COS4_0</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.70710678118654752439)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="536" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" prot="public" static="no">
        <name>BF</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <initializer>{\
    tmp0 = tab[a] + tab[b];\
    tmp1 = tab[a] - tab[b];\
    tab[a] = tmp0;\
    tab[b] = <ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp1, c);\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="539" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="539" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" prot="public" static="no">
        <name>BF1</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>{\
    <ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(a, b, <ref refid="mpaudec_8c_1a3e45a461f953a779296743a365934b86" kindref="member">COS4_0</ref>);\
    <ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(c, d, -<ref refid="mpaudec_8c_1a3e45a461f953a779296743a365934b86" kindref="member">COS4_0</ref>);\
    tab[c] += tab[d];\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="547" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="547" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" prot="public" static="no">
        <name>BF2</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <param><defname>c</defname></param>
        <param><defname>d</defname></param>
        <initializer>{\
    <ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(a, b, <ref refid="mpaudec_8c_1a3e45a461f953a779296743a365934b86" kindref="member">COS4_0</ref>);\
    <ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(c, d, -<ref refid="mpaudec_8c_1a3e45a461f953a779296743a365934b86" kindref="member">COS4_0</ref>);\
    tab[c] += tab[d];\
    tab[a] += tab[c];\
    tab[c] += tab[b];\
    tab[b] += tab[d];\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="554" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="554" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" prot="public" static="no">
        <name>ADD</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>tab[a] += tab[b]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="564" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="564" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" prot="public" static="no">
        <name>OUT_SHIFT</name>
        <initializer>(<ref refid="mpaudec_8c_1a1b4651c62d39bf11121b02dd6233818e" kindref="member">WFRAC_BITS</ref> + <ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref> - 15)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="717" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="717" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" compoundref="mpaudec_8c" startline="740" endline="749">round_sample</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" prot="public" static="no">
        <name>MULS</name>
        <param><defname>ra</defname></param>
        <param><defname>rb</defname></param>
        <initializer><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(ra, rb)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="751" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="751" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a2862fac73b23794771a42a227312740c" prot="public" static="no">
        <name>SUM8</name>
        <param><defname>sum</defname></param>
        <param><defname>op</defname></param>
        <param><defname>w</defname></param>
        <param><defname>p</defname></param>
        <initializer>{                                               \
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[0 * 64], p[0 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[1 * 64], p[1 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[2 * 64], p[2 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[3 * 64], p[3 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[4 * 64], p[4 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[5 * 64], p[5 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[6 * 64], p[6 * 64]);\
    sum op <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w)[7 * 64], p[7 * 64]);\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="755" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="755" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" compoundref="mpaudec_8c" startline="800" endline="873">synth_filter</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a575626a997c0d8380fe3cbb6293f6d2f" prot="public" static="no">
        <name>SUM8P2</name>
        <param><defname>sum1</defname></param>
        <param><defname>op1</defname></param>
        <param><defname>sum2</defname></param>
        <param><defname>op2</defname></param>
        <param><defname>w1</defname></param>
        <param><defname>w2</defname></param>
        <param><defname>p</defname></param>
        <initializer>{                                               \
    int tmp;\
    tmp = p[0 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[0 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[0 * 64], tmp);\
    tmp = p[1 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[1 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[1 * 64], tmp);\
    tmp = p[2 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[2 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[2 * 64], tmp);\
    tmp = p[3 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[3 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[3 * 64], tmp);\
    tmp = p[4 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[4 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[4 * 64], tmp);\
    tmp = p[5 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[5 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[5 * 64], tmp);\
    tmp = p[6 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[6 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[6 * 64], tmp);\
    tmp = p[7 * 64];\
    sum1 op1 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w1)[7 * 64], tmp);\
    sum2 op2 <ref refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" kindref="member">MULS</ref>((w2)[7 * 64], tmp);\
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="767" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="767" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" compoundref="mpaudec_8c" startline="800" endline="873">synth_filter</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" prot="public" static="no">
        <name>C1</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.99144486137381041114)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="876" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="929" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" prot="public" static="no">
        <name>C3</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.92387953251128675612)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="877" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="931" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" prot="public" static="no">
        <name>C5</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.79335334029123516458)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="878" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="933" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" prot="public" static="no">
        <name>C7</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.60876142900872063941)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="879" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="935" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" prot="public" static="no">
        <name>C9</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.38268343236508977173)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="880" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="880" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" prot="public" static="no">
        <name>C11</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.13052619222005159154)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="881" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="881" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" prot="public" static="no">
        <name>C1</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.98480775301220805936)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="929" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1ad6fc13322a4f1c314332ff34aa8b3fa0" prot="public" static="no">
        <name>C2</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.93969262078590838405)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="930" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="930" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" prot="public" static="no">
        <name>C3</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.86602540378443864676)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="931" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="931" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1acc39015f57b2efb8810b603f188bdf15" prot="public" static="no">
        <name>C4</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.76604444311897803520)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="932" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="932" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" prot="public" static="no">
        <name>C5</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.64278760968653932632)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="933" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="933" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a3cc680a71aa57979316e647352cb4e35" prot="public" static="no">
        <name>C6</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="934" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="934" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" prot="public" static="no">
        <name>C7</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.34202014332566873304)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="935" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="935" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a783ffd54c433250e4b595d115f410e9a" prot="public" static="no">
        <name>C8</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.17364817766693034885)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="936" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="936" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a2bb2d7ffb7f980fa7537e3f9e1e69c16" prot="public" static="no">
        <name>SAME_HEADER_MASK</name>
        <initializer>(0xffe00000 | (3 &lt;&lt; 17) | (0xf &lt;&lt; 12) | (3 &lt;&lt; 10) | (3 &lt;&lt; 19))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1073" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1073" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" compoundref="mpaudec_8c" startline="2312" endline="2470">mpaudec_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="define" id="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" prot="public" static="no">
        <name>ISQRT2</name>
        <initializer><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.70710678118654752440)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1699" column="9" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1699" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t MPA_INT</definition>
        <argsstring></argsstring>
        <name>MPA_INT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="61" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="mpaudec_8c_1a93ee162a082c1f873ab43ff0b3a46eaa" prot="public" static="no">
        <type>struct <ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref></type>
        <definition>typedef struct MPADecodeContext  MPADecodeContext</definition>
        <argsstring></argsstring>
        <name>MPADecodeContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="95" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="mpaudec_8c_1ae75506d768d2434c11992cbd53a6008f" prot="public" static="no">
        <type>struct <ref refid="structGranuleDef" kindref="compound">GranuleDef</ref></type>
        <definition>typedef struct GranuleDef  GranuleDef</definition>
        <argsstring></argsstring>
        <name>GranuleDef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="115" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="mpaudec_8c_1ac728ac758c3a53e5ec867fe78b26c72f" prot="public" static="no">
        <type>struct <ref refid="structHuffTable" kindref="compound">HuffTable</ref></type>
        <definition>typedef struct HuffTable  HuffTable</definition>
        <argsstring></argsstring>
        <name>HuffTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="125" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="mpaudec_8c_1a3c8e91beb7003cf0c6e60aca1fb87567" prot="public" static="yes" mutable="no">
        <type><ref refid="structVLC" kindref="compound">VLC</ref></type>
        <definition>VLC huff_vlc[16]</definition>
        <argsstring>[16]</argsstring>
        <name>huff_vlc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="130" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" prot="public" static="yes" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* huff_code_table[16]</definition>
        <argsstring>[16]</argsstring>
        <name>huff_code_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="131" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="131" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" compoundref="mpaudec_8c" startline="1559" endline="1661">huffman_decode</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a2fc33165dd7b4caa21273223e87eefd9" prot="public" static="yes" mutable="no">
        <type><ref refid="structVLC" kindref="compound">VLC</ref></type>
        <definition>VLC huff_quad_vlc[2]</definition>
        <argsstring>[2]</argsstring>
        <name>huff_quad_vlc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="132" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" prot="public" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t band_index_long[9][23]</definition>
        <argsstring>[9][23]</argsstring>
        <name>band_index_long</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="134" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="134" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" prot="public" static="yes" mutable="no">
        <type>int8_t</type>
        <definition>int8_t table_4_3_exp[TABLE_4_3_SIZE]</definition>
        <argsstring>[TABLE_4_3_SIZE]</argsstring>
        <name>table_4_3_exp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="137" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="137" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" compoundref="mpaudec_8c" startline="206" endline="232">l3_unscale</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t table_4_3_value[TABLE_4_3_SIZE]</definition>
        <argsstring>[TABLE_4_3_SIZE]</argsstring>
        <name>table_4_3_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="141" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="141" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" compoundref="mpaudec_8c" startline="206" endline="232">l3_unscale</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t is_table[2][16]</definition>
        <argsstring>[2][16]</argsstring>
        <name>is_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="144" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="144" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t is_table_lsf[2][2][16]</definition>
        <argsstring>[2][2][16]</argsstring>
        <name>is_table_lsf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="145" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="145" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t csa_table[8][2]</definition>
        <argsstring>[8][2]</argsstring>
        <name>csa_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="146" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="146" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" compoundref="mpaudec_8c" startline="1828" endline="1860">compute_antialias</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t mdct_win[8][36]</definition>
        <argsstring>[8][36]</argsstring>
        <name>mdct_win</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="147" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="147" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" compoundref="mpaudec_8c" startline="1862" endline="1960">compute_imdct</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" prot="public" static="yes" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t scale_factor_modshift[64]</definition>
        <argsstring>[64]</argsstring>
        <name>scale_factor_modshift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="150" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="150" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" compoundref="mpaudec_8c" startline="176" endline="188">l1_unscale</referencedby>
        <referencedby refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" compoundref="mpaudec_8c" startline="190" endline="203">l2_unscale_group</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t scale_factor_mult[15][3]</definition>
        <argsstring>[15][3]</argsstring>
        <name>scale_factor_mult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="152" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="152" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" compoundref="mpaudec_8c" startline="176" endline="188">l1_unscale</referencedby>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1aecb12bd4c6a16e8479ac3518b44718a5" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t scale_factor_mult2[3][3]</definition>
        <argsstring>[3][3]</argsstring>
        <name>scale_factor_mult2</name>
        <initializer>= {
    <ref refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" kindref="member">SCALE_GEN</ref>(4.0 / 3.0), 
    <ref refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" kindref="member">SCALE_GEN</ref>(4.0 / 5.0), 
    <ref refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" kindref="member">SCALE_GEN</ref>(4.0 / 9.0), 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="158" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="158" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" compoundref="mpaudec_8c" startline="190" endline="203">l2_unscale_group</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1aefc26336d8e48f84bd1b02eba1e03b49" prot="public" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t scale_factor_mult3[4]</definition>
        <argsstring>[4]</argsstring>
        <name>scale_factor_mult3</name>
        <initializer>= {
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.18920711500272106671),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.41421356237309504880),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.68179283050742908605),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="165" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="165" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" compoundref="mpaudec_8c" startline="206" endline="232">l3_unscale</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" prot="public" static="yes" mutable="no">
        <type><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref></type>
        <definition>MPA_INT window[512]</definition>
        <argsstring>[512]</argsstring>
        <name>window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="172" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="172" bodyend="-1"/>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
        <referencedby refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" compoundref="mpaudec_8c" startline="800" endline="873">synth_filter</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int dev_4_3_coefs[DEV_ORDER]</definition>
        <argsstring>[DEV_ORDER]</argsstring>
        <name>dev_4_3_coefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="242" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="242" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
        <referencedby refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" compoundref="mpaudec_8c" startline="250" endline="259">int_pow_init</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a1aa354d7efec2cf4d036fad885a957d1" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int pow_mult3[3]</definition>
        <argsstring>[3]</argsstring>
        <name>pow_mult3</name>
        <initializer>= {
    <ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.0),
    <ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.25992104989487316476),
    <ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.58740105196819947474),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="244" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="244" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int icos36[9]</definition>
        <argsstring>[9]</argsstring>
        <name>icos36</name>
        <initializer>= {
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.50190991877167369479),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.51763809020504152469),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.55168895948124587824),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.61038729438072803416),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.70710678118654752439),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.87172339781054900991),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.18310079157624925896),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.93185165257813657349),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(5.73685662283492756461),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="939" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="939" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      <memberdef kind="variable" id="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int icos72[18]</definition>
        <argsstring>[18]</argsstring>
        <name>icos72</name>
        <initializer>= {
    
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.74009361646113053152),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.82133981585229078570),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.93057949835178895673),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.08284028510010010928),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.30656296487637652785),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.66275476171152078719),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(2.31011315767264929558),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(3.83064878777019433457),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(11.46279281302667383546),

    
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.67817085245462840086),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.63023620700513223342),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.59284452371708034528),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.56369097343317117734),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.54119610014619698439),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.52426456257040533932),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.51213975715725461845),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.50431448029007636036),
    <ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.50047634258165998492),
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="951" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="951" bodyend="-1"/>
        <referencedby refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int l1_unscale</definition>
        <argsstring>(int n, int mant, int scale_factor)</argsstring>
        <name>l1_unscale</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mant</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="176" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="176" bodyend="188"/>
        <references refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" compoundref="mpaudec_8c" startline="52">MUL64</references>
        <references refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" compoundref="mpaudec_8c" startline="150">scale_factor_modshift</references>
        <references refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" compoundref="mpaudec_8c" startline="152">scale_factor_mult</references>
        <referencedby refid="mpaudec_8c_1aa8d8ca6a6ace0fa4945bbf9de65c0364" compoundref="mpaudec_8c" startline="1173" endline="1237">mp_decode_layer1</referencedby>
        <referencedby refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" compoundref="mpaudec_8c" startline="1261" endline="1467">mp_decode_layer2</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int l2_unscale_group</definition>
        <argsstring>(int steps, int mant, int scale_factor)</argsstring>
        <name>l2_unscale_group</name>
        <param>
          <type>int</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>int</type>
          <declname>mant</declname>
        </param>
        <param>
          <type>int</type>
          <declname>scale_factor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="190" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="190" bodyend="203"/>
        <references refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" compoundref="mpaudec_8c" startline="150">scale_factor_modshift</references>
        <references refid="mpaudec_8c_1aecb12bd4c6a16e8479ac3518b44718a5" compoundref="mpaudec_8c" startline="158">scale_factor_mult2</references>
        <referencedby refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" compoundref="mpaudec_8c" startline="1261" endline="1467">mp_decode_layer2</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int l3_unscale</definition>
        <argsstring>(int value, int exponent)</argsstring>
        <name>l3_unscale</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="206" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="206" bodyend="232"/>
        <references refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" compoundref="mpaudec_8c" startline="42">FRAC_BITS</references>
        <references refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" compoundref="mpaudec_8c" startline="52">MUL64</references>
        <references refid="mpaudec_8c_1aefc26336d8e48f84bd1b02eba1e03b49" compoundref="mpaudec_8c" startline="165">scale_factor_mult3</references>
        <references refid="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" compoundref="mpaudec_8c" startline="137">table_4_3_exp</references>
        <references refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" compoundref="mpaudec_8c" startline="141">table_4_3_value</references>
        <referencedby refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" compoundref="mpaudec_8c" startline="1559" endline="1661">huffman_decode</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void int_pow_init</definition>
        <argsstring>(void)</argsstring>
        <name>int_pow_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="250" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="250" bodyend="259"/>
        <references refid="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" compoundref="mpaudec_8c" startline="242">dev_4_3_coefs</references>
        <references refid="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" compoundref="mpaudec_8c" startline="235">DEV_ORDER</references>
        <references refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" compoundref="mpaudec_8c" startline="239">POW_FIX</references>
        <references refid="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" compoundref="mpaudec_8c" startline="240">POW_MULL</references>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int int_pow</definition>
        <argsstring>(int i, int *exp_ptr)</argsstring>
        <name>int_pow</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exp_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="262" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="262" bodyend="304"/>
        <references refid="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" compoundref="mpaudec_8c" startline="242">dev_4_3_coefs</references>
        <references refid="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" compoundref="mpaudec_8c" startline="235">DEV_ORDER</references>
        <references refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" compoundref="mpaudec_8c" startline="42">FRAC_BITS</references>
        <references refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" compoundref="mpaudec_8c" startline="237">POW_FRAC_BITS</references>
        <references refid="mpaudec_8c_1a828f92b290aa8d1789b59ad77e2eed90" compoundref="mpaudec_8c" startline="238">POW_FRAC_ONE</references>
        <references refid="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" compoundref="mpaudec_8c" startline="240">POW_MULL</references>
        <references refid="mpaudec_8c_1a1aa354d7efec2cf4d036fad885a957d1" compoundref="mpaudec_8c" startline="244">pow_mult3</references>
        <referencedby refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" compoundref="mpaudec_8c" startline="306" endline="496">mpaudec_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a0f2f19b46f286b7a9315b40e46f34227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpaudec_init</definition>
        <argsstring>(MPAuDecContext *mpctx)</argsstring>
        <name>mpaudec_init</name>
        <param>
          <type><ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref> *</type>
          <declname>mpctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="306" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="306" bodyend="496"/>
        <references refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" compoundref="mpaudec_8c" startline="67">BACKSTEP_SIZE</references>
        <references refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" compoundref="mpaudec_8c" startline="134">band_index_long</references>
        <references refid="mpaudectab_8h_1a0df9a837c9c4e59df9c96e968b332633" compoundref="mpaudectab_8h" startline="731">band_size_long</references>
        <references refid="structHuffTable_1a3971691ed3ef40ac4ab71aa72a7cd2f0" compoundref="mpaudec_8c" startline="123">HuffTable::bits</references>
        <references refid="mpaudectab_8h_1aa57a93e642f8c3ed0222b63e14dc794e" compoundref="mpaudectab_8h" startline="770">ci_table</references>
        <references refid="structHuffTable_1a6693a947aa07344e5a5a378c0e8a1157" compoundref="mpaudec_8c" startline="124">HuffTable::codes</references>
        <references refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" compoundref="mpaudec_8c" startline="146">csa_table</references>
        <references refid="mpaudec_8c_1a88cf220be3bb27c93f7a42530b7b15b8" compoundref="mpaudec_8c" startline="53">FIX</references>
        <references refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" compoundref="mpaudec_8c" startline="55">FIXR</references>
        <references refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" compoundref="mpaudec_8c" startline="49">FRAC_ONE</references>
        <references refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" compoundref="mpaudec_8c" startline="131">huff_code_table</references>
        <references refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf</references>
        <references refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" compoundref="mpaudec_8c" startline="70">MPADecodeContext::inbuf1</references>
        <references refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" compoundref="mpaudec_8c" startline="71">MPADecodeContext::inbuf_index</references>
        <references refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf_ptr</references>
        <references refid="bits_8c_1a17ce557803d3a49257e6fb289d43dfee" compoundref="bits_8c" startline="225" endline="245">init_vlc</references>
        <references refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" compoundref="mpaudec_8c" startline="262" endline="304">int_pow</references>
        <references refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" compoundref="mpaudec_8c" startline="250" endline="259">int_pow_init</references>
        <references refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" compoundref="mpaudec_8c" startline="144">is_table</references>
        <references refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" compoundref="mpaudec_8c" startline="145">is_table_lsf</references>
        <references refid="internal_8h_1ae71449b1cc6e6250b91f539153a7a0d3" compoundref="internal_8h" startline="20">M_PI</references>
        <references refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" compoundref="mpaudec_8c" startline="147">mdct_win</references>
        <references refid="mpaudectab_8h_1a4493e46e508fc1774a8bb2cd7e02af46" compoundref="mpaudectab_8h" startline="18">mpa_enwindow</references>
        <references refid="mpaudectab_8h_1aecbd4e758fdde8e1932ede5ad21051d7" compoundref="mpaudectab_8h" startline="664">mpa_huff_tables</references>
        <references refid="mpaudectab_8h_1a1c1ce845c3cf08bbc89ba8af6cf370de" compoundref="mpaudectab_8h" startline="725">mpa_quad_bits</references>
        <references refid="mpaudectab_8h_1a840214e39135ea4816ff9f05aa500857" compoundref="mpaudectab_8h" startline="720">mpa_quad_codes</references>
        <references refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" compoundref="mpaudec_8c" startline="51">MULL</references>
        <references refid="structMPAuDecContext_1ac1e30ced961e8cdc9af6dcdbbde6acd5" compoundref="mpaudec_8h" startline="20">MPAuDecContext::parse_only</references>
        <references refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" compoundref="mpaudec_8h" startline="19">MPAuDecContext::priv_data</references>
        <references refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" compoundref="mpaudec_8c" startline="150">scale_factor_modshift</references>
        <references refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" compoundref="mpaudec_8c" startline="152">scale_factor_mult</references>
        <references refid="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" compoundref="mpaudec_8c" startline="137">table_4_3_exp</references>
        <references refid="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" compoundref="mpaudec_8c" startline="136">TABLE_4_3_SIZE</references>
        <references refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" compoundref="mpaudec_8c" startline="141">table_4_3_value</references>
        <references refid="mpaudec_8c_1a1b4651c62d39bf11121b02dd6233818e" compoundref="mpaudec_8c" startline="43">WFRAC_BITS</references>
        <references refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" compoundref="mpaudec_8c" startline="172">window</references>
        <references refid="structHuffTable_1a6e1599b5da1a99639f9394e553aa5c89" compoundref="mpaudec_8c" startline="122">HuffTable::xsize</references>
        <referencedby refid="classirrklang_1_1CIrrKlangAudioStreamMP3_1aa0525477376ae287275da88a17f4825d" compoundref="CIrrKlangAudioStreamMP3_8cpp" startline="15" endline="84">irrklang::CIrrKlangAudioStreamMP3::CIrrKlangAudioStreamMP3</referencedby>
        <referencedby refid="classirrklang_1_1CIrrKlangAudioStreamMP3_1ae615c171d074153463af08a11118ceaf" compoundref="CIrrKlangAudioStreamMP3_8cpp" startline="215" endline="306">irrklang::CIrrKlangAudioStreamMP3::setPosition</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dct32</definition>
        <argsstring>(int32_t *out, int32_t *tab)</argsstring>
        <name>dct32</name>
        <param>
          <type>int32_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>tab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="567" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="567" bodyend="715"/>
        <references refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" compoundref="mpaudec_8c" startline="564">ADD</references>
        <references refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" compoundref="mpaudec_8c" startline="539">BF</references>
        <references refid="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" compoundref="mpaudec_8c" startline="547">BF1</references>
        <references refid="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" compoundref="mpaudec_8c" startline="554">BF2</references>
        <references refid="mpaudec_8c_1a3c7f14ddeed4db84b6a04a44defc0ef8" compoundref="mpaudec_8c" startline="502">COS0_0</references>
        <references refid="mpaudec_8c_1a6a04514f1c1ce5656a66ac27881ba183" compoundref="mpaudec_8c" startline="503">COS0_1</references>
        <references refid="mpaudec_8c_1a2ee87149ee2c0377e029e2202f879539" compoundref="mpaudec_8c" startline="512">COS0_10</references>
        <references refid="mpaudec_8c_1ad3752e7b42fadb8272368ab18def573c" compoundref="mpaudec_8c" startline="513">COS0_11</references>
        <references refid="mpaudec_8c_1accef694fc0f3ed4ee4a1ba4eb1e39daa" compoundref="mpaudec_8c" startline="514">COS0_12</references>
        <references refid="mpaudec_8c_1af4b0adbb8f7a66ad724b87787af91660" compoundref="mpaudec_8c" startline="515">COS0_13</references>
        <references refid="mpaudec_8c_1ace35139f22692892a1b6eab6056a0acb" compoundref="mpaudec_8c" startline="516">COS0_14</references>
        <references refid="mpaudec_8c_1ada802c9dcd935c89dd685c1e4c5ea39a" compoundref="mpaudec_8c" startline="517">COS0_15</references>
        <references refid="mpaudec_8c_1abbc0d0a758ec52e79b8d740fa45bd040" compoundref="mpaudec_8c" startline="504">COS0_2</references>
        <references refid="mpaudec_8c_1a0026f39414e802034982b1b4cc3e3e82" compoundref="mpaudec_8c" startline="505">COS0_3</references>
        <references refid="mpaudec_8c_1a06b6de5ad74b06b623f32fe6e8f22fa9" compoundref="mpaudec_8c" startline="506">COS0_4</references>
        <references refid="mpaudec_8c_1a542bd94c69a783504ac305f27d48cd07" compoundref="mpaudec_8c" startline="507">COS0_5</references>
        <references refid="mpaudec_8c_1ae4a6061d734c76e32dc2cd4455e5f9b9" compoundref="mpaudec_8c" startline="508">COS0_6</references>
        <references refid="mpaudec_8c_1ac8f634c2c0b2b132dc5102b665e82f7e" compoundref="mpaudec_8c" startline="509">COS0_7</references>
        <references refid="mpaudec_8c_1a2dfea6e209510cb1419d17e053f49ba8" compoundref="mpaudec_8c" startline="510">COS0_8</references>
        <references refid="mpaudec_8c_1a711428429f446493a4ea55d7995af3ff" compoundref="mpaudec_8c" startline="511">COS0_9</references>
        <references refid="mpaudec_8c_1a80fe7c3bc55400ac33d20162946bfbeb" compoundref="mpaudec_8c" startline="519">COS1_0</references>
        <references refid="mpaudec_8c_1a968b7cd171308bd5a8669789b2bc5f24" compoundref="mpaudec_8c" startline="520">COS1_1</references>
        <references refid="mpaudec_8c_1a60e6e20a6a7f8450fc260de0ef7cbae3" compoundref="mpaudec_8c" startline="521">COS1_2</references>
        <references refid="mpaudec_8c_1acb19e87b4b82935d05eaef77dc9e0418" compoundref="mpaudec_8c" startline="522">COS1_3</references>
        <references refid="mpaudec_8c_1a936b019be7a7354d11cb8aaaf9a7d46d" compoundref="mpaudec_8c" startline="523">COS1_4</references>
        <references refid="mpaudec_8c_1a90c8fd99f2746e413c06b558d9363f6a" compoundref="mpaudec_8c" startline="524">COS1_5</references>
        <references refid="mpaudec_8c_1a12669a29f2c1b308d3f2a25a8891aadb" compoundref="mpaudec_8c" startline="525">COS1_6</references>
        <references refid="mpaudec_8c_1a434031c1963b120c1d92fa745c5ca3b1" compoundref="mpaudec_8c" startline="526">COS1_7</references>
        <references refid="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" compoundref="mpaudec_8c" startline="528">COS2_0</references>
        <references refid="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" compoundref="mpaudec_8c" startline="529">COS2_1</references>
        <references refid="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" compoundref="mpaudec_8c" startline="530">COS2_2</references>
        <references refid="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" compoundref="mpaudec_8c" startline="531">COS2_3</references>
        <references refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" compoundref="mpaudec_8c" startline="533">COS3_0</references>
        <references refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" compoundref="mpaudec_8c" startline="534">COS3_1</references>
        <referencedby refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" compoundref="mpaudec_8c" startline="800" endline="873">synth_filter</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int round_sample</definition>
        <argsstring>(int64_t sum)</argsstring>
        <name>round_sample</name>
        <param>
          <type>int64_t</type>
          <declname>sum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="740" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="740" bodyend="749"/>
        <references refid="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" compoundref="mpaudec_8c" startline="717">OUT_SHIFT</references>
        <referencedby refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" compoundref="mpaudec_8c" startline="800" endline="873">synth_filter</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void synth_filter</definition>
        <argsstring>(MPADecodeContext *s1, int ch, int16_t *samples, int incr, int32_t sb_samples[SBLIMIT])</argsstring>
        <name>synth_filter</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>samples</declname>
        </param>
        <param>
          <type>int</type>
          <declname>incr</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>sb_samples</declname>
          <array>[SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="800" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="800" bodyend="873"/>
        <references refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" compoundref="mpaudec_8c" startline="567" endline="715">dct32</references>
        <references refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" compoundref="mpaudec_8c" startline="740" endline="749">round_sample</references>
        <references refid="mpaudec_8c_1a2862fac73b23794771a42a227312740c" compoundref="mpaudec_8c" startline="755">SUM8</references>
        <references refid="mpaudec_8c_1a575626a997c0d8380fe3cbb6293f6d2f" compoundref="mpaudec_8c" startline="767">SUM8P2</references>
        <references refid="structMPADecodeContext_1ac771177c1d16c2bdf1fb436bc2a600ba" compoundref="mpaudec_8c" startline="88">MPADecodeContext::synth_buf</references>
        <references refid="structMPADecodeContext_1abed71206798ca65d4eea7782a20b141f" compoundref="mpaudec_8c" startline="89">MPADecodeContext::synth_buf_offset</references>
        <references refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" compoundref="mpaudec_8c" startline="172">window</references>
        <referencedby refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void imdct12</definition>
        <argsstring>(int *out, int *in)</argsstring>
        <name>imdct12</name>
        <param>
          <type>int *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="885" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="885" bodyend="919"/>
        <references refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" compoundref="mpaudec_8c" startline="929">C1</references>
        <references refid="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" compoundref="mpaudec_8c" startline="881">C11</references>
        <references refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" compoundref="mpaudec_8c" startline="931">C3</references>
        <references refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" compoundref="mpaudec_8c" startline="933">C5</references>
        <references refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" compoundref="mpaudec_8c" startline="935">C7</references>
        <references refid="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" compoundref="mpaudec_8c" startline="880">C9</references>
        <references refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" compoundref="mpaudec_8c" startline="56">FRAC_RND</references>
        <references refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" compoundref="mpaudec_8c" startline="52">MUL64</references>
        <referencedby refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" compoundref="mpaudec_8c" startline="1862" endline="1960">compute_imdct</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void imdct36</definition>
        <argsstring>(int *out, int *in)</argsstring>
        <name>imdct36</name>
        <param>
          <type>int *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="976" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="976" bodyend="1052"/>
        <references refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" compoundref="mpaudec_8c" startline="929">C1</references>
        <references refid="mpaudec_8c_1ad6fc13322a4f1c314332ff34aa8b3fa0" compoundref="mpaudec_8c" startline="930">C2</references>
        <references refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" compoundref="mpaudec_8c" startline="931">C3</references>
        <references refid="mpaudec_8c_1acc39015f57b2efb8810b603f188bdf15" compoundref="mpaudec_8c" startline="932">C4</references>
        <references refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" compoundref="mpaudec_8c" startline="933">C5</references>
        <references refid="mpaudec_8c_1a3cc680a71aa57979316e647352cb4e35" compoundref="mpaudec_8c" startline="934">C6</references>
        <references refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" compoundref="mpaudec_8c" startline="935">C7</references>
        <references refid="mpaudec_8c_1a783ffd54c433250e4b595d115f410e9a" compoundref="mpaudec_8c" startline="936">C8</references>
        <references refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" compoundref="mpaudec_8c" startline="56">FRAC_RND</references>
        <references refid="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" compoundref="mpaudec_8c" startline="939">icos36</references>
        <references refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" compoundref="mpaudec_8c" startline="951">icos72</references>
        <references refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" compoundref="mpaudec_8c" startline="52">MUL64</references>
        <references refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" compoundref="mpaudec_8c" startline="51">MULL</references>
        <referencedby refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" compoundref="mpaudec_8c" startline="1862" endline="1960">compute_imdct</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a7c31d00e6546442f4894d24f15c61dd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int check_header</definition>
        <argsstring>(uint32_t header)</argsstring>
        <name>check_header</name>
        <param>
          <type>uint32_t</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1055" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1055" bodyend="1070"/>
        <referencedby refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" compoundref="mpaudec_8c" startline="2312" endline="2470">mpaudec_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int decode_header</definition>
        <argsstring>(MPADecodeContext *s, uint32_t header)</argsstring>
        <name>decode_header</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>header</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1079" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1079" bodyend="1170"/>
        <references refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" compoundref="mpaudec_8c" startline="81">MPADecodeContext::bit_rate</references>
        <references refid="structMPADecodeContext_1aaaaad5dfc4720e69591ec81301cce46f" compoundref="mpaudec_8c" startline="77">MPADecodeContext::error_protection</references>
        <references refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" compoundref="mpaudec_8c" startline="73">MPADecodeContext::frame_size</references>
        <references refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" compoundref="mpaudec_8c" startline="74">MPADecodeContext::free_format_frame_size</references>
        <references refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" compoundref="mpaudec_8c" startline="78">MPADecodeContext::layer</references>
        <references refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" compoundref="mpaudec_8c" startline="87">MPADecodeContext::lsf</references>
        <references refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" compoundref="mpaudec_8c" startline="85">MPADecodeContext::mode</references>
        <references refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" compoundref="mpaudec_8c" startline="86">MPADecodeContext::mode_ext</references>
        <references refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" compoundref="mpaudec_8c" startline="118">MODE_EXT_I_STEREO</references>
        <references refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" compoundref="mpaudec_8c" startline="117">MODE_EXT_MS_STEREO</references>
        <references refid="mpaudectab_8h_1a79d810c74ea9555579573f74c5e177f4" compoundref="mpaudectab_8h" startline="4">mpa_bitrate_tab</references>
        <references refid="mpaudectab_8h_1a2dd5687be843564d2cdf4c031368ed5e" compoundref="mpaudectab_8h" startline="14">mpa_freq_tab</references>
        <references refid="mpegaudio_8h_1a2cc2b5220d869bc6b1715543a4e5077c" compoundref="mpegaudio_8h" startline="17">MPA_MONO</references>
        <references refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" compoundref="mpaudec_8c" startline="84">MPADecodeContext::nb_channels</references>
        <references refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" compoundref="mpaudec_8c" startline="79">MPADecodeContext::sample_rate</references>
        <references refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" compoundref="mpaudec_8c" startline="80">MPADecodeContext::sample_rate_index</references>
        <referencedby refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" compoundref="mpaudec_8c" startline="2312" endline="2470">mpaudec_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1aa8d8ca6a6ace0fa4945bbf9de65c0364" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mp_decode_layer1</definition>
        <argsstring>(MPADecodeContext *s)</argsstring>
        <name>mp_decode_layer1</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1173" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1173" bodyend="1237"/>
        <references refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" compoundref="mpaudec_8c" startline="83">MPADecodeContext::gb</references>
        <references refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" compoundref="bits_8c" startline="63" endline="68">get_bits</references>
        <references refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" compoundref="mpaudec_8c" startline="176" endline="188">l1_unscale</references>
        <references refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" compoundref="mpaudec_8c" startline="85">MPADecodeContext::mode</references>
        <references refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" compoundref="mpaudec_8c" startline="86">MPADecodeContext::mode_ext</references>
        <references refid="mpegaudio_8h_1a9d38dac54746227a90eefeda2012ea65" compoundref="mpegaudio_8h" startline="15">MPA_JSTEREO</references>
        <references refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" compoundref="mpegaudio_8h" startline="10">MPA_MAX_CHANNELS</references>
        <references refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" compoundref="mpaudec_8c" startline="84">MPADecodeContext::nb_channels</references>
        <references refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" compoundref="mpaudec_8c" startline="90">MPADecodeContext::sb_samples</references>
        <references refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" compoundref="mpegaudio_8h" startline="12">SBLIMIT</references>
        <referencedby refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a60ca1fa363b8401e9a27bacf3f679d21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int l2_select_table</definition>
        <argsstring>(int bitrate, int nb_channels, int freq, int lsf)</argsstring>
        <name>l2_select_table</name>
        <param>
          <type>int</type>
          <declname>bitrate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nb_channels</declname>
        </param>
        <param>
          <type>int</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lsf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1240" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1240" bodyend="1259"/>
        <referencedby refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" compoundref="mpaudec_8c" startline="1261" endline="1467">mp_decode_layer2</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mp_decode_layer2</definition>
        <argsstring>(MPADecodeContext *s)</argsstring>
        <name>mp_decode_layer2</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1261" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1261" bodyend="1467"/>
        <references refid="bits_8c_1a3d11308e2c23c39139ae637124c8dd9d" compoundref="bits_8c" startline="96" endline="109">alloc_table</references>
        <references refid="mpaudectab_8h_1a46d3a09f0069e54ad59c4eb8f82a16ee" compoundref="mpaudectab_8h" startline="198">alloc_tables</references>
        <references refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" compoundref="mpaudec_8c" startline="81">MPADecodeContext::bit_rate</references>
        <references refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" compoundref="mpaudec_8c" startline="83">MPADecodeContext::gb</references>
        <references refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" compoundref="bits_8c" startline="63" endline="68">get_bits</references>
        <references refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" compoundref="mpaudec_8c" startline="176" endline="188">l1_unscale</references>
        <references refid="mpaudec_8c_1a60ca1fa363b8401e9a27bacf3f679d21" compoundref="mpaudec_8c" startline="1240" endline="1259">l2_select_table</references>
        <references refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" compoundref="mpaudec_8c" startline="190" endline="203">l2_unscale_group</references>
        <references refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" compoundref="mpaudec_8c" startline="87">MPADecodeContext::lsf</references>
        <references refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" compoundref="mpaudec_8c" startline="85">MPADecodeContext::mode</references>
        <references refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" compoundref="mpaudec_8c" startline="86">MPADecodeContext::mode_ext</references>
        <references refid="mpegaudio_8h_1a9d38dac54746227a90eefeda2012ea65" compoundref="mpegaudio_8h" startline="15">MPA_JSTEREO</references>
        <references refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" compoundref="mpegaudio_8h" startline="10">MPA_MAX_CHANNELS</references>
        <references refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" compoundref="mpaudec_8c" startline="84">MPADecodeContext::nb_channels</references>
        <references refid="mpaudectab_8h_1a2e17368e30468d8e9768c3ad758fbde0" compoundref="mpaudectab_8h" startline="67">quant_bits</references>
        <references refid="mpaudectab_8h_1ade9443b3de5ad76f2f87dcf869d820d0" compoundref="mpaudectab_8h" startline="59">quant_steps</references>
        <references refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" compoundref="mpaudec_8c" startline="79">MPADecodeContext::sample_rate</references>
        <references refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" compoundref="mpaudec_8c" startline="90">MPADecodeContext::sb_samples</references>
        <references refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" compoundref="mpegaudio_8h" startline="12">SBLIMIT</references>
        <references refid="mpaudectab_8h_1a476fe24349d019d744f18f9b582b916e" compoundref="mpaudectab_8h" startline="57">sblimit_table</references>
        <referencedby refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1ab3d38c0057af45f5edb7f6dc158ede46" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void seek_to_maindata</definition>
        <argsstring>(MPADecodeContext *s, unsigned int backstep)</argsstring>
        <name>seek_to_maindata</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>backstep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1472" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1472" bodyend="1490"/>
        <references refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" compoundref="mpaudec_8c" startline="67">BACKSTEP_SIZE</references>
        <references refid="structGetBitContext_1ad3bbe8f5d0b9e28a1070396fac5725d8" compoundref="internal_8h" startline="59">GetBitContext::buffer</references>
        <references refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" compoundref="mpaudec_8c" startline="73">MPADecodeContext::frame_size</references>
        <references refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" compoundref="mpaudec_8c" startline="83">MPADecodeContext::gb</references>
        <references refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" compoundref="bits_8c" startline="70" endline="73">get_bits_count</references>
        <references refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf</references>
        <references refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" compoundref="mpaudec_8c" startline="70">MPADecodeContext::inbuf1</references>
        <references refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" compoundref="mpaudec_8c" startline="71">MPADecodeContext::inbuf_index</references>
        <references refid="bits_8c_1a82a721f07b4c8c18282532ceeb0b76d3" compoundref="bits_8c" startline="30" endline="36">init_get_bits</references>
        <references refid="structMPADecodeContext_1a67b57c009b64391e56072de209e74f6c" compoundref="mpaudec_8c" startline="82">MPADecodeContext::old_frame_size</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void lsf_sf_expand</definition>
        <argsstring>(int *slen, int sf, int n1, int n2, int n3)</argsstring>
        <name>lsf_sf_expand</name>
        <param>
          <type>int *</type>
          <declname>slen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>sf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1492" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1492" bodyend="1510"/>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a19901913c3051acd8692540101edd707" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void exponents_from_scale_factors</definition>
        <argsstring>(MPADecodeContext *s, GranuleDef *g, int16_t *exponents)</argsstring>
        <name>exponents_from_scale_factors</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>exponents</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1512" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1512" bodyend="1548"/>
        <references refid="mpaudectab_8h_1a0df9a837c9c4e59df9c96e968b332633" compoundref="mpaudectab_8h" startline="731">band_size_long</references>
        <references refid="mpaudectab_8h_1a1e8700bbcb020c96472c3b65ca86be67" compoundref="mpaudectab_8h" startline="752">band_size_short</references>
        <references refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" compoundref="mpaudec_8c" startline="102">GranuleDef::global_gain</references>
        <references refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" compoundref="mpaudec_8c" startline="112">GranuleDef::long_end</references>
        <references refid="mpaudectab_8h_1aea5465f567bc3602ea982c6232acd9ca" compoundref="mpaudectab_8h" startline="764">mpa_pretab</references>
        <references refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" compoundref="mpaudec_8c" startline="111">GranuleDef::preflag</references>
        <references refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" compoundref="mpaudec_8c" startline="80">MPADecodeContext::sample_rate_index</references>
        <references refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" compoundref="mpaudec_8c" startline="113">GranuleDef::scale_factors</references>
        <references refid="structGranuleDef_1a3dcccee2507568460f6e4cccd97e9f29" compoundref="mpaudec_8c" startline="108">GranuleDef::scalefac_scale</references>
        <references refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" compoundref="mpaudec_8c" startline="112">GranuleDef::short_start</references>
        <references refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" compoundref="mpaudec_8c" startline="107">GranuleDef::subblock_gain</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_bitsz</definition>
        <argsstring>(GetBitContext *s, int n)</argsstring>
        <name>get_bitsz</name>
        <param>
          <type><ref refid="structGetBitContext" kindref="compound">GetBitContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1551" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1551" bodyend="1557"/>
        <references refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" compoundref="bits_8c" startline="63" endline="68">get_bits</references>
        <referencedby refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" compoundref="mpaudec_8c" startline="1559" endline="1661">huffman_decode</referencedby>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int huffman_decode</definition>
        <argsstring>(MPADecodeContext *s, GranuleDef *g, int16_t *exponents, int end_pos)</argsstring>
        <name>huffman_decode</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>exponents</declname>
        </param>
        <param>
          <type>int</type>
          <declname>end_pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1559" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1559" bodyend="1661"/>
        <references refid="structGetBitContext_1ad3bbe8f5d0b9e28a1070396fac5725d8" compoundref="internal_8h" startline="59">GetBitContext::buffer</references>
        <references refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" compoundref="mpaudec_8c" startline="109">GranuleDef::count1table_select</references>
        <references refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" compoundref="mpaudec_8c" startline="83">MPADecodeContext::gb</references>
        <references refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" compoundref="bits_8c" startline="63" endline="68">get_bits</references>
        <references refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" compoundref="bits_8c" startline="70" endline="73">get_bits_count</references>
        <references refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" compoundref="mpaudec_8c" startline="1551" endline="1557">get_bitsz</references>
        <references refid="bits_8c_1ad9d1cef202cce95b0fd843505647ae2c" compoundref="bits_8c" startline="253" endline="273">get_vlc</references>
        <references refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" compoundref="mpaudec_8c" startline="131">huff_code_table</references>
        <references refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" compoundref="mpaudec_8c" startline="206" endline="232">l3_unscale</references>
        <references refid="mpaudectab_8h_1a139074012154398b66c1aa5a269a3b3b" compoundref="mpaudectab_8h" startline="683">mpa_huff_data</references>
        <references refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" compoundref="mpaudec_8c" startline="110">GranuleDef::region_size</references>
        <references refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" compoundref="mpaudec_8c" startline="114">GranuleDef::sb_hybrid</references>
        <references refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" compoundref="mpaudec_8c" startline="106">GranuleDef::table_select</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1ac3d939325754cbedaaf6bd1300da0f81" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void reorder_block</definition>
        <argsstring>(MPADecodeContext *s, GranuleDef *g)</argsstring>
        <name>reorder_block</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1666" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1666" bodyend="1697"/>
        <references refid="mpaudectab_8h_1a1e8700bbcb020c96472c3b65ca86be67" compoundref="mpaudectab_8h" startline="752">band_size_short</references>
        <references refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" compoundref="mpaudec_8c" startline="104">GranuleDef::block_type</references>
        <references refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" compoundref="mpaudec_8c" startline="80">MPADecodeContext::sample_rate_index</references>
        <references refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" compoundref="mpaudec_8c" startline="114">GranuleDef::sb_hybrid</references>
        <references refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" compoundref="mpaudec_8c" startline="112">GranuleDef::short_start</references>
        <references refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" compoundref="mpaudec_8c" startline="105">GranuleDef::switch_point</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_stereo</definition>
        <argsstring>(MPADecodeContext *s, GranuleDef *g0, GranuleDef *g1)</argsstring>
        <name>compute_stereo</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g0</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1701" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1701" bodyend="1826"/>
        <references refid="mpaudectab_8h_1a0df9a837c9c4e59df9c96e968b332633" compoundref="mpaudectab_8h" startline="731">band_size_long</references>
        <references refid="mpaudectab_8h_1a1e8700bbcb020c96472c3b65ca86be67" compoundref="mpaudectab_8h" startline="752">band_size_short</references>
        <references refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" compoundref="mpaudec_8c" startline="144">is_table</references>
        <references refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" compoundref="mpaudec_8c" startline="145">is_table_lsf</references>
        <references refid="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" compoundref="mpaudec_8c" startline="1699">ISQRT2</references>
        <references refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" compoundref="mpaudec_8c" startline="112">GranuleDef::long_end</references>
        <references refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" compoundref="mpaudec_8c" startline="87">MPADecodeContext::lsf</references>
        <references refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" compoundref="mpaudec_8c" startline="86">MPADecodeContext::mode_ext</references>
        <references refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" compoundref="mpaudec_8c" startline="118">MODE_EXT_I_STEREO</references>
        <references refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" compoundref="mpaudec_8c" startline="117">MODE_EXT_MS_STEREO</references>
        <references refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" compoundref="mpaudec_8c" startline="51">MULL</references>
        <references refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" compoundref="mpaudec_8c" startline="80">MPADecodeContext::sample_rate_index</references>
        <references refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" compoundref="mpaudec_8c" startline="114">GranuleDef::sb_hybrid</references>
        <references refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" compoundref="mpaudec_8c" startline="113">GranuleDef::scale_factors</references>
        <references refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" compoundref="mpaudec_8c" startline="103">GranuleDef::scalefac_compress</references>
        <references refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" compoundref="mpaudec_8c" startline="112">GranuleDef::short_start</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_antialias</definition>
        <argsstring>(MPADecodeContext *s, GranuleDef *g)</argsstring>
        <name>compute_antialias</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1828" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1828" bodyend="1860"/>
        <references refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" compoundref="mpaudec_8c" startline="104">GranuleDef::block_type</references>
        <references refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" compoundref="mpaudec_8c" startline="146">csa_table</references>
        <references refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" compoundref="mpaudec_8c" startline="56">FRAC_RND</references>
        <references refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" compoundref="mpaudec_8c" startline="52">MUL64</references>
        <references refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" compoundref="mpaudec_8c" startline="114">GranuleDef::sb_hybrid</references>
        <references refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" compoundref="mpegaudio_8h" startline="12">SBLIMIT</references>
        <references refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" compoundref="mpaudec_8c" startline="105">GranuleDef::switch_point</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void compute_imdct</definition>
        <argsstring>(MPADecodeContext *s, GranuleDef *g, int32_t *sb_samples, int32_t *mdct_buf)</argsstring>
        <name>compute_imdct</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref> *</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>sb_samples</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>mdct_buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1862" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1862" bodyend="1960"/>
        <references refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" compoundref="mpaudec_8c" startline="104">GranuleDef::block_type</references>
        <references refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" compoundref="mpaudec_8c" startline="885" endline="919">imdct12</references>
        <references refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" compoundref="mpaudec_8c" startline="976" endline="1052">imdct36</references>
        <references refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" compoundref="mpaudec_8c" startline="147">mdct_win</references>
        <references refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" compoundref="mpaudec_8c" startline="51">MULL</references>
        <references refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" compoundref="mpaudec_8c" startline="114">GranuleDef::sb_hybrid</references>
        <references refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" compoundref="mpegaudio_8h" startline="12">SBLIMIT</references>
        <references refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" compoundref="mpaudec_8c" startline="105">GranuleDef::switch_point</references>
        <referencedby refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mp_decode_layer3</definition>
        <argsstring>(MPADecodeContext *s)</argsstring>
        <name>mp_decode_layer3</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="1963" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="1963" bodyend="2256"/>
        <references refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" compoundref="mpaudec_8c" startline="134">band_index_long</references>
        <references refid="structGranuleDef_1a98900bb32f17566b7baf3991c9bf7345" compoundref="mpaudec_8c" startline="101">GranuleDef::big_values</references>
        <references refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" compoundref="mpaudec_8c" startline="104">GranuleDef::block_type</references>
        <references refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" compoundref="mpaudec_8c" startline="1828" endline="1860">compute_antialias</references>
        <references refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" compoundref="mpaudec_8c" startline="1862" endline="1960">compute_imdct</references>
        <references refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" compoundref="mpaudec_8c" startline="1701" endline="1826">compute_stereo</references>
        <references refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" compoundref="mpaudec_8c" startline="109">GranuleDef::count1table_select</references>
        <references refid="mpaudec_8c_1a19901913c3051acd8692540101edd707" compoundref="mpaudec_8c" startline="1512" endline="1548">exponents_from_scale_factors</references>
        <references refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" compoundref="mpaudec_8c" startline="83">MPADecodeContext::gb</references>
        <references refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" compoundref="bits_8c" startline="63" endline="68">get_bits</references>
        <references refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" compoundref="bits_8c" startline="70" endline="73">get_bits_count</references>
        <references refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" compoundref="mpaudec_8c" startline="1551" endline="1557">get_bitsz</references>
        <references refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" compoundref="mpaudec_8c" startline="102">GranuleDef::global_gain</references>
        <references refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" compoundref="mpaudec_8c" startline="1559" endline="1661">huffman_decode</references>
        <references refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" compoundref="mpaudec_8c" startline="112">GranuleDef::long_end</references>
        <references refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" compoundref="mpaudec_8c" startline="87">MPADecodeContext::lsf</references>
        <references refid="mpaudectab_8h_1aa586feefea61f07471609a8e741ec04d" compoundref="mpaudectab_8h" startline="211">lsf_nsf_table</references>
        <references refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" compoundref="mpaudec_8c" startline="1492" endline="1510">lsf_sf_expand</references>
        <references refid="structMPADecodeContext_1aefa78c13626ac754088af8c6569eb15a" compoundref="mpaudec_8c" startline="91">MPADecodeContext::mdct_buf</references>
        <references refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" compoundref="mpaudec_8c" startline="86">MPADecodeContext::mode_ext</references>
        <references refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" compoundref="mpaudec_8c" startline="118">MODE_EXT_I_STEREO</references>
        <references refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" compoundref="mpaudec_8c" startline="117">MODE_EXT_MS_STEREO</references>
        <references refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" compoundref="mpaudec_8c" startline="84">MPADecodeContext::nb_channels</references>
        <references refid="structGranuleDef_1ab00cb930095ddb1bab8c6e030add28d6" compoundref="mpaudec_8c" startline="100">GranuleDef::part2_3_length</references>
        <references refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" compoundref="mpaudec_8c" startline="111">GranuleDef::preflag</references>
        <references refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" compoundref="mpaudec_8c" startline="110">GranuleDef::region_size</references>
        <references refid="mpaudec_8c_1ac3d939325754cbedaaf6bd1300da0f81" compoundref="mpaudec_8c" startline="1666" endline="1697">reorder_block</references>
        <references refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" compoundref="mpaudec_8c" startline="80">MPADecodeContext::sample_rate_index</references>
        <references refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" compoundref="mpaudec_8c" startline="90">MPADecodeContext::sb_samples</references>
        <references refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" compoundref="mpaudec_8c" startline="113">GranuleDef::scale_factors</references>
        <references refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" compoundref="mpaudec_8c" startline="103">GranuleDef::scalefac_compress</references>
        <references refid="structGranuleDef_1a3dcccee2507568460f6e4cccd97e9f29" compoundref="mpaudec_8c" startline="108">GranuleDef::scalefac_scale</references>
        <references refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" compoundref="mpaudec_8c" startline="99">GranuleDef::scfsi</references>
        <references refid="mpaudec_8c_1ab3d38c0057af45f5edb7f6dc158ede46" compoundref="mpaudec_8c" startline="1472" endline="1490">seek_to_maindata</references>
        <references refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" compoundref="mpaudec_8c" startline="112">GranuleDef::short_start</references>
        <references refid="bits_8c_1aea74eea48a18a3731b052ac530f6afce" compoundref="bits_8c" startline="58" endline="61">skip_bits</references>
        <references refid="mpaudectab_8h_1a362147b898fe434776eff40b414df115" compoundref="mpaudectab_8h" startline="205">slen_table</references>
        <references refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" compoundref="mpaudec_8c" startline="107">GranuleDef::subblock_gain</references>
        <references refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" compoundref="mpaudec_8c" startline="105">GranuleDef::switch_point</references>
        <references refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" compoundref="mpaudec_8c" startline="106">GranuleDef::table_select</references>
        <referencedby refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mp_decode_frame</definition>
        <argsstring>(MPADecodeContext *s, int16_t *samples)</argsstring>
        <name>mp_decode_frame</name>
        <param>
          <type><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int16_t *</type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="2258" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="2258" bodyend="2310"/>
        <references refid="structMPADecodeContext_1aaaaad5dfc4720e69591ec81301cce46f" compoundref="mpaudec_8c" startline="77">MPADecodeContext::error_protection</references>
        <references refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" compoundref="mpaudec_8c" startline="49">FRAC_ONE</references>
        <references refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" compoundref="mpaudec_8c" startline="83">MPADecodeContext::gb</references>
        <references refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" compoundref="bits_8c" startline="63" endline="68">get_bits</references>
        <references refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" compoundref="mpaudec_8c" startline="66">HEADER_SIZE</references>
        <references refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf</references>
        <references refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf_ptr</references>
        <references refid="bits_8c_1a82a721f07b4c8c18282532ceeb0b76d3" compoundref="bits_8c" startline="30" endline="36">init_get_bits</references>
        <references refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" compoundref="mpaudec_8c" startline="78">MPADecodeContext::layer</references>
        <references refid="mpaudec_8c_1aa8d8ca6a6ace0fa4945bbf9de65c0364" compoundref="mpaudec_8c" startline="1173" endline="1237">mp_decode_layer1</references>
        <references refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" compoundref="mpaudec_8c" startline="1261" endline="1467">mp_decode_layer2</references>
        <references refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" compoundref="mpaudec_8c" startline="1963" endline="2256">mp_decode_layer3</references>
        <references refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" compoundref="mpaudec_8c" startline="84">MPADecodeContext::nb_channels</references>
        <references refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" compoundref="mpaudec_8c" startline="90">MPADecodeContext::sb_samples</references>
        <references refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" compoundref="mpegaudio_8h" startline="12">SBLIMIT</references>
        <references refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" compoundref="mpaudec_8c" startline="800" endline="873">synth_filter</references>
        <referencedby refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" compoundref="mpaudec_8c" startline="2312" endline="2470">mpaudec_decode_frame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int mpaudec_decode_frame</definition>
        <argsstring>(MPAuDecContext *mpctx, void *data, int *data_size, const uint8_t *buf, int buf_size)</argsstring>
        <name>mpaudec_decode_frame</name>
        <param>
          <type><ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref> *</type>
          <declname>mpctx</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>data_size</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buf_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="2312" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="2312" bodyend="2470"/>
        <references refid="structMPAuDecContext_1ad65f95dc72d0c3d64744c88b194aa904" compoundref="mpaudec_8h" startline="14">MPAuDecContext::bit_rate</references>
        <references refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" compoundref="mpaudec_8c" startline="81">MPADecodeContext::bit_rate</references>
        <references refid="structMPAuDecContext_1a988371375f0a8b976370718f06ed8dcd" compoundref="mpaudec_8h" startline="17">MPAuDecContext::channels</references>
        <references refid="mpaudec_8c_1a7c31d00e6546442f4894d24f15c61dd6" compoundref="mpaudec_8c" startline="1055" endline="1070">check_header</references>
        <references refid="structMPAuDecContext_1ad2b0b51f7e58b391bb558e4e910d86de" compoundref="mpaudec_8h" startline="21">MPAuDecContext::coded_frame_size</references>
        <references refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" compoundref="mpaudec_8c" startline="1079" endline="1170">decode_header</references>
        <references refid="structMPAuDecContext_1a11e79ba1890ab90c7facb5e602debf01" compoundref="mpaudec_8h" startline="18">MPAuDecContext::frame_size</references>
        <references refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" compoundref="mpaudec_8c" startline="73">MPADecodeContext::frame_size</references>
        <references refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" compoundref="mpaudec_8c" startline="74">MPADecodeContext::free_format_frame_size</references>
        <references refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" compoundref="mpaudec_8c" startline="66">HEADER_SIZE</references>
        <references refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf</references>
        <references refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" compoundref="mpaudec_8c" startline="72">MPADecodeContext::inbuf_ptr</references>
        <references refid="structMPAuDecContext_1adc7047707acb5823b3c23c1b56dd84a4" compoundref="mpaudec_8h" startline="15">MPAuDecContext::layer</references>
        <references refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" compoundref="mpaudec_8c" startline="78">MPADecodeContext::layer</references>
        <references refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" compoundref="mpaudec_8c" startline="87">MPADecodeContext::lsf</references>
        <references refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" compoundref="mpaudec_8c" startline="2258" endline="2310">mp_decode_frame</references>
        <references refid="mpegaudio_8h_1afe766840654774677e78f6baf94c88dc" compoundref="mpegaudio_8h" startline="8">MPA_MAX_CODED_FRAME_SIZE</references>
        <references refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" compoundref="mpaudec_8c" startline="84">MPADecodeContext::nb_channels</references>
        <references refid="structMPAuDecContext_1ac1e30ced961e8cdc9af6dcdbbde6acd5" compoundref="mpaudec_8h" startline="20">MPAuDecContext::parse_only</references>
        <references refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" compoundref="mpaudec_8h" startline="19">MPAuDecContext::priv_data</references>
        <references refid="mpaudec_8c_1a2bb2d7ffb7f980fa7537e3f9e1e69c16" compoundref="mpaudec_8c" startline="1073">SAME_HEADER_MASK</references>
        <references refid="structMPAuDecContext_1a36e44d2b96644df34b619a854e1abc74" compoundref="mpaudec_8h" startline="16">MPAuDecContext::sample_rate</references>
        <references refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" compoundref="mpaudec_8c" startline="79">MPADecodeContext::sample_rate</references>
        <referencedby refid="classirrklang_1_1CIrrKlangAudioStreamMP3_1a0694b0e9c0ca306701236b660a11633d" compoundref="CIrrKlangAudioStreamMP3_8cpp" startline="146" endline="207">irrklang::CIrrKlangAudioStreamMP3::decodeFrame</referencedby>
      </memberdef>
      <memberdef kind="function" id="mpaudec_8c_1ab0a860386211b1374764b470cc56129b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mpaudec_clear</definition>
        <argsstring>(MPAuDecContext *mpctx)</argsstring>
        <name>mpaudec_clear</name>
        <param>
          <type><ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref> *</type>
          <declname>mpctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" line="2472" column="1" bodyfile="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c" bodystart="2472" bodyend="2477"/>
        <references refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" compoundref="mpaudec_8h" startline="19">MPAuDecContext::priv_data</references>
        <referencedby refid="classirrklang_1_1CIrrKlangAudioStreamMP3_1ae615c171d074153463af08a11118ceaf" compoundref="CIrrKlangAudioStreamMP3_8cpp" startline="215" endline="306">irrklang::CIrrKlangAudioStreamMP3::setPosition</referencedby>
        <referencedby refid="classirrklang_1_1CIrrKlangAudioStreamMP3_1ae223aa810305f5a13e3aba97b525e048" compoundref="CIrrKlangAudioStreamMP3_8cpp" startline="86" endline="98">irrklang::CIrrKlangAudioStreamMP3::~CIrrKlangAudioStreamMP3</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>MPEG<sp/>Audio<sp/>decoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2001,<sp/>2002<sp/>Fabrice<sp/>Bellard.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Modified<sp/>heavily<sp/>by<sp/>Matt<sp/>Campbell<sp/>&lt;mattcampbell@pobox.com&gt;<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>stand-alone<sp/>mpaudec<sp/>library.<sp/><sp/>Based<sp/>on<sp/>mpegaudiodec.c<sp/>from<sp/>libavcodec.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>DEBUG*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="internal_8h" kindref="compound">internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpegaudio_8h" kindref="compound">mpegaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4244)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>TODO:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>in<sp/>low<sp/>precision<sp/>mode,<sp/>use<sp/>more<sp/>16<sp/>bit<sp/>multiplies<sp/>in<sp/>synth<sp/>filter</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>test<sp/>lsf<sp/>/<sp/>mpeg25<sp/>extensively.</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>define<sp/>USE_HIGHPRECISION<sp/>to<sp/>have<sp/>a<sp/>bit<sp/>exact<sp/>(but<sp/>slower)<sp/>mpeg</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>audio<sp/>decoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="mpaudec_8c_1af509079bdc3b387e5b67a1e551276913" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USE_HIGHPRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_HIGHPRECISION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAC_BITS<sp/><sp/><sp/>23<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>bits<sp/>for<sp/>sb_samples<sp/>and<sp/>dct<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="mpaudec_8c_1a1b4651c62d39bf11121b02dd6233818e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WFRAC_BITS<sp/><sp/>16<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>bits<sp/>for<sp/>window<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAC_BITS<sp/><sp/><sp/>15<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>bits<sp/>for<sp/>sb_samples<sp/>and<sp/>dct<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WFRAC_BITS<sp/><sp/>14<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fractional<sp/>bits<sp/>for<sp/>window<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAC_ONE<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>FRAC_BITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULL(a,b)<sp/>(((int64_t)(a)<sp/>*<sp/>(int64_t)(b))<sp/>&gt;&gt;<sp/>FRAC_BITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MUL64(a,b)<sp/>((int64_t)(a)<sp/>*<sp/>(int64_t)(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="mpaudec_8c_1a88cf220be3bb27c93f7a42530b7b15b8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIX(a)<sp/><sp/><sp/>((int)((a)<sp/>*<sp/>FRAC_ONE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WARNING:<sp/>only<sp/>correct<sp/>for<sp/>posititive<sp/>numbers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIXR(a)<sp/><sp/><sp/>((int)((a)<sp/>*<sp/>FRAC_ONE<sp/>+<sp/>0.5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAC_RND(a)<sp/>(((a)<sp/>+<sp/>(FRAC_ONE/2))<sp/>&gt;&gt;<sp/>FRAC_BITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int16_t<sp/><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEADER_SIZE<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BACKSTEP_SIZE<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structMPADecodeContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>{</highlight></codeline>
<codeline lineno="70" refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" kindref="member">inbuf1</ref>[2][<ref refid="mpegaudio_8h_1afe766840654774677e78f6baf94c88dc" kindref="member">MPA_MAX_CODED_FRAME_SIZE</ref><sp/>+<sp/><ref refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" kindref="member">BACKSTEP_SIZE</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" kindref="member">inbuf_index</ref>;</highlight></codeline>
<codeline lineno="72" refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>,<sp/>*<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="73" refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref>;</highlight></codeline>
<codeline lineno="74" refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref>;<sp/></highlight><highlight class="comment">/*<sp/>frame<sp/>size<sp/>in<sp/>case<sp/>of<sp/>free<sp/>format</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(zero<sp/>if<sp/>currently<sp/>unknown)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>header<sp/>(used<sp/>in<sp/>free<sp/>format<sp/>parsing)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structMPADecodeContext_1aaaaad5dfc4720e69591ec81301cce46f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1aaaaad5dfc4720e69591ec81301cce46f" kindref="member">error_protection</ref>;</highlight></codeline>
<codeline lineno="78" refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="79" refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" kindref="member">sample_rate</ref>;</highlight></codeline>
<codeline lineno="80" refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>;<sp/></highlight><highlight class="comment">/*<sp/>between<sp/>0<sp/>and<sp/>8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref>;</highlight></codeline>
<codeline lineno="82" refid="structMPADecodeContext_1a67b57c009b64391e56072de209e74f6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a67b57c009b64391e56072de209e74f6c" kindref="member">old_frame_size</ref>;</highlight></codeline>
<codeline lineno="83" refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGetBitContext" kindref="compound">GetBitContext</ref><sp/><ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>;</highlight></codeline>
<codeline lineno="84" refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;</highlight></codeline>
<codeline lineno="85" refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="86" refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref>;</highlight></codeline>
<codeline lineno="87" refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>;</highlight></codeline>
<codeline lineno="88" refid="structMPADecodeContext_1ac771177c1d16c2bdf1fb436bc2a600ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref><sp/><ref refid="structMPADecodeContext_1ac771177c1d16c2bdf1fb436bc2a600ba" kindref="member">synth_buf</ref>[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][512<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="89" refid="structMPADecodeContext_1abed71206798ca65d4eea7782a20b141f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structMPADecodeContext_1abed71206798ca65d4eea7782a20b141f" kindref="member">synth_buf_offset</ref>[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>];</highlight></codeline>
<codeline lineno="90" refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][36][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>];</highlight></codeline>
<codeline lineno="91" refid="structMPADecodeContext_1aefa78c13626ac754088af8c6569eb15a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structMPADecodeContext_1aefa78c13626ac754088af8c6569eb15a" kindref="member">mdct_buf</ref>[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref><sp/>*<sp/>18];<sp/></highlight><highlight class="comment">/*<sp/>previous<sp/>samples,<sp/>for<sp/>layer<sp/>3<sp/>MDCT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_count;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}<sp/><ref refid="mpaudec_8c_1a93ee162a082c1f873ab43ff0b3a46eaa" kindref="member">MPADecodeContext</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>layer<sp/>3<sp/>&quot;granule&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structGranuleDef" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>{</highlight></codeline>
<codeline lineno="99" refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" kindref="member">scfsi</ref>;</highlight></codeline>
<codeline lineno="100" refid="structGranuleDef_1ab00cb930095ddb1bab8c6e030add28d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1ab00cb930095ddb1bab8c6e030add28d6" kindref="member">part2_3_length</ref>;</highlight></codeline>
<codeline lineno="101" refid="structGranuleDef_1a98900bb32f17566b7baf3991c9bf7345" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1a98900bb32f17566b7baf3991c9bf7345" kindref="member">big_values</ref>;</highlight></codeline>
<codeline lineno="102" refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" kindref="member">global_gain</ref>;</highlight></codeline>
<codeline lineno="103" refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref>;</highlight></codeline>
<codeline lineno="104" refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref>;</highlight></codeline>
<codeline lineno="105" refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref>;</highlight></codeline>
<codeline lineno="106" refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" kindref="member">table_select</ref>[3];</highlight></codeline>
<codeline lineno="107" refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" kindref="member">subblock_gain</ref>[3];</highlight></codeline>
<codeline lineno="108" refid="structGranuleDef_1a3dcccee2507568460f6e4cccd97e9f29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structGranuleDef_1a3dcccee2507568460f6e4cccd97e9f29" kindref="member">scalefac_scale</ref>;</highlight></codeline>
<codeline lineno="109" refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" kindref="member">count1table_select</ref>;</highlight></codeline>
<codeline lineno="110" refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[3];<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>huffman<sp/>codes<sp/>in<sp/>each<sp/>region<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" kindref="member">preflag</ref>;</highlight></codeline>
<codeline lineno="112" refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref>,<sp/><ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref>;<sp/></highlight><highlight class="comment">/*<sp/>long/short<sp/>band<sp/>indexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[40];</highlight></codeline>
<codeline lineno="114" refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>[<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref><sp/>*<sp/>18];<sp/></highlight><highlight class="comment">/*<sp/>576<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}<sp/><ref refid="mpaudec_8c_1ae75506d768d2434c11992cbd53a6008f" kindref="member">GranuleDef</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODE_EXT_MS_STEREO<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MODE_EXT_I_STEREO<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>layer<sp/>3<sp/>huffman<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structHuffTable" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structHuffTable" kindref="compound">HuffTable</ref><sp/>{</highlight></codeline>
<codeline lineno="122" refid="structHuffTable_1a6e1599b5da1a99639f9394e553aa5c89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structHuffTable_1a6e1599b5da1a99639f9394e553aa5c89" kindref="member">xsize</ref>;</highlight></codeline>
<codeline lineno="123" refid="structHuffTable_1a3971691ed3ef40ac4ab71aa72a7cd2f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="structHuffTable_1a3971691ed3ef40ac4ab71aa72a7cd2f0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="124" refid="structHuffTable_1a6693a947aa07344e5a5a378c0e8a1157" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*<ref refid="structHuffTable_1a6693a947aa07344e5a5a378c0e8a1157" kindref="member">codes</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}<sp/><ref refid="mpaudec_8c_1ac728ac758c3a53e5ec867fe78b26c72f" kindref="member">HuffTable</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="mpaudectab_8h" kindref="compound">mpaudectab.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>vlc<sp/>structure<sp/>for<sp/>decoding<sp/>layer<sp/>3<sp/>huffman<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="mpaudec_8c_1a3c8e91beb7003cf0c6e60aca1fb87567" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structVLC" kindref="compound">VLC</ref><sp/><ref refid="mpaudec_8c_1a3c8e91beb7003cf0c6e60aca1fb87567" kindref="member">huff_vlc</ref>[16];<sp/></highlight></codeline>
<codeline lineno="131" refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<ref refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" kindref="member">huff_code_table</ref>[16];</highlight></codeline>
<codeline lineno="132" refid="mpaudec_8c_1a2fc33165dd7b4caa21273223e87eefd9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structVLC" kindref="compound">VLC</ref><sp/><ref refid="mpaudec_8c_1a2fc33165dd7b4caa21273223e87eefd9" kindref="member">huff_quad_vlc</ref>[2];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>computed<sp/>from<sp/>band_size_long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" kindref="member">band_index_long</ref>[9][23];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XXX:<sp/>free<sp/>when<sp/>all<sp/>decoders<sp/>are<sp/>closed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_4_3_SIZE<sp/>(8191<sp/>+<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int8_t<sp/><sp/><ref refid="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" kindref="member">table_4_3_exp</ref>[<ref refid="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" kindref="member">TABLE_4_3_SIZE</ref>];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" kindref="member">table_4_3_value</ref>[<ref refid="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" kindref="member">TABLE_4_3_SIZE</ref>];</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" kindref="member">table_4_3_value</ref>[<ref refid="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" kindref="member">TABLE_4_3_SIZE</ref>];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>intensity<sp/>stereo<sp/>coef<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" kindref="member">is_table</ref>[2][16];</highlight></codeline>
<codeline lineno="145" refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" kindref="member">is_table_lsf</ref>[2][2][16];</highlight></codeline>
<codeline lineno="146" refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" kindref="member">csa_table</ref>[8][2];</highlight></codeline>
<codeline lineno="147" refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[8][36];</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lower<sp/>2<sp/>bits:<sp/>modulo<sp/>3,<sp/>higher<sp/>bits:<sp/>shift<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" kindref="member">scale_factor_modshift</ref>[64];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>[i][j]:<sp/><sp/>2^(-j/3)<sp/>*<sp/>FRAC_ONE<sp/>*<sp/>2^(i+2)<sp/>/<sp/>(2^(i+2)<sp/>-<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[15][3];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>mult<sp/>table<sp/>for<sp/>layer<sp/>2<sp/>group<sp/>quantization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCALE_GEN(v)<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor">{<sp/>FIXR(1.0<sp/>*<sp/>(v)),<sp/>FIXR(0.7937005259<sp/>*<sp/>(v)),<sp/>FIXR(0.6299605249<sp/>*<sp/>(v))<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="mpaudec_8c_1aecb12bd4c6a16e8479ac3518b44718a5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="mpaudec_8c_1aecb12bd4c6a16e8479ac3518b44718a5" kindref="member">scale_factor_mult2</ref>[3][3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" kindref="member">SCALE_GEN</ref>(4.0<sp/>/<sp/>3.0),<sp/></highlight><highlight class="comment">/*<sp/>3<sp/>steps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" kindref="member">SCALE_GEN</ref>(4.0<sp/>/<sp/>5.0),<sp/></highlight><highlight class="comment">/*<sp/>5<sp/>steps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a49d837f343fe8318d0518ca76a2bd2e8" kindref="member">SCALE_GEN</ref>(4.0<sp/>/<sp/>9.0),<sp/></highlight><highlight class="comment">/*<sp/>9<sp/>steps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>2^(n/4)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="mpaudec_8c_1aefc26336d8e48f84bd1b02eba1e03b49" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="mpaudec_8c_1aefc26336d8e48f84bd1b02eba1e03b49" kindref="member">scale_factor_mult3</ref>[4]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0),</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.18920711500272106671),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.41421356237309504880),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.68179283050742908605),</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref><sp/><ref refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" kindref="member">window</ref>[512];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>layer<sp/>1<sp/>unscaling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>n<sp/>=<sp/>number<sp/>of<sp/>bits<sp/>of<sp/>the<sp/>mantissa<sp/>minus<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mant,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale_factor)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift,<sp/>mod;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>val;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>=<sp/><ref refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" kindref="member">scale_factor_modshift</ref>[scale_factor];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>mod<sp/>=<sp/>shift<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(mant<sp/>+<sp/>(-1<sp/>&lt;&lt;<sp/>n)<sp/>+<sp/>1,<sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[n-1][mod]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>at<sp/>this<sp/>point,<sp/>1<sp/>&lt;=<sp/>shift<sp/>&gt;=<sp/>21<sp/>+<sp/>15<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((val<sp/>+<sp/>((int64_t)(1)<sp/>&lt;&lt;<sp/>(shift<sp/>-<sp/>1)))<sp/>&gt;&gt;<sp/>shift);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>steps,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mant,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale_factor)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift,<sp/>mod,<sp/>val;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>=<sp/><ref refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" kindref="member">scale_factor_modshift</ref>[scale_factor];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>mod<sp/>=<sp/>shift<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(mant<sp/>-<sp/>(steps<sp/>&gt;&gt;<sp/>1))<sp/>*<sp/><ref refid="mpaudec_8c_1aecb12bd4c6a16e8479ac3518b44718a5" kindref="member">scale_factor_mult2</ref>[steps<sp/>&gt;&gt;<sp/>2][mod];</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>at<sp/>this<sp/>point,<sp/>0<sp/>&lt;=<sp/>shift<sp/>&lt;=<sp/>21<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shift<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(val<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>(shift<sp/>-<sp/>1)))<sp/>&gt;&gt;<sp/>shift;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>compute<sp/>value^(4/3)<sp/>*<sp/>2^(exponent/4).<sp/>It<sp/>normalized<sp/>to<sp/>FRAC_BITS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" kindref="member">l3_unscale</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exponent)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>m;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" kindref="member">table_4_3_exp</ref>[value];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>+=<sp/>(exponent<sp/>&gt;&gt;<sp/>2);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref><sp/>-<sp/>e;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(e<sp/>&gt;<sp/>31)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>31;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/><ref refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" kindref="member">table_4_3_value</ref>[value];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(m<sp/>*<sp/><ref refid="mpaudec_8c_1aefc26336d8e48f84bd1b02eba1e03b49" kindref="member">scale_factor_mult3</ref>[exponent<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(m<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>(e-1)))<sp/>&gt;&gt;<sp/>e;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(m,<sp/><ref refid="mpaudec_8c_1aefc26336d8e48f84bd1b02eba1e03b49" kindref="member">scale_factor_mult3</ref>[exponent<sp/>&amp;<sp/>3]);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>m<sp/>=<sp/>(m<sp/>+<sp/>((uint64_t)(1)<sp/>&lt;&lt;<sp/>(e-1)))<sp/>&gt;&gt;<sp/>e;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>all<sp/>integer<sp/>n^(4/3)<sp/>computation<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEV_ORDER<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POW_FRAC_BITS<sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="mpaudec_8c_1a828f92b290aa8d1789b59ad77e2eed90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POW_FRAC_ONE<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>POW_FRAC_BITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POW_FIX(a)<sp/><sp/><sp/>((int)((a)<sp/>*<sp/>POW_FRAC_ONE))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POW_MULL(a,b)<sp/>(((int64_t)(a)<sp/>*<sp/>(int64_t)(b))<sp/>&gt;&gt;<sp/>POW_FRAC_BITS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" kindref="member">dev_4_3_coefs</ref>[<ref refid="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" kindref="member">DEV_ORDER</ref>];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="mpaudec_8c_1a1aa354d7efec2cf4d036fad885a957d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a1aa354d7efec2cf4d036fad885a957d1" kindref="member">pow_mult3</ref>[3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.0),</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.25992104989487316476),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.58740105196819947474),</highlight></codeline>
<codeline lineno="248"><highlight class="normal">};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" kindref="member">int_pow_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>a;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/><ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" kindref="member">DEV_ORDER</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/><ref refid="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" kindref="member">POW_MULL</ref>(a,<sp/><ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(4.0<sp/>/<sp/>3.0)<sp/>-<sp/>i<sp/>*<sp/><ref refid="mpaudec_8c_1a2920d05c2cabb7df657c603392aa9bfd" kindref="member">POW_FIX</ref>(1.0))<sp/>/<sp/>(i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" kindref="member">dev_4_3_coefs</ref>[i]<sp/>=<sp/>a;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>mantissa<sp/>and<sp/>the<sp/>binary<sp/>exponent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" kindref="member">int_pow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*exp_ptr)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e,<sp/>er,<sp/>eq,<sp/>j;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a,<sp/>a1;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>renormalize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/><ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>(1<sp/>&lt;&lt;<sp/>(<ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref><sp/>-<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e--;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>-=<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>a1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/><ref refid="mpaudec_8c_1aa86a30a49105143d093ce4586770eff7" kindref="member">DEV_ORDER</ref><sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>j--)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1<sp/>=<sp/><ref refid="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" kindref="member">POW_MULL</ref>(a,<sp/><ref refid="mpaudec_8c_1a48a401897b4d851fe7efe8e95459f8ed" kindref="member">dev_4_3_coefs</ref>[j]<sp/>+<sp/>a1);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref>)<sp/>+<sp/>a1;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>exponent<sp/>compute<sp/>(exact)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>e<sp/>=<sp/>e<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>er<sp/>=<sp/>e<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>eq<sp/>=<sp/>e<sp/>/<sp/>3;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/><ref refid="mpaudec_8c_1a88e4741e7cd7cb5cb99cd3ab099d0e97" kindref="member">POW_MULL</ref>(a,<sp/><ref refid="mpaudec_8c_1a1aa354d7efec2cf4d036fad885a957d1" kindref="member">pow_mult3</ref>[er]);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>2<sp/>*<sp/><ref refid="mpaudec_8c_1a828f92b290aa8d1789b59ad77e2eed90" kindref="member">POW_FRAC_ONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eq++;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>float<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/><ref refid="mpaudec_8c_1a828f92b290aa8d1789b59ad77e2eed90" kindref="member">POW_FRAC_ONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eq--;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>POW_FRAC_ONE<sp/>&lt;=<sp/>a<sp/>&lt;<sp/>2<sp/>*<sp/>POW_FRAC_ONE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>POW_FRAC_BITS<sp/>&gt;<sp/>FRAC_BITS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>a<sp/>=<sp/>(a<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>(<ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref><sp/>-<sp/><ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref><sp/>-<sp/>1)))<sp/>&gt;&gt;<sp/>(<ref refid="mpaudec_8c_1a5514197834ba52bc1337f162439b682b" kindref="member">POW_FRAC_BITS</ref><sp/>-<sp/><ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>correct<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>2<sp/>*<sp/>(1<sp/>&lt;&lt;<sp/><ref refid="mpaudec_8c_1a0ac65b37442b7b10d74dedeb7d25e737" kindref="member">FRAC_BITS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>=<sp/>a<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eq++;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>*exp_ptr<sp/>=<sp/>eq;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="mpaudec_8h_1a0f2f19b46f286b7a9315b40e46f34227" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a0f2f19b46f286b7a9315b40e46f34227" kindref="member">mpaudec_init</ref>(<ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref><sp/>*<sp/>mpctx)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init=0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mpctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mpctx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref>));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" kindref="member">priv_data</ref><sp/>=<sp/>calloc(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref>));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpctx-&gt;<ref refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" kindref="member">priv_data</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" kindref="member">priv_data</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init<sp/>&amp;&amp;<sp/>!mpctx-&gt;<ref refid="structMPAuDecContext_1ac1e30ced961e8cdc9af6dcdbbde6acd5" kindref="member">parse_only</ref>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>factors<sp/>table<sp/>for<sp/>layer<sp/>1/2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;64;i++)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift,<sp/>mod;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.0<sp/>(i<sp/>=<sp/>3)<sp/>is<sp/>normalized<sp/>to<sp/>2<sp/>^<sp/>FRAC_BITS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>(i<sp/>/<sp/>3);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mod<sp/>=<sp/>i<sp/>%<sp/>3;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a3ad73c4de28c42bc8c467927b07e613f" kindref="member">scale_factor_modshift</ref>[i]<sp/>=<sp/>mod<sp/>|<sp/>(shift<sp/>&lt;&lt;<sp/>2);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>factor<sp/>multiply<sp/>for<sp/>layer<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;15;i++)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>norm;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>i<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>(((int64_t)(1)<sp/>&lt;&lt;<sp/>n)<sp/>*<sp/><ref refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" kindref="member">FRAC_ONE</ref>)<sp/>/<sp/>((1<sp/>&lt;&lt;<sp/>n)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[i][0]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(<ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0<sp/>*<sp/>2.0),<sp/>norm);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[i][1]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(<ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.7937005259<sp/>*<sp/>2.0),<sp/>norm);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[i][2]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(<ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.6299605249<sp/>*<sp/>2.0),<sp/>norm);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d:<sp/>norm=%x<sp/>s=%x<sp/>%x<sp/>%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>norm,<sp/></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[i][0],</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[i][1],</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a96ed305d6661b537d7489641a2c34765" kindref="member">scale_factor_mult</ref>[i][2]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>max<sp/>=<sp/>18760,<sp/>max<sp/>sum<sp/>over<sp/>all<sp/>16<sp/>coefs<sp/>:<sp/>44736<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;257;i++)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudectab_8h_1a4493e46e508fc1774a8bb2cd7e02af46" kindref="member">mpa_enwindow</ref>[i];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>WFRAC_BITS<sp/>&lt;<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>(v<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>(16<sp/>-<sp/><ref refid="mpaudec_8c_1a1b4651c62d39bf11121b02dd6233818e" kindref="member">WFRAC_BITS</ref><sp/>-<sp/>1)))<sp/>&gt;&gt;<sp/>(16<sp/>-<sp/><ref refid="mpaudec_8c_1a1b4651c62d39bf11121b02dd6233818e" kindref="member">WFRAC_BITS</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" kindref="member">window</ref>[i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>&amp;<sp/>63)<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-v;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" kindref="member">window</ref>[512<sp/>-<sp/>i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>huffman<sp/>decode<sp/>tables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" kindref="member">huff_code_table</ref>[0]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;16;i++)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structHuffTable" kindref="compound">HuffTable</ref><sp/>*h<sp/>=<sp/>&amp;<ref refid="mpaudectab_8h_1aecbd4e758fdde8e1932ede5ad21051d7" kindref="member">mpa_huff_tables</ref>[i];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xsize,<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*code_table;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xsize<sp/>=<sp/>h-&gt;<ref refid="structHuffTable_1a6e1599b5da1a99639f9394e553aa5c89" kindref="member">xsize</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>xsize<sp/>*<sp/>xsize;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>fail<sp/>test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bits_8c_1a17ce557803d3a49257e6fb289d43dfee" kindref="member">init_vlc</ref>(&amp;huff_vlc[i],<sp/>8,<sp/>n,<sp/></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="structHuffTable_1a3971691ed3ef40ac4ab71aa72a7cd2f0" kindref="member">bits</ref>,<sp/>1,<sp/>1,<sp/>h-&gt;<ref refid="structHuffTable_1a6693a947aa07344e5a5a378c0e8a1157" kindref="member">codes</ref>,<sp/>2,<sp/>2);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_table<sp/>=<sp/>calloc(n,<sp/>1);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(x=0;x&lt;xsize;x++)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(y=0;y&lt;xsize;y++)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_table[j++]<sp/>=<sp/>(x<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>y;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" kindref="member">huff_code_table</ref>[i]<sp/>=<sp/>code_table;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;2;i++)<sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bits_8c_1a17ce557803d3a49257e6fb289d43dfee" kindref="member">init_vlc</ref>(&amp;huff_quad_vlc[i],<sp/>i<sp/>==<sp/>0<sp/>?<sp/>7<sp/>:<sp/>4,<sp/>16,<sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudectab_8h_1a1c1ce845c3cf08bbc89ba8af6cf370de" kindref="member">mpa_quad_bits</ref>[i],<sp/>1,<sp/>1,<sp/><ref refid="mpaudectab_8h_1a840214e39135ea4816ff9f05aa500857" kindref="member">mpa_quad_codes</ref>[i],<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;9;i++)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;22;j++)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" kindref="member">band_index_long</ref>[i][j]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>+=<sp/><ref refid="mpaudectab_8h_1a0df9a837c9c4e59df9c96e968b332633" kindref="member">band_size_long</ref>[i][j];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" kindref="member">band_index_long</ref>[i][22]<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>n<sp/>^<sp/>(4/3)<sp/>and<sp/>store<sp/>it<sp/>in<sp/>mantissa/exp<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a23a825ca0fd958323342fced3275c436" kindref="member">int_pow_init</ref>();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;<ref refid="mpaudec_8c_1a286c9ecb29f865ea6e5f4dfa153d783b" kindref="member">TABLE_4_3_SIZE</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e,<sp/>m;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/><ref refid="mpaudec_8c_1ad19555572a4583ac8af52fcaf58a2c87" kindref="member">int_pow</ref>(i,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normalized<sp/>to<sp/>FRAC_BITS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9a581693cc0107e0089ac7b175767222" kindref="member">table_4_3_value</ref>[i]<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a6dff21f08edc4b1bd8419084bba17e1d" kindref="member">table_4_3_exp</ref>[i]<sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;7;i++)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>6)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>tan((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i<sp/>*<sp/><ref refid="internal_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>/<sp/>12.0);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(f<sp/>/<sp/>(1.0<sp/>+<sp/>f));</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" kindref="member">is_table</ref>[0][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" kindref="member">is_table</ref>[1][6<sp/>-<sp/>i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>invalid<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=7;i&lt;16;i++)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" kindref="member">is_table</ref>[0][i]<sp/>=<sp/><ref refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" kindref="member">is_table</ref>[1][i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;16;i++)<sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>e,<sp/>k;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>-(j<sp/>+<sp/>1)<sp/>*<sp/>((i<sp/>+<sp/>1)<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>pow(2.0,<sp/>e<sp/>/<sp/>4.0);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>i<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" kindref="member">is_table_lsf</ref>[j][k<sp/>^<sp/>1][i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(f);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" kindref="member">is_table_lsf</ref>[j][k][i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;is_table_lsf<sp/>%d<sp/>%d:<sp/>%x<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j,<sp/><ref refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" kindref="member">is_table_lsf</ref>[j][0][i],<sp/><ref refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" kindref="member">is_table_lsf</ref>[j][1][i]);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;8;i++)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ci,<sp/>cs,<sp/>ca;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ci<sp/>=<sp/><ref refid="mpaudectab_8h_1aa57a93e642f8c3ed0222b63e14dc794e" kindref="member">ci_table</ref>[i];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cs<sp/>=<sp/>1.0<sp/>/<sp/>sqrt(1.0<sp/>+<sp/>ci<sp/>*<sp/>ci);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ca<sp/>=<sp/>cs<sp/>*<sp/>ci;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" kindref="member">csa_table</ref>[i][0]<sp/>=<sp/><ref refid="mpaudec_8c_1a88cf220be3bb27c93f7a42530b7b15b8" kindref="member">FIX</ref>(cs);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" kindref="member">csa_table</ref>[i][1]<sp/>=<sp/><ref refid="mpaudec_8c_1a88cf220be3bb27c93f7a42530b7b15b8" kindref="member">FIX</ref>(ca);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>mdct<sp/>windows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;36;i++)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(sin(<ref refid="internal_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>(i<sp/>+<sp/>0.5)<sp/>/<sp/>36.0));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[0][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[1][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[3][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;6;i++)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[1][18<sp/>+<sp/>i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[1][24<sp/>+<sp/>i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(sin(<ref refid="internal_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>((i<sp/>+<sp/>6)<sp/>+<sp/>0.5)<sp/>/<sp/>12.0));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[1][30<sp/>+<sp/>i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.0);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[3][i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.0);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[3][6<sp/>+<sp/>i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(sin(<ref refid="internal_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>(i<sp/>+<sp/>0.5)<sp/>/<sp/>12.0));</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[3][12<sp/>+<sp/>i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.0);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;12;i++)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[2][i]<sp/>=<sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(sin(<ref refid="internal_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>(i<sp/>+<sp/>0.5)<sp/>/<sp/>12.0));</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>we<sp/>do<sp/>frequency<sp/>inversion<sp/>adter<sp/>the<sp/>MDCT<sp/>by<sp/>changing</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>sign<sp/>of<sp/>the<sp/>right<sp/>window<sp/>coefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;4;j++)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;36;i+=2)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[j<sp/>+<sp/>4][i]<sp/>=<sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[j][i];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[j<sp/>+<sp/>4][i<sp/>+<sp/>1]<sp/>=<sp/>-<ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[j][i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;8;j++)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;win%d=\n&quot;</highlight><highlight class="normal">,<sp/>j);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;36;i++)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%f,<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[j][i]<sp/>/<sp/><ref refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" kindref="member">FRAC_ONE</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" kindref="member">inbuf_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>=<sp/>&amp;s-&gt;<ref refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" kindref="member">inbuf1</ref>[s-&gt;<ref refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" kindref="member">inbuf_index</ref>][<ref refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" kindref="member">BACKSTEP_SIZE</ref>];</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;frame_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>tab[i][j]<sp/>=<sp/>1.0<sp/>/<sp/>(2.0<sp/>*<sp/>cos(pi*(2*k+1)<sp/>/<sp/>2^(6<sp/>-<sp/>j)))<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cos(i*pi/64)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="mpaudec_8c_1a3c7f14ddeed4db84b6a04a44defc0ef8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_0<sp/><sp/>FIXR(0.50060299823519630134)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="mpaudec_8c_1a6a04514f1c1ce5656a66ac27881ba183" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_1<sp/><sp/>FIXR(0.50547095989754365998)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="mpaudec_8c_1abbc0d0a758ec52e79b8d740fa45bd040" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_2<sp/><sp/>FIXR(0.51544730992262454697)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="mpaudec_8c_1a0026f39414e802034982b1b4cc3e3e82" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_3<sp/><sp/>FIXR(0.53104259108978417447)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="mpaudec_8c_1a06b6de5ad74b06b623f32fe6e8f22fa9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_4<sp/><sp/>FIXR(0.55310389603444452782)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="mpaudec_8c_1a542bd94c69a783504ac305f27d48cd07" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_5<sp/><sp/>FIXR(0.58293496820613387367)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="mpaudec_8c_1ae4a6061d734c76e32dc2cd4455e5f9b9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_6<sp/><sp/>FIXR(0.62250412303566481615)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="mpaudec_8c_1ac8f634c2c0b2b132dc5102b665e82f7e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_7<sp/><sp/>FIXR(0.67480834145500574602)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510" refid="mpaudec_8c_1a2dfea6e209510cb1419d17e053f49ba8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_8<sp/><sp/>FIXR(0.74453627100229844977)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="mpaudec_8c_1a711428429f446493a4ea55d7995af3ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_9<sp/><sp/>FIXR(0.83934964541552703873)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512" refid="mpaudec_8c_1a2ee87149ee2c0377e029e2202f879539" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_10<sp/>FIXR(0.97256823786196069369)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513" refid="mpaudec_8c_1ad3752e7b42fadb8272368ab18def573c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_11<sp/>FIXR(1.16943993343288495515)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="mpaudec_8c_1accef694fc0f3ed4ee4a1ba4eb1e39daa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_12<sp/>FIXR(1.48416461631416627724)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="mpaudec_8c_1af4b0adbb8f7a66ad724b87787af91660" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_13<sp/>FIXR(2.05778100995341155085)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="mpaudec_8c_1ace35139f22692892a1b6eab6056a0acb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_14<sp/>FIXR(3.40760841846871878570)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="mpaudec_8c_1ada802c9dcd935c89dd685c1e4c5ea39a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS0_15<sp/>FIXR(10.19000812354805681150)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519" refid="mpaudec_8c_1a80fe7c3bc55400ac33d20162946bfbeb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_0<sp/>FIXR(0.50241928618815570551)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="mpaudec_8c_1a968b7cd171308bd5a8669789b2bc5f24" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_1<sp/>FIXR(0.52249861493968888062)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="mpaudec_8c_1a60e6e20a6a7f8450fc260de0ef7cbae3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_2<sp/>FIXR(0.56694403481635770368)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="mpaudec_8c_1acb19e87b4b82935d05eaef77dc9e0418" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_3<sp/>FIXR(0.64682178335999012954)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="mpaudec_8c_1a936b019be7a7354d11cb8aaaf9a7d46d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_4<sp/>FIXR(0.78815462345125022473)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="mpaudec_8c_1a90c8fd99f2746e413c06b558d9363f6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_5<sp/>FIXR(1.06067768599034747134)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="mpaudec_8c_1a12669a29f2c1b308d3f2a25a8891aadb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_6<sp/>FIXR(1.72244709823833392782)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="mpaudec_8c_1a434031c1963b120c1d92fa745c5ca3b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS1_7<sp/>FIXR(5.10114861868916385802)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS2_0<sp/>FIXR(0.50979557910415916894)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS2_1<sp/>FIXR(0.60134488693504528054)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS2_2<sp/>FIXR(0.89997622313641570463)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531" refid="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS2_3<sp/>FIXR(2.56291544774150617881)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS3_0<sp/>FIXR(0.54119610014619698439)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534" refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS3_1<sp/>FIXR(1.30656296487637652785)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="mpaudec_8c_1a3e45a461f953a779296743a365934b86" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS4_0<sp/>FIXR(0.70710678118654752439)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>butterfly<sp/>operator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BF(a,<sp/>b,<sp/>c)\</highlight></codeline>
<codeline lineno="540"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="541"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tab[a]<sp/>+<sp/>tab[b];\</highlight></codeline>
<codeline lineno="542"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tab[a]<sp/>-<sp/>tab[b];\</highlight></codeline>
<codeline lineno="543"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[a]<sp/>=<sp/>tmp0;\</highlight></codeline>
<codeline lineno="544"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[b]<sp/>=<sp/>MULL(tmp1,<sp/>c);\</highlight></codeline>
<codeline lineno="545"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BF1(a,<sp/>b,<sp/>c,<sp/>d)\</highlight></codeline>
<codeline lineno="548"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="549"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BF(a,<sp/>b,<sp/>COS4_0);\</highlight></codeline>
<codeline lineno="550"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BF(c,<sp/>d,<sp/>-COS4_0);\</highlight></codeline>
<codeline lineno="551"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[c]<sp/>+=<sp/>tab[d];\</highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BF2(a,<sp/>b,<sp/>c,<sp/>d)\</highlight></codeline>
<codeline lineno="555"><highlight class="preprocessor">{\</highlight></codeline>
<codeline lineno="556"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BF(a,<sp/>b,<sp/>COS4_0);\</highlight></codeline>
<codeline lineno="557"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BF(c,<sp/>d,<sp/>-COS4_0);\</highlight></codeline>
<codeline lineno="558"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[c]<sp/>+=<sp/>tab[d];\</highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[a]<sp/>+=<sp/>tab[c];\</highlight></codeline>
<codeline lineno="560"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[c]<sp/>+=<sp/>tab[b];\</highlight></codeline>
<codeline lineno="561"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tab[b]<sp/>+=<sp/>tab[d];\</highlight></codeline>
<codeline lineno="562"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADD(a,<sp/>b)<sp/>tab[a]<sp/>+=<sp/>tab[b]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DCT32<sp/>without<sp/>1/sqrt(2)<sp/>coef<sp/>zero<sp/>scaling.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567" refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" kindref="member">dct32</ref>(int32_t<sp/>*out,<sp/>int32_t<sp/>*tab)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp0,<sp/>tmp1;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(0,<sp/>31,<sp/><ref refid="mpaudec_8c_1a3c7f14ddeed4db84b6a04a44defc0ef8" kindref="member">COS0_0</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(1,<sp/>30,<sp/><ref refid="mpaudec_8c_1a6a04514f1c1ce5656a66ac27881ba183" kindref="member">COS0_1</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(2,<sp/>29,<sp/><ref refid="mpaudec_8c_1abbc0d0a758ec52e79b8d740fa45bd040" kindref="member">COS0_2</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(3,<sp/>28,<sp/><ref refid="mpaudec_8c_1a0026f39414e802034982b1b4cc3e3e82" kindref="member">COS0_3</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(4,<sp/>27,<sp/><ref refid="mpaudec_8c_1a06b6de5ad74b06b623f32fe6e8f22fa9" kindref="member">COS0_4</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(5,<sp/>26,<sp/><ref refid="mpaudec_8c_1a542bd94c69a783504ac305f27d48cd07" kindref="member">COS0_5</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(6,<sp/>25,<sp/><ref refid="mpaudec_8c_1ae4a6061d734c76e32dc2cd4455e5f9b9" kindref="member">COS0_6</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(7,<sp/>24,<sp/><ref refid="mpaudec_8c_1ac8f634c2c0b2b132dc5102b665e82f7e" kindref="member">COS0_7</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(8,<sp/>23,<sp/><ref refid="mpaudec_8c_1a2dfea6e209510cb1419d17e053f49ba8" kindref="member">COS0_8</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(9,<sp/>22,<sp/><ref refid="mpaudec_8c_1a711428429f446493a4ea55d7995af3ff" kindref="member">COS0_9</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(10,<sp/>21,<sp/><ref refid="mpaudec_8c_1a2ee87149ee2c0377e029e2202f879539" kindref="member">COS0_10</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(11,<sp/>20,<sp/><ref refid="mpaudec_8c_1ad3752e7b42fadb8272368ab18def573c" kindref="member">COS0_11</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(12,<sp/>19,<sp/><ref refid="mpaudec_8c_1accef694fc0f3ed4ee4a1ba4eb1e39daa" kindref="member">COS0_12</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(13,<sp/>18,<sp/><ref refid="mpaudec_8c_1af4b0adbb8f7a66ad724b87787af91660" kindref="member">COS0_13</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(14,<sp/>17,<sp/><ref refid="mpaudec_8c_1ace35139f22692892a1b6eab6056a0acb" kindref="member">COS0_14</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(15,<sp/>16,<sp/><ref refid="mpaudec_8c_1ada802c9dcd935c89dd685c1e4c5ea39a" kindref="member">COS0_15</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(0,<sp/>15,<sp/><ref refid="mpaudec_8c_1a80fe7c3bc55400ac33d20162946bfbeb" kindref="member">COS1_0</ref>);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(1,<sp/>14,<sp/><ref refid="mpaudec_8c_1a968b7cd171308bd5a8669789b2bc5f24" kindref="member">COS1_1</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(2,<sp/>13,<sp/><ref refid="mpaudec_8c_1a60e6e20a6a7f8450fc260de0ef7cbae3" kindref="member">COS1_2</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(3,<sp/>12,<sp/><ref refid="mpaudec_8c_1acb19e87b4b82935d05eaef77dc9e0418" kindref="member">COS1_3</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(4,<sp/>11,<sp/><ref refid="mpaudec_8c_1a936b019be7a7354d11cb8aaaf9a7d46d" kindref="member">COS1_4</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(5,<sp/>10,<sp/><ref refid="mpaudec_8c_1a90c8fd99f2746e413c06b558d9363f6a" kindref="member">COS1_5</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(6,<sp/><sp/>9,<sp/><ref refid="mpaudec_8c_1a12669a29f2c1b308d3f2a25a8891aadb" kindref="member">COS1_6</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(7,<sp/><sp/>8,<sp/><ref refid="mpaudec_8c_1a434031c1963b120c1d92fa745c5ca3b1" kindref="member">COS1_7</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(16,<sp/>31,<sp/>-<ref refid="mpaudec_8c_1a80fe7c3bc55400ac33d20162946bfbeb" kindref="member">COS1_0</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(17,<sp/>30,<sp/>-<ref refid="mpaudec_8c_1a968b7cd171308bd5a8669789b2bc5f24" kindref="member">COS1_1</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(18,<sp/>29,<sp/>-<ref refid="mpaudec_8c_1a60e6e20a6a7f8450fc260de0ef7cbae3" kindref="member">COS1_2</ref>);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(19,<sp/>28,<sp/>-<ref refid="mpaudec_8c_1acb19e87b4b82935d05eaef77dc9e0418" kindref="member">COS1_3</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(20,<sp/>27,<sp/>-<ref refid="mpaudec_8c_1a936b019be7a7354d11cb8aaaf9a7d46d" kindref="member">COS1_4</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(21,<sp/>26,<sp/>-<ref refid="mpaudec_8c_1a90c8fd99f2746e413c06b558d9363f6a" kindref="member">COS1_5</ref>);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(22,<sp/>25,<sp/>-<ref refid="mpaudec_8c_1a12669a29f2c1b308d3f2a25a8891aadb" kindref="member">COS1_6</ref>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(23,<sp/>24,<sp/>-<ref refid="mpaudec_8c_1a434031c1963b120c1d92fa745c5ca3b1" kindref="member">COS1_7</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>3<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(0,<sp/>7,<sp/><ref refid="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" kindref="member">COS2_0</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(1,<sp/>6,<sp/><ref refid="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" kindref="member">COS2_1</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(2,<sp/>5,<sp/><ref refid="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" kindref="member">COS2_2</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(3,<sp/>4,<sp/><ref refid="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" kindref="member">COS2_3</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(8,<sp/>15,<sp/>-<ref refid="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" kindref="member">COS2_0</ref>);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(9,<sp/>14,<sp/>-<ref refid="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" kindref="member">COS2_1</ref>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(10,<sp/>13,<sp/>-<ref refid="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" kindref="member">COS2_2</ref>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(11,<sp/>12,<sp/>-<ref refid="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" kindref="member">COS2_3</ref>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(16,<sp/>23,<sp/><ref refid="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" kindref="member">COS2_0</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(17,<sp/>22,<sp/><ref refid="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" kindref="member">COS2_1</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(18,<sp/>21,<sp/><ref refid="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" kindref="member">COS2_2</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(19,<sp/>20,<sp/><ref refid="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" kindref="member">COS2_3</ref>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(24,<sp/>31,<sp/>-<ref refid="mpaudec_8c_1a663d9b3d5615c943ef7440398ff4fcac" kindref="member">COS2_0</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(25,<sp/>30,<sp/>-<ref refid="mpaudec_8c_1a98578a625adb72e01b1ea6f20a2efac7" kindref="member">COS2_1</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(26,<sp/>29,<sp/>-<ref refid="mpaudec_8c_1a88f305fec8bcd7475441508658ff93f0" kindref="member">COS2_2</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(27,<sp/>28,<sp/>-<ref refid="mpaudec_8c_1aca86af9b8d03c39d3b6031dea8c3a12a" kindref="member">COS2_3</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>4<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(0,<sp/>3,<sp/><ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(1,<sp/>2,<sp/><ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(4,<sp/>7,<sp/>-<ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(5,<sp/>6,<sp/>-<ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(8,<sp/>11,<sp/><ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(9,<sp/>10,<sp/><ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(12,<sp/>15,<sp/>-<ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(13,<sp/>14,<sp/>-<ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(16,<sp/>19,<sp/><ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(17,<sp/>18,<sp/><ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(20,<sp/>23,<sp/>-<ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(21,<sp/>22,<sp/>-<ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(24,<sp/>27,<sp/><ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(25,<sp/>26,<sp/><ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(28,<sp/>31,<sp/>-<ref refid="mpaudec_8c_1a7e9b0736ed05662488ccfd51b0e5ae88" kindref="member">COS3_0</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a9b8c9d2442ab6b52582301113ca971a5" kindref="member">BF</ref>(29,<sp/>30,<sp/>-<ref refid="mpaudec_8c_1a31801612d26ab9d77aabcc3ee866f403" kindref="member">COS3_1</ref>);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" kindref="member">BF1</ref>(0,<sp/>1,<sp/>2,<sp/>3);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" kindref="member">BF2</ref>(4,<sp/>5,<sp/>6,<sp/>7);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" kindref="member">BF1</ref>(8,<sp/>9,<sp/>10,<sp/>11);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" kindref="member">BF2</ref>(12,<sp/>13,<sp/>14,<sp/>15);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" kindref="member">BF1</ref>(16,<sp/>17,<sp/>18,<sp/>19);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" kindref="member">BF2</ref>(20,<sp/>21,<sp/>22,<sp/>23);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a427188a1dde72ebe3376c7e26fd360f4" kindref="member">BF1</ref>(24,<sp/>25,<sp/>26,<sp/>27);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a21ff567aafb04cfb14daa1bcbfe0fafc" kindref="member">BF2</ref>(28,<sp/>29,<sp/>30,<sp/>31);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(<sp/>8,<sp/>12);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(12,<sp/>10);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(10,<sp/>14);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(14,<sp/><sp/>9);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(<sp/>9,<sp/>13);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(13,<sp/>11);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(11,<sp/>15);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>0]<sp/>=<sp/>tab[0];</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>out[16]<sp/>=<sp/>tab[1];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>8]<sp/>=<sp/>tab[2];</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>out[24]<sp/>=<sp/>tab[3];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>4]<sp/>=<sp/>tab[4];</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>out[20]<sp/>=<sp/>tab[5];</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>out[12]<sp/>=<sp/>tab[6];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>out[28]<sp/>=<sp/>tab[7];</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>2]<sp/>=<sp/>tab[8];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>out[18]<sp/>=<sp/>tab[9];</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>out[10]<sp/>=<sp/>tab[10];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>out[26]<sp/>=<sp/>tab[11];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>6]<sp/>=<sp/>tab[12];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>out[22]<sp/>=<sp/>tab[13];</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>out[14]<sp/>=<sp/>tab[14];</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>out[30]<sp/>=<sp/>tab[15];</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(24,<sp/>28);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(28,<sp/>26);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(26,<sp/>30);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(30,<sp/>25);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(25,<sp/>29);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(29,<sp/>27);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ad5439a21111fdc8227864eba3b98c661" kindref="member">ADD</ref>(27,<sp/>31);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>1]<sp/>=<sp/>tab[16]<sp/>+<sp/>tab[24];</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>out[17]<sp/>=<sp/>tab[17]<sp/>+<sp/>tab[25];</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>9]<sp/>=<sp/>tab[18]<sp/>+<sp/>tab[26];</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>out[25]<sp/>=<sp/>tab[19]<sp/>+<sp/>tab[27];</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>5]<sp/>=<sp/>tab[20]<sp/>+<sp/>tab[28];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>out[21]<sp/>=<sp/>tab[21]<sp/>+<sp/>tab[29];</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>out[13]<sp/>=<sp/>tab[22]<sp/>+<sp/>tab[30];</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>out[29]<sp/>=<sp/>tab[23]<sp/>+<sp/>tab[31];</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>3]<sp/>=<sp/>tab[24]<sp/>+<sp/>tab[20];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>out[19]<sp/>=<sp/>tab[25]<sp/>+<sp/>tab[21];</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>out[11]<sp/>=<sp/>tab[26]<sp/>+<sp/>tab[22];</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/>out[27]<sp/>=<sp/>tab[27]<sp/>+<sp/>tab[23];</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>out[<sp/>7]<sp/>=<sp/>tab[28]<sp/>+<sp/>tab[18];</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>out[23]<sp/>=<sp/>tab[29]<sp/>+<sp/>tab[19];</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>out[15]<sp/>=<sp/>tab[30]<sp/>+<sp/>tab[17];</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>out[31]<sp/>=<sp/>tab[31];</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>OUT_SHIFT<sp/>(WFRAC_BITS<sp/>+<sp/>FRAC_BITS<sp/>-<sp/>15)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" kindref="member">round_sample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sum)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sum1;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>(sum<sp/>+<sp/>(1<sp/>&lt;&lt;<sp/>(<ref refid="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" kindref="member">OUT_SHIFT</ref><sp/>-<sp/>1)))<sp/>&gt;&gt;<sp/><ref refid="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" kindref="member">OUT_SHIFT</ref>;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum1<sp/>&lt;<sp/>-32768)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum1<sp/>&gt;<sp/>32767)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum1;</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>signed<sp/>16x16<sp/>-&gt;<sp/>32<sp/>multiply<sp/>add<sp/>accumulate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MACS(rt,<sp/>ra,<sp/>rb)<sp/>rt<sp/>+=<sp/>(ra)<sp/>*<sp/>(rb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>signed<sp/>16x16<sp/>-&gt;<sp/>32<sp/>multiply<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULS(ra,<sp/>rb)<sp/>((ra)<sp/>*<sp/>(rb))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" kindref="member">round_sample</ref>(int64_t<sp/>sum)<sp/></highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sum1;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>(int)((sum<sp/>+<sp/>((int64_t)(1)<sp/>&lt;&lt;<sp/>(<ref refid="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" kindref="member">OUT_SHIFT</ref><sp/>-<sp/>1)))<sp/>&gt;&gt;<sp/><ref refid="mpaudec_8c_1a3f8f3d58e6b65a7145821e43d79cdfb0" kindref="member">OUT_SHIFT</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum1<sp/>&lt;<sp/>-32768)</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum1<sp/>&gt;<sp/>32767)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum1<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum1;</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="mpaudec_8c_1aab961f0465356c1c13df49d4e3ba9935" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MULS(ra,<sp/>rb)<sp/>MUL64(ra,<sp/>rb)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="mpaudec_8c_1a2862fac73b23794771a42a227312740c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUM8(sum,<sp/>op,<sp/>w,<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="756"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="757"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[0<sp/>*<sp/>64],<sp/>p[0<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="758"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[1<sp/>*<sp/>64],<sp/>p[1<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="759"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[2<sp/>*<sp/>64],<sp/>p[2<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="760"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[3<sp/>*<sp/>64],<sp/>p[3<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[4<sp/>*<sp/>64],<sp/>p[4<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[5<sp/>*<sp/>64],<sp/>p[5<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[6<sp/>*<sp/>64],<sp/>p[6<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum<sp/>op<sp/>MULS((w)[7<sp/>*<sp/>64],<sp/>p[7<sp/>*<sp/>64]);\</highlight></codeline>
<codeline lineno="765"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767" refid="mpaudec_8c_1a575626a997c0d8380fe3cbb6293f6d2f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUM8P2(sum1,<sp/>op1,<sp/>sum2,<sp/>op2,<sp/>w1,<sp/>w2,<sp/>p)<sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>tmp;\</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[0<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[0<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="772"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[0<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="773"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[1<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="774"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[1<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="775"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[1<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="776"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[2<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[2<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[2<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[3<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="780"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[3<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="781"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[3<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="782"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[4<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="783"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[4<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="784"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[4<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="785"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[5<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[5<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[5<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="788"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[6<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="789"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[6<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="790"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[6<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="791"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>p[7<sp/>*<sp/>64];\</highlight></codeline>
<codeline lineno="792"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum1<sp/>op1<sp/>MULS((w1)[7<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="793"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>sum2<sp/>op2<sp/>MULS((w2)[7<sp/>*<sp/>64],<sp/>tmp);\</highlight></codeline>
<codeline lineno="794"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>32<sp/>sub<sp/>band<sp/>synthesis<sp/>filter.<sp/>Input:<sp/>32<sp/>sub<sp/>band<sp/>samples,<sp/>Output:</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/><sp/><sp/>32<sp/>samples.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>XXX:<sp/>optimize<sp/>by<sp/>avoiding<sp/>ring<sp/>buffer<sp/>usage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800" refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" kindref="member">synth_filter</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s1,</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/>int16_t<sp/>*samples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>incr,<sp/></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>sb_samples[<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>])</highlight></codeline>
<codeline lineno="803"><highlight class="normal">{</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>tmp[32];</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref><sp/>*synth_buf;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref><sp/>*w,<sp/>*w2,<sp/>*p;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>offset,<sp/>v;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>*samples2;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>sum,<sp/>sum2;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>sum,<sp/>sum2;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a94a1b9f66732d2e8a51be90eb17f08a6" kindref="member">dct32</ref>(tmp,<sp/>sb_samples);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>s1-&gt;<ref refid="structMPADecodeContext_1abed71206798ca65d4eea7782a20b141f" kindref="member">synth_buf_offset</ref>[ch];</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>synth_buf<sp/>=<sp/>s1-&gt;<ref refid="structMPADecodeContext_1ac771177c1d16c2bdf1fb436bc2a600ba" kindref="member">synth_buf</ref>[ch]<sp/>+<sp/>offset;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;32;j++)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>tmp[j];</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FRAC_BITS<sp/>&lt;=<sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>can<sp/>cause<sp/>a<sp/>loss<sp/>in<sp/>precision<sp/>if<sp/>very<sp/>high<sp/>amplitude</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>32767)</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>32767;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>-32768)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-32768;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synth_buf[j]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>to<sp/>avoid<sp/>wrap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(synth_buf<sp/>+<sp/>512,<sp/>synth_buf,<sp/>32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="mpaudec_8c_1afd4da67a7573a544f9e65a978fa7d4f0" kindref="member">MPA_INT</ref>));</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>samples2<sp/>=<sp/>samples<sp/>+<sp/>31<sp/>*<sp/>incr;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>w<sp/>=<sp/><ref refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>w2<sp/>=<sp/><ref refid="mpaudec_8c_1a988bf6974f37c7585b0cd2f299605004" kindref="member">window</ref><sp/>+<sp/>31;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>synth_buf<sp/>+<sp/>16;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a2862fac73b23794771a42a227312740c" kindref="member">SUM8</ref>(sum,<sp/>+=,<sp/>w,<sp/>p);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>synth_buf<sp/>+<sp/>48;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a2862fac73b23794771a42a227312740c" kindref="member">SUM8</ref>(sum,<sp/>-=,<sp/>w<sp/>+<sp/>32,<sp/>p);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>*samples<sp/>=<sp/><ref refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" kindref="member">round_sample</ref>(sum);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>samples<sp/>+=<sp/>incr;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>calculate<sp/>two<sp/>samples<sp/>at<sp/>the<sp/>same<sp/>time<sp/>to<sp/>avoid<sp/>one<sp/>memory</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>access<sp/>per<sp/>two<sp/>sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=1;j&lt;16;j++)<sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>synth_buf<sp/>+<sp/>16<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a575626a997c0d8380fe3cbb6293f6d2f" kindref="member">SUM8P2</ref>(sum,<sp/>+=,<sp/>sum2,<sp/>-=,<sp/>w,<sp/>w2,<sp/>p);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>synth_buf<sp/>+<sp/>48<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a575626a997c0d8380fe3cbb6293f6d2f" kindref="member">SUM8P2</ref>(sum,<sp/>-=,<sp/>sum2,<sp/>-=,<sp/>w<sp/>+<sp/>32,<sp/>w2<sp/>+<sp/>32,<sp/>p);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*samples<sp/>=<sp/><ref refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" kindref="member">round_sample</ref>(sum);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples<sp/>+=<sp/>incr;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*samples2<sp/>=<sp/><ref refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" kindref="member">round_sample</ref>(sum2);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples2<sp/>-=<sp/>incr;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w++;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w2--;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>synth_buf<sp/>+<sp/>32;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a2862fac73b23794771a42a227312740c" kindref="member">SUM8</ref>(sum,<sp/>-=,<sp/>w<sp/>+<sp/>32,<sp/>p);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>*samples<sp/>=<sp/><ref refid="mpaudec_8c_1aad56ed253bfb25eb1cc06cc68fab053a" kindref="member">round_sample</ref>(sum);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(offset<sp/>-<sp/>32)<sp/>&amp;<sp/>511;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>s1-&gt;<ref refid="structMPADecodeContext_1abed71206798ca65d4eea7782a20b141f" kindref="member">synth_buf_offset</ref>[ch]<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cos(pi*i/24)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C1<sp/><sp/>FIXR(0.99144486137381041114)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C3<sp/><sp/>FIXR(0.92387953251128675612)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C5<sp/><sp/>FIXR(0.79335334029123516458)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C7<sp/><sp/>FIXR(0.60876142900872063941)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C9<sp/><sp/>FIXR(0.38268343236508977173)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C11<sp/>FIXR(0.13052619222005159154)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>12<sp/>points<sp/>IMDCT.<sp/>We<sp/>compute<sp/>it<sp/>&quot;by<sp/>hand&quot;<sp/>by<sp/>factorizing<sp/>obvious</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/><sp/><sp/>cases.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" kindref="member">imdct12</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*in)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>in1_3,<sp/>in1_9,<sp/>in4_3,<sp/>in4_9;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>in1_3<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[1],<sp/><ref refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" kindref="member">C3</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>in1_9<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[1],<sp/><ref refid="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" kindref="member">C9</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>in4_3<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[4],<sp/><ref refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" kindref="member">C3</ref>);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>in4_9<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[4],<sp/><ref refid="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" kindref="member">C9</ref>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[0],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>)<sp/>-<sp/>in1_3<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[2],<sp/><ref refid="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" kindref="member">C11</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[3],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>)<sp/>-<sp/>in4_9<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[5],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>));</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>out[0]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>out[5]<sp/>=<sp/>-tmp;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[0]<sp/>-<sp/>in[3],<sp/><ref refid="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" kindref="member">C9</ref>)<sp/>-<sp/>in1_3<sp/>+<sp/></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[2]<sp/>+<sp/>in[5],<sp/><ref refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" kindref="member">C3</ref>)<sp/>-<sp/>in4_9);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>out[1]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>out[4]<sp/>=<sp/>-tmp;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[0],<sp/><ref refid="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" kindref="member">C11</ref>)<sp/>-<sp/>in1_9<sp/>+<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[2],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>)<sp/>-</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[3],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>)<sp/>+<sp/>in4_3<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[5],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>));</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>out[2]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>out[3]<sp/>=<sp/>-tmp;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(-in[0],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>)<sp/>+<sp/>in1_9<sp/>+<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[2],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[3],<sp/><ref refid="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" kindref="member">C11</ref>)<sp/>-<sp/>in4_3<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[5],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>));</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>out[6]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>out[11]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(-in[0]<sp/>+<sp/>in[3],<sp/><ref refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" kindref="member">C3</ref>)<sp/>-<sp/>in1_9<sp/>+<sp/></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[2]<sp/>+<sp/>in[5],<sp/><ref refid="mpaudec_8c_1a0232d4d720ac99c2078569ed8a4c58c8" kindref="member">C9</ref>)<sp/>+<sp/>in4_3);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>out[7]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>out[10]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(-<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[0],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>)<sp/>-<sp/>in1_3<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[2],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>)<sp/>-</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[3],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>)<sp/>-<sp/>in4_9<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in[5],<sp/><ref refid="mpaudec_8c_1ad1e82072c033df09d8b00f6d7d77e401" kindref="member">C11</ref>));</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>out[8]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/>out[9]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>C1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>C3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>C5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>C7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>C9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>C11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>cos(pi*i/18)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C1<sp/>FIXR(0.98480775301220805936)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="mpaudec_8c_1ad6fc13322a4f1c314332ff34aa8b3fa0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C2<sp/>FIXR(0.93969262078590838405)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931" refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C3<sp/>FIXR(0.86602540378443864676)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932" refid="mpaudec_8c_1acc39015f57b2efb8810b603f188bdf15" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C4<sp/>FIXR(0.76604444311897803520)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933" refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C5<sp/>FIXR(0.64278760968653932632)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934" refid="mpaudec_8c_1a3cc680a71aa57979316e647352cb4e35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C6<sp/>FIXR(0.5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935" refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C7<sp/>FIXR(0.34202014332566873304)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936" refid="mpaudec_8c_1a783ffd54c433250e4b595d115f410e9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>C8<sp/>FIXR(0.17364817766693034885)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>0.5<sp/>/<sp/>cos(pi*(2*i+1)/36)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" kindref="member">icos36</ref>[9]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.50190991877167369479),</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.51763809020504152469),</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.55168895948124587824),</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.61038729438072803416),</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.70710678118654752439),</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.87172339781054900991),</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.18310079157624925896),</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.93185165257813657349),</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(5.73685662283492756461),</highlight></codeline>
<codeline lineno="949"><highlight class="normal">};</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951" refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[18]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0.5<sp/>/<sp/>cos(pi*(2*i+19)/72)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.74009361646113053152),</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.82133981585229078570),</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(0.93057949835178895673),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.08284028510010010928),</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.30656296487637652785),</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(1.66275476171152078719),</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(2.31011315767264929558),</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(3.83064878777019433457),</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(11.46279281302667383546),</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>0.5<sp/>/<sp/>cos(pi*(2*(i<sp/>+<sp/>18)<sp/>+19)/72)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.67817085245462840086),</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.63023620700513223342),</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.59284452371708034528),</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.56369097343317117734),</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.54119610014619698439),</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.52426456257040533932),</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.51213975715725461845),</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.50431448029007636036),</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a5d83ab8f3ec11509277f142878f6a203" kindref="member">FIXR</ref>(-0.50047634258165998492),</highlight></codeline>
<codeline lineno="973"><highlight class="normal">};</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>using<sp/>Lee<sp/>like<sp/>decomposition<sp/>followed<sp/>by<sp/>hand<sp/>coded<sp/>9<sp/>points<sp/>DCT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" kindref="member">imdct36</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*in)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>t0,<sp/>t1,<sp/>t2,<sp/>t3,<sp/>s0,<sp/>s1,<sp/>s2,<sp/>s3;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp[18],<sp/>*tmp1,<sp/>*in1;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>in3_3,<sp/>in6_6;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=17;i&gt;=1;i--)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[i]<sp/>+=<sp/>in[i-1];</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=17;i&gt;=3;i-=2)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[i]<sp/>+=<sp/>in[i-2];</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;2;j++)<sp/>{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tmp<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in1<sp/>=<sp/>in<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in3_3<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*3],<sp/><ref refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" kindref="member">C3</ref>);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in6_6<sp/>=<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*6],<sp/><ref refid="mpaudec_8c_1a3cc680a71aa57979316e647352cb4e35" kindref="member">C6</ref>);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[0]<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*1],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>)<sp/>+<sp/>in3_3<sp/>+<sp/></highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*5],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>)<sp/>+<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*7],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>));</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[2]<sp/>=<sp/>in1[2*0]<sp/>+<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*2],<sp/><ref refid="mpaudec_8c_1ad6fc13322a4f1c314332ff34aa8b3fa0" kindref="member">C2</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*4],<sp/><ref refid="mpaudec_8c_1acc39015f57b2efb8810b603f188bdf15" kindref="member">C4</ref>)<sp/>+<sp/>in6_6<sp/>+<sp/></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*8],<sp/><ref refid="mpaudec_8c_1a783ffd54c433250e4b595d115f410e9a" kindref="member">C8</ref>));</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[4]<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*1]<sp/>-<sp/>in1[2*5]<sp/>-<sp/>in1[2*7],<sp/><ref refid="mpaudec_8c_1a58aba30d6a33889c81827a54620dd5d9" kindref="member">C3</ref>));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[6]<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*2]<sp/>-<sp/>in1[2*4]<sp/>-<sp/>in1[2*8],<sp/><ref refid="mpaudec_8c_1a3cc680a71aa57979316e647352cb4e35" kindref="member">C6</ref>))<sp/>-<sp/></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in1[2*6]<sp/>+<sp/>in1[2*0];</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[8]<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*1],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>)<sp/>-<sp/>in3_3<sp/>-<sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*5],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>)<sp/>+<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*7],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>));</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[10]<sp/>=<sp/>in1[2*0]<sp/>+<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(-in1[2*2],<sp/><ref refid="mpaudec_8c_1a783ffd54c433250e4b595d115f410e9a" kindref="member">C8</ref>)<sp/>-<sp/></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*4],<sp/><ref refid="mpaudec_8c_1ad6fc13322a4f1c314332ff34aa8b3fa0" kindref="member">C2</ref>)<sp/>+<sp/>in6_6<sp/>+<sp/></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*8],<sp/><ref refid="mpaudec_8c_1acc39015f57b2efb8810b603f188bdf15" kindref="member">C4</ref>));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[12]<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*1],<sp/><ref refid="mpaudec_8c_1af3ac175d83deeabef85aef40a30a21ee" kindref="member">C7</ref>)<sp/>-<sp/>in3_3<sp/>+<sp/></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*5],<sp/><ref refid="mpaudec_8c_1a44779f18d87e71c78fc9fbf9dc88537d" kindref="member">C1</ref>)<sp/>-<sp/></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*7],<sp/><ref refid="mpaudec_8c_1a3b69b61d9deb37b13911faf2cf5cf1d5" kindref="member">C5</ref>));</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[14]<sp/>=<sp/>in1[2*0]<sp/>+<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(-in1[2*2],<sp/><ref refid="mpaudec_8c_1acc39015f57b2efb8810b603f188bdf15" kindref="member">C4</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*4],<sp/><ref refid="mpaudec_8c_1a783ffd54c433250e4b595d115f410e9a" kindref="member">C8</ref>)<sp/>+<sp/>in6_6<sp/>-<sp/></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(in1[2*8],<sp/><ref refid="mpaudec_8c_1ad6fc13322a4f1c314332ff34aa8b3fa0" kindref="member">C2</ref>));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1[16]<sp/>=<sp/>in1[2*0]<sp/>-<sp/>in1[2*2]<sp/>+<sp/>in1[2*4]<sp/>-<sp/>in1[2*6]<sp/>+<sp/>in1[2*8];</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;4;j++)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>tmp[i];</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>tmp[i<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>t1<sp/>+<sp/>t0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>t1<sp/>-<sp/>t0;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>=<sp/>tmp[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t3<sp/>=<sp/>tmp[i<sp/>+<sp/>3];</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(t3<sp/>+<sp/>t2,<sp/><ref refid="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" kindref="member">icos36</ref>[j]);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s3<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(t3<sp/>-<sp/>t2,<sp/><ref refid="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" kindref="member">icos36</ref>[8<sp/>-<sp/>j]);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(s0<sp/>+<sp/>s1,<sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[9<sp/>+<sp/>8<sp/>-<sp/>j]);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(s0<sp/>-<sp/>s1,<sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[8<sp/>-<sp/>j]);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[18<sp/>+<sp/>9<sp/>+<sp/>j]<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[18<sp/>+<sp/>8<sp/>-<sp/>j]<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[9<sp/>+<sp/>j]<sp/>=<sp/>-t1;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[8<sp/>-<sp/>j]<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(s2<sp/>+<sp/>s3,<sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[9+j]);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(s2<sp/>-<sp/>s3,<sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[j]);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[18<sp/>+<sp/>9<sp/>+<sp/>(8<sp/>-<sp/>j)]<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[18<sp/>+<sp/>j]<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[9<sp/>+<sp/>(8<sp/>-<sp/>j)]<sp/>=<sp/>-t1;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[j]<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>s0<sp/>=<sp/>tmp[16];</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp[17],<sp/><ref refid="mpaudec_8c_1a500376b9aa6f6308d0eab2a5f5de9a20" kindref="member">icos36</ref>[4]);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(s0<sp/>+<sp/>s1,<sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[9<sp/>+<sp/>4]);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(s0<sp/>-<sp/>s1,<sp/><ref refid="mpaudec_8c_1a37d671b7a9f2074bc956ac2bbe040642" kindref="member">icos72</ref>[4]);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>out[18<sp/>+<sp/>9<sp/>+<sp/>4]<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>out[18<sp/>+<sp/>8<sp/>-<sp/>4]<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>out[9<sp/>+<sp/>4]<sp/>=<sp/>-t1;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>out[8<sp/>-<sp/>4]<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fast<sp/>header<sp/>check<sp/>for<sp/>resync<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055" refid="mpaudec_8c_1a7c31d00e6546442f4894d24f15c61dd6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a7c31d00e6546442f4894d24f15c61dd6" kindref="member">check_header</ref>(uint32_t<sp/>header)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((header<sp/>&amp;<sp/>0xffe00000)<sp/>!=<sp/>0xffe00000)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>layer<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((header<sp/>&gt;&gt;<sp/>17)<sp/>&amp;<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bit<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((header<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0xf)<sp/>==<sp/>0xf)</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((header<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>3)<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>header<sp/>+<sp/>layer<sp/>+<sp/>bitrate<sp/>+<sp/>freq<sp/>+<sp/>lsf/mpeg25<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073" refid="mpaudec_8c_1a2bb2d7ffb7f980fa7537e3f9e1e69c16" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAME_HEADER_MASK<sp/>\</highlight></codeline>
<codeline lineno="1074"><highlight class="preprocessor"><sp/><sp/><sp/>(0xffe00000<sp/>|<sp/>(3<sp/>&lt;&lt;<sp/>17)<sp/>|<sp/>(0xf<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>(3<sp/>&lt;&lt;<sp/>10)<sp/>|<sp/>(3<sp/>&lt;&lt;<sp/>19))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>header<sp/>decoding.<sp/>MUST<sp/>check<sp/>the<sp/>header<sp/>before<sp/>because<sp/>no</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/><sp/><sp/>consistency<sp/>check<sp/>is<sp/>done<sp/>there.<sp/>Return<sp/>1<sp/>if<sp/>free<sp/>format<sp/>found<sp/>and</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/><sp/><sp/>that<sp/>the<sp/>frame<sp/>size<sp/>must<sp/>be<sp/>computed<sp/>externally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079" refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" kindref="member">decode_header</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,<sp/>uint32_t<sp/>header)</highlight></codeline>
<codeline lineno="1080"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate,<sp/>frame_size,<sp/>mpeg25,<sp/>padding;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sample_rate_index,<sp/>bitrate_index;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header<sp/>&amp;<sp/>(1&lt;&lt;20))<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref><sp/>=<sp/>(header<sp/>&amp;<sp/>(1&lt;&lt;19))<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpeg25<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpeg25<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref><sp/>=<sp/>4<sp/>-<sp/>((header<sp/>&gt;&gt;<sp/>17)<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_rate_index<sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>10)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_rate<sp/>=<sp/><ref refid="mpaudectab_8h_1a2dd5687be843564d2cdf4c031368ed5e" kindref="member">mpa_freq_tab</ref>[sample_rate_index]<sp/>&gt;&gt;<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref><sp/>+<sp/>mpeg25);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_rate_index<sp/>+=<sp/>3<sp/>*<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref><sp/>+<sp/>mpeg25);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>=<sp/>sample_rate_index;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1aaaaad5dfc4720e69591ec81301cce46f" kindref="member">error_protection</ref><sp/>=<sp/>((header<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>1)<sp/>^<sp/>1;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" kindref="member">sample_rate</ref><sp/>=<sp/>sample_rate;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/>bitrate_index<sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/>padding<sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>9)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" kindref="member">mode</ref><sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>=<sp/>(header<sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>3;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" kindref="member">mode</ref><sp/>==<sp/><ref refid="mpegaudio_8h_1a2cc2b5220d869bc6b1715543a4e5077c" kindref="member">MPA_MONO</ref>)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bitrate_index<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>=<sp/><ref refid="mpaudectab_8h_1a79d810c74ea9555579573f74c5e177f4" kindref="member">mpa_bitrate_tab</ref>[s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>][s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref><sp/>-<sp/>1][bitrate_index];</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref><sp/>=<sp/>frame_size<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>=<sp/>(frame_size<sp/>*<sp/>12000)<sp/>/<sp/>sample_rate;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>=<sp/>(frame_size<sp/>+<sp/>padding)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>=<sp/>(frame_size<sp/>*<sp/>144000)<sp/>/<sp/>sample_rate;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>+=<sp/>padding;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>=<sp/>(frame_size<sp/>*<sp/>144000)<sp/>/<sp/>(sample_rate<sp/>&lt;&lt;<sp/>s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>+=<sp/>padding;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>=<sp/>frame_size;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>frame<sp/>size<sp/>computed,<sp/>signal<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref>)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>format:<sp/>compute<sp/>bitrate<sp/>and<sp/>real<sp/>frame<sp/>size<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>size<sp/>we<sp/>extracted<sp/>by<sp/>reading<sp/>the<sp/>bitstream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref>;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>+=<sp/>padding<sp/><sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref><sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>*<sp/>sample_rate)<sp/>/<sp/>48000;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>+=<sp/>padding;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref><sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>*<sp/>sample_rate)<sp/>/<sp/>144000;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>+=<sp/>padding;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref><sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>*<sp/>(sample_rate<sp/>&lt;&lt;<sp/>s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>))<sp/>/<sp/>144000;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;layer%d,<sp/>%d<sp/>Hz,<sp/>%d<sp/>kbits/s,<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" kindref="member">sample_rate</ref>,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref>);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref><sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" kindref="member">MODE_EXT_MS_STEREO</ref>)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ms-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" kindref="member">MODE_EXT_I_STEREO</ref>)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;i-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;stereo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;mono&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>number<sp/>of<sp/>decoded<sp/>frames<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173" refid="mpaudec_8c_1aa8d8ca6a6ace0fa4945bbf9de65c0364" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aa8d8ca6a6ace0fa4945bbf9de65c0364" kindref="member">mp_decode_layer1</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s)</highlight></codeline>
<codeline lineno="1174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bound,<sp/>i,<sp/>v,<sp/>n,<sp/>ch,<sp/>j,<sp/>mant;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>allocation[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>];</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>scale_factors[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>];</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" kindref="member">mode</ref><sp/>==<sp/><ref refid="mpegaudio_8h_1a9d38dac54746227a90eefeda2012ea65" kindref="member">MPA_JSTEREO</ref>)<sp/></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound<sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>+<sp/>1)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound<sp/>=<sp/><ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocation<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bound;i++)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocation[ch][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=bound;i&lt;<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allocation[0][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>factors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bound;i++)<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allocation[ch][i])</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factors[ch][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=bound;i&lt;<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allocation[0][i])<sp/>{</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factors[0][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_factors[1][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;12;j++)<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bound;i++)<sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>allocation[ch][i];</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(n,<sp/>mant,<sp/>scale_factors[ch][i]);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][j][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=bound;i&lt;<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>allocation[0][i];</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>n<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(n,<sp/>mant,<sp/>scale_factors[0][i]);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][j][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(n,<sp/>mant,<sp/>scale_factors[1][i]);</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][j][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][j][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][j][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>bitrate<sp/>is<sp/>in<sp/>kb/s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240" refid="mpaudec_8c_1a60ca1fa363b8401e9a27bacf3f679d21" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a60ca1fa363b8401e9a27bacf3f679d21" kindref="member">l2_select_table</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitrate,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_channels,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lsf)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch_bitrate,<sp/>table;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/>ch_bitrate<sp/>=<sp/>bitrate<sp/>/<sp/>nb_channels;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lsf)<sp/>{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((freq<sp/>==<sp/>48000<sp/>&amp;&amp;<sp/>ch_bitrate<sp/>&gt;=<sp/>56)<sp/>||</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ch_bitrate<sp/>&gt;=<sp/>56<sp/>&amp;&amp;<sp/>ch_bitrate<sp/>&lt;=<sp/>80))<sp/></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>!=<sp/>48000<sp/>&amp;&amp;<sp/>ch_bitrate<sp/>&gt;=<sp/>96)<sp/></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freq<sp/>!=<sp/>32000<sp/>&amp;&amp;<sp/>ch_bitrate<sp/>&lt;=<sp/>48)<sp/></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261" refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" kindref="member">mp_decode_layer2</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sblimit;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>used<sp/>subbands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bits_8c_1a3d11308e2c23c39139ae637124c8dd9d" kindref="member">alloc_table</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table,<sp/>bit_alloc_bits,<sp/>i,<sp/>j,<sp/>ch,<sp/>bound,<sp/>v;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bit_alloc[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>];</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scale_code[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>];</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scale_factors[<ref refid="mpegaudio_8h_1a90c106dcc84bd769bb0fbbe073fb2277" kindref="member">MPA_MAX_CHANNELS</ref>][<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>][3],<sp/>*sf;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scale,<sp/>qindex,<sp/>bits,<sp/>steps,<sp/>k,<sp/>l,<sp/>m,<sp/>b;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>decoding<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/><ref refid="mpaudec_8c_1a60ca1fa363b8401e9a27bacf3f679d21" kindref="member">l2_select_table</ref>(s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref><sp/>/<sp/>1000,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>,<sp/></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" kindref="member">sample_rate</ref>,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>sblimit<sp/>=<sp/><ref refid="mpaudectab_8h_1a476fe24349d019d744f18f9b582b916e" kindref="member">sblimit_table</ref>[table];</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>alloc_table<sp/>=<sp/><ref refid="mpaudectab_8h_1a46d3a09f0069e54ad59c4eb8f82a16ee" kindref="member">alloc_tables</ref>[table];</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1aef725befb5ce2f4624cfbfded4a8bf53" kindref="member">mode</ref><sp/>==<sp/><ref refid="mpegaudio_8h_1a9d38dac54746227a90eefeda2012ea65" kindref="member">MPA_JSTEREO</ref>)<sp/></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound<sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>+<sp/>1)<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bound<sp/>=<sp/>sblimit;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;bound=%d<sp/>sblimit=%d\n&quot;</highlight><highlight class="normal">,<sp/>bound,<sp/>sblimit);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parse<sp/>bit<sp/>allocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bound;i++)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc_bits<sp/>=<sp/>alloc_table[j];</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc[ch][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>bit_alloc_bits);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>bit_alloc_bits;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=bound;i&lt;sblimit;i++)<sp/>{</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc_bits<sp/>=<sp/>alloc_table[j];</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>bit_alloc_bits);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc[0][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc[1][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>bit_alloc_bits;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;sblimit;i++)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>bit_alloc[ch][i]);</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;sblimit;i++)<sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit_alloc[ch][i])<sp/></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale_code[ch][i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>factors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;sblimit;i++)<sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit_alloc[ch][i])<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>scale_factors[ch][i];</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(scale_code[ch][i])<sp/>{</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[0]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[1]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[2]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[0]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[1]<sp/>=<sp/>sf[0];</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[2]<sp/>=<sp/>sf[0];</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[0]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[2]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[1]<sp/>=<sp/>sf[0];</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[0]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[2]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>6);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf[1]<sp/>=<sp/>sf[2];</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;sblimit;i++)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit_alloc[ch][i])<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>scale_factors[ch][i];</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%d<sp/>%d<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>sf[0],<sp/>sf[1],<sp/>sf[2]);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>-&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(l=0;l&lt;12;l+=3)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bound;i++)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc_bits<sp/>=<sp/>alloc_table[j];</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>bit_alloc[ch][i];</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>=<sp/>scale_factors[ch][i][k];</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qindex<sp/>=<sp/>alloc_table[j+b];</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/><ref refid="mpaudectab_8h_1a2e17368e30468d8e9768c3ad758fbde0" kindref="member">quant_bits</ref>[qindex];</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>values<sp/>at<sp/>the<sp/>same<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>-bits);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steps<sp/>=<sp/><ref refid="mpaudectab_8h_1ade9443b3de5ad76f2f87dcf869d820d0" kindref="member">quant_steps</ref>[qindex];</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>v<sp/>%<sp/>steps,<sp/>scale);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>/<sp/>steps;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>v<sp/>%<sp/>steps,<sp/>scale);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>/<sp/>steps;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>v,<sp/>scale);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(m=0;m&lt;3;m++)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>bits);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(bits<sp/>-<sp/>1,<sp/>v,<sp/>scale);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>m][i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>subband<sp/>in<sp/>alloc<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>bit_alloc_bits;<sp/></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>find<sp/>a<sp/>way<sp/>to<sp/>avoid<sp/>this<sp/>duplication<sp/>of<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=bound;i&lt;sblimit;i++)<sp/>{</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_alloc_bits<sp/>=<sp/>alloc_table[j];</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>bit_alloc[0][i];</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b)<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mant,<sp/>scale0,<sp/>scale1;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale0<sp/>=<sp/>scale_factors[0][i][k];</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale1<sp/>=<sp/>scale_factors[1][i][k];</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qindex<sp/>=<sp/>alloc_table[j+b];</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/><ref refid="mpaudectab_8h_1a2e17368e30468d8e9768c3ad758fbde0" kindref="member">quant_bits</ref>[qindex];</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>3<sp/>values<sp/>at<sp/>the<sp/>same<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>-bits);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>steps<sp/>=<sp/><ref refid="mpaudectab_8h_1ade9443b3de5ad76f2f87dcf869d820d0" kindref="member">quant_steps</ref>[qindex];</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/>v<sp/>%<sp/>steps;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>/<sp/>steps;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>mant,<sp/>scale0);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>mant,<sp/>scale1);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/>v<sp/>%<sp/>steps;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>v<sp/>/<sp/>steps;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>mant,<sp/>scale0);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>mant,<sp/>scale1);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>v,<sp/>scale0);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a4d72303722fb4254bd6015f0d3be24bc" kindref="member">l2_unscale_group</ref>(steps,<sp/>v,<sp/>scale1);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(m=0;m&lt;3;m++)<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mant<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>bits);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>m][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(bits<sp/>-<sp/>1,<sp/>mant,<sp/>scale0);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>m][i]<sp/>=<sp/></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ace09b3a4500ca2aea564ee747aaa804a" kindref="member">l1_unscale</ref>(bits<sp/>-<sp/>1,<sp/>mant,<sp/>scale1);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[0][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[1][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>next<sp/>subband<sp/>in<sp/>alloc<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>bit_alloc_bits;<sp/></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>remaining<sp/>samples<sp/>to<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=sblimit;i&lt;<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>0][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>1][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][k<sp/>*<sp/>12<sp/>+<sp/>l<sp/>+<sp/>2][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3<sp/>*<sp/>12;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/>*<sp/>Seek<sp/>back<sp/>in<sp/>the<sp/>stream<sp/>for<sp/>backstep<sp/>bytes<sp/>(at<sp/>most<sp/>511<sp/>bytes)</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472" refid="mpaudec_8c_1ab3d38c0057af45f5edb7f6dc158ede46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1ab3d38c0057af45f5edb7f6dc158ede46" kindref="member">seek_to_maindata</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>backstep)</highlight></codeline>
<codeline lineno="1473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*ptr;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>current<sp/>position<sp/>in<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>(uint8_t<sp/>*)(s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>.<ref refid="structGetBitContext_1ad3bbe8f5d0b9e28a1070396fac5725d8" kindref="member">buffer</ref><sp/>+<sp/>(<ref refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" kindref="member">get_bits_count</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>)&gt;&gt;3));</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>old<sp/>data<sp/>before<sp/>current<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>-=<sp/>backstep;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(ptr,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" kindref="member">inbuf1</ref>[s-&gt;<ref refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" kindref="member">inbuf_index</ref><sp/>^<sp/>1]<sp/>+<sp/></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" kindref="member">BACKSTEP_SIZE</ref><sp/>+<sp/>s-&gt;<ref refid="structMPADecodeContext_1a67b57c009b64391e56072de209e74f6c" kindref="member">old_frame_size</ref><sp/>-<sp/>backstep,<sp/>backstep);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>init<sp/>get<sp/>bits<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bits_8c_1a82a721f07b4c8c18282532ceeb0b76d3" kindref="member">init_get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>ptr,<sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>+<sp/>backstep)*8);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>next<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" kindref="member">inbuf_index</ref><sp/>^=<sp/>1;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>=<sp/>&amp;s-&gt;<ref refid="structMPADecodeContext_1a50261340d0c177c2c8f98e2929293118" kindref="member">inbuf1</ref>[s-&gt;<ref refid="structMPADecodeContext_1ac80055478f6a1d0e6de8f8577dd682ad" kindref="member">inbuf_index</ref>][<ref refid="mpaudec_8c_1a733ea7db34c2b4dd85666218ec70a63d" kindref="member">BACKSTEP_SIZE</ref>];</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a67b57c009b64391e56072de209e74f6c" kindref="member">old_frame_size</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref>;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492" refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*slen,</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n3)<sp/>{</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen[3]<sp/>=<sp/>sf<sp/>%<sp/>n3;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>/=<sp/>n3;</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n2)<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen[2]<sp/>=<sp/>sf<sp/>%<sp/>n2;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>/=<sp/>n2;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/>slen[1]<sp/>=<sp/>sf<sp/>%<sp/>n1;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>sf<sp/>/=<sp/>n1;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>slen[0]<sp/>=<sp/>sf;</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512" refid="mpaudec_8c_1a19901913c3051acd8692540101edd707" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a19901913c3051acd8692540101edd707" kindref="member">exponents_from_scale_factors</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,<sp/></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g,</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*exponents)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*bstab,<sp/>*pretab;</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/>i,<sp/>j,<sp/>k,<sp/>l,<sp/>v0,<sp/>shift,<sp/>gain,<sp/>gains[3];</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>*exp_ptr;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>exp_ptr<sp/>=<sp/>exponents;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" kindref="member">global_gain</ref><sp/>-<sp/>210;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a3dcccee2507568460f6e4cccd97e9f29" kindref="member">scalefac_scale</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/>bstab<sp/>=<sp/><ref refid="mpaudectab_8h_1a0df9a837c9c4e59df9c96e968b332633" kindref="member">band_size_long</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>];</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>pretab<sp/>=<sp/><ref refid="mpaudectab_8h_1aea5465f567bc3602ea982c6232acd9ca" kindref="member">mpa_pretab</ref>[g-&gt;<ref refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" kindref="member">preflag</ref>];</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref>;i++)<sp/>{</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v0<sp/>=<sp/>gain<sp/>-<sp/>((g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[i]<sp/>+<sp/>pretab[i])<sp/>&lt;&lt;<sp/>shift);</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>bstab[i];</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=len;j&gt;0;j--)</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*exp_ptr++<sp/>=<sp/>v0;</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref><sp/>&lt;<sp/>13)<sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bstab<sp/>=<sp/><ref refid="mpaudectab_8h_1a1e8700bbcb020c96472c3b65ca86be67" kindref="member">band_size_short</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>];</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains[0]<sp/>=<sp/>gain<sp/>-<sp/>(g-&gt;<ref refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" kindref="member">subblock_gain</ref>[0]<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains[1]<sp/>=<sp/>gain<sp/>-<sp/>(g-&gt;<ref refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" kindref="member">subblock_gain</ref>[1]<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gains[2]<sp/>=<sp/>gain<sp/>-<sp/>(g-&gt;<ref refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" kindref="member">subblock_gain</ref>[2]<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref>;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref>;i&lt;13;i++)<sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>bstab[i];</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(l=0;l&lt;3;l++)<sp/>{</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v0<sp/>=<sp/>gains[l]<sp/>-<sp/>(g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[k++]<sp/>&lt;&lt;<sp/>shift);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=len;j&gt;0;j--)</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*exp_ptr++<sp/>=<sp/>v0;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>handle<sp/>n<sp/>=<sp/>0<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551" refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(<ref refid="structGetBitContext" kindref="compound">GetBitContext</ref><sp/>*s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(s,<sp/>n);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559" refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" kindref="member">huffman_decode</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,<sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g,</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*exponents,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_pos)</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s_index;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linbits,<sp/>code,<sp/>x,<sp/>y,<sp/>l,<sp/>v,<sp/>i,<sp/>j,<sp/>k,<sp/>pos;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGetBitContext" kindref="compound">GetBitContext</ref><sp/>last_gb;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structVLC" kindref="compound">VLC</ref><sp/>*vlc;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*code_table;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>low<sp/>frequencies<sp/>(called<sp/>big<sp/>values)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>s_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;3;i++)<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[i];</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>vlc<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" kindref="member">table_select</ref>[i];</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/><ref refid="mpaudectab_8h_1a139074012154398b66c1aa5a269a3b3b" kindref="member">mpa_huff_data</ref>[k][0];</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linbits<sp/>=<sp/><ref refid="mpaudectab_8h_1a139074012154398b66c1aa5a269a3b3b" kindref="member">mpa_huff_data</ref>[k][1];</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vlc<sp/>=<sp/>&amp;huff_vlc[l];</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_table<sp/>=<sp/><ref refid="mpaudec_8c_1ab486eeda38968b7da158bfe885782a1d" kindref="member">huff_code_table</ref>[l];</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>huffcode<sp/>and<sp/>compute<sp/>each<sp/>couple<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;j&gt;0;j--)<sp/>{</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" kindref="member">get_bits_count</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>)<sp/>&gt;=<sp/>end_pos)</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code_table)<sp/>{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/><ref refid="bits_8c_1ad9d1cef202cce95b0fd843505647ae2c" kindref="member">get_vlc</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>vlc);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>code_table[code];</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>y<sp/>&gt;&gt;<sp/>4;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>y<sp/>&amp;<sp/>0x0f;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;region=%d<sp/>n=%d<sp/>x=%d<sp/>y=%d<sp/>exp=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[i]<sp/>-<sp/>j,<sp/>x,<sp/>y,<sp/>exponents[s_index]);</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x)<sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>==<sp/>15)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>linbits);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" kindref="member">l3_unscale</ref>(x,<sp/>exponents[s_index]);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-v;</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>[s_index++]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(y<sp/>==<sp/>15)</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>linbits);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" kindref="member">l3_unscale</ref>(y,<sp/>exponents[s_index]);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-v;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>[s_index++]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>high<sp/>frequencies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/>vlc<sp/>=<sp/>&amp;huff_quad_vlc[g-&gt;<ref refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" kindref="member">count1table_select</ref>];</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/>last_gb.<ref refid="structGetBitContext_1ad3bbe8f5d0b9e28a1070396fac5725d8" kindref="member">buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s_index<sp/>&lt;=<sp/>572)<sp/>{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" kindref="member">get_bits_count</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>end_pos)<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;<sp/>end_pos<sp/>&amp;&amp;<sp/>last_gb.<ref refid="structGetBitContext_1ad3bbe8f5d0b9e28a1070396fac5725d8" kindref="member">buffer</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>some<sp/>encoders<sp/>generate<sp/>an<sp/>incorrect<sp/>size<sp/>for<sp/>this</highlight></codeline>
<codeline lineno="1631"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>part.<sp/>We<sp/>must<sp/>go<sp/>back<sp/>into<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_index<sp/>-=<sp/>4;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref><sp/>=<sp/>last_gb;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_gb=<sp/>s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/><ref refid="bits_8c_1ad9d1cef202cce95b0fd843505647ae2c" kindref="member">get_vlc</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>vlc);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;t=%d<sp/>code=%d\n&quot;</highlight><highlight class="normal">,<sp/>g-&gt;<ref refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" kindref="member">count1table_select</ref>,<sp/>code);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;4;i++)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>&amp;<sp/>(8<sp/>&gt;&gt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>non<sp/>zero<sp/>value.<sp/>Could<sp/>use<sp/>a<sp/>hand<sp/>coded<sp/>function<sp/>for</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;one&apos;<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/><ref refid="mpaudec_8c_1aa551ba45abc3f6547465227e7c0f084d" kindref="member">l3_unscale</ref>(1,<sp/>exponents[s_index]);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1))</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>-v;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>[s_index++]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s_index<sp/>&lt;<sp/>576)</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>[s_index++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Reorder<sp/>short<sp/>blocks<sp/>from<sp/>bitstream<sp/>order<sp/>to<sp/>interleaved<sp/>order.<sp/>It</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/><sp/><sp/>would<sp/>be<sp/>faster<sp/>to<sp/>do<sp/>it<sp/>in<sp/>parsing,<sp/>but<sp/>the<sp/>code<sp/>would<sp/>be<sp/>far<sp/>more</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/><sp/><sp/>complicated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666" refid="mpaudec_8c_1ac3d939325754cbedaaf6bd1300da0f81" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1ac3d939325754cbedaaf6bd1300da0f81" kindref="member">reorder_block</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,<sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g)</highlight></codeline>
<codeline lineno="1667"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,<sp/>len;</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*ptr,<sp/>*dst,<sp/>*ptr1;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>tmp[576];</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>!=<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>36;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>48;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref>;i&lt;13;i++)<sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="mpaudectab_8h_1a1e8700bbcb020c96472c3b65ca86be67" kindref="member">band_size_short</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>][i];</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++)<sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>tmp<sp/>+<sp/>k;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=len;j&gt;0;j--)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst<sp/>=<sp/>*ptr++;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(ptr1,<sp/>tmp,<sp/>len<sp/>*<sp/>3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(int32_t));</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699" refid="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ISQRT2<sp/>FIXR(0.70710678118654752440)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701" refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" kindref="member">compute_stereo</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g0,<sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g1)</highlight></codeline>
<codeline lineno="1703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,<sp/>l;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>v1,<sp/>v2;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf_max,<sp/>tmp0,<sp/>tmp1,<sp/>sf,<sp/>len,<sp/>non_zero_found;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>(*is_tab)[16];</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*tab0,<sp/>*tab1;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>non_zero_found_short[3];</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>intensity<sp/>stereo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" kindref="member">MODE_EXT_I_STEREO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_tab<sp/>=<sp/><ref refid="mpaudec_8c_1a500bc90548c810b036e77e5332d1f978" kindref="member">is_table</ref>;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf_max<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_tab<sp/>=<sp/><ref refid="mpaudec_8c_1a7db6c3f7d9bf80815714772a618abc43" kindref="member">is_table_lsf</ref>[g1-&gt;<ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref><sp/>&amp;<sp/>1];</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf_max<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0<sp/>=<sp/>g0-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>576;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1<sp/>=<sp/>g1-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>576;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found_short[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found_short[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found_short[2]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(13<sp/>-<sp/>g1-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref>)<sp/>*<sp/>3<sp/>+<sp/>g1-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>12;i<sp/>&gt;=<sp/>g1-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref>;i--)<sp/>{</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>last<sp/>band,<sp/>use<sp/>previous<sp/>scale<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>11)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>-=<sp/>3;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="mpaudectab_8h_1a1e8700bbcb020c96472c3b65ca86be67" kindref="member">band_size_short</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>][i];</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(l=2;l&gt;=0;l--)<sp/>{</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!non_zero_found_short[l])<sp/>{</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>if<sp/>non<sp/>zero<sp/>band.<sp/>if<sp/>so,<sp/>stop<sp/>doing<sp/>i-stereo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;len;j++)<sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab1[j]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found_short[l]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found1;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>g1-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[k<sp/>+<sp/>l];</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&gt;=<sp/>sf_max)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found1;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>is_tab[0][sf];</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>is_tab[1][sf];</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;len;j++)<sp/>{</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tab0[j];</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0,<sp/>v1);</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0,<sp/>v2);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found1:</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" kindref="member">MODE_EXT_MS_STEREO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lower<sp/>part<sp/>of<sp/>the<sp/>spectrum<sp/>:<sp/>do<sp/>ms<sp/>stereo</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;len;j++)<sp/>{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tab0[j];</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tab1[j];</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0<sp/>+<sp/>tmp1,<sp/><ref refid="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" kindref="member">ISQRT2</ref>);</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0<sp/>-<sp/>tmp1,<sp/><ref refid="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" kindref="member">ISQRT2</ref>);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found<sp/>=<sp/>non_zero_found_short[0]<sp/>|<sp/></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found_short[1]<sp/>|<sp/></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found_short[2];</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>g1-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>-<sp/>1;i<sp/>&gt;=<sp/>0;i--)<sp/>{</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="mpaudectab_8h_1a0df9a837c9c4e59df9c96e968b332633" kindref="member">band_size_long</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>][i];</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>if<sp/>non<sp/>zero<sp/>band.<sp/>if<sp/>so,<sp/>stop<sp/>doing<sp/>i-stereo<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!non_zero_found)<sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;len;j++)<sp/>{</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab1[j]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_zero_found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found2;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>last<sp/>band,<sp/>use<sp/>previous<sp/>scale<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>(i<sp/>==<sp/>21)<sp/>?<sp/>20<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>g1-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[k];</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&gt;=<sp/>sf_max)</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>found2;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v1<sp/>=<sp/>is_tab[0][sf];</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2<sp/>=<sp/>is_tab[1][sf];</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;len;j++)<sp/>{</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tab0[j];</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0,<sp/>v1);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0,<sp/>v2);</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found2:</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" kindref="member">MODE_EXT_MS_STEREO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lower<sp/>part<sp/>of<sp/>the<sp/>spectrum<sp/>:<sp/>do<sp/>ms<sp/>stereo</highlight></codeline>
<codeline lineno="1803"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>enabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;len;j++)<sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tab0[j];</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tab1[j];</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0<sp/>+<sp/>tmp1,<sp/><ref refid="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" kindref="member">ISQRT2</ref>);</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1[j]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(tmp0<sp/>-<sp/>tmp1,<sp/><ref refid="mpaudec_8c_1a1c7e3c2d7c9a45f9567336f8b34863e0" kindref="member">ISQRT2</ref>);</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" kindref="member">MODE_EXT_MS_STEREO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ms<sp/>stereo<sp/>ONLY<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>the<sp/>1/sqrt(2)<sp/>normalization<sp/>factor<sp/>is<sp/>included<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global<sp/>gain<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0<sp/>=<sp/>g0-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1<sp/>=<sp/>g1-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;576;i++)<sp/>{</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>tab0[i];</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>tab1[i];</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab0[i]<sp/>=<sp/>tmp0<sp/>+<sp/>tmp1;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab1[i]<sp/>=<sp/>tmp0<sp/>-<sp/>tmp1;</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828" refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" kindref="member">compute_antialias</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g)</highlight></codeline>
<codeline lineno="1830"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*ptr,<sp/>*p0,<sp/>*p1,<sp/>*csa;</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/>tmp0,<sp/>tmp1,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>antialias<sp/>only<sp/>&quot;long&quot;<sp/>bands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref>)</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>check<sp/>this<sp/>for<sp/>8000Hz<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref><sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>18;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>n;i<sp/>&gt;<sp/>0;i--)<sp/>{</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0<sp/>=<sp/>ptr<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csa<sp/>=<sp/>&amp;<ref refid="mpaudec_8c_1a3af47afde7c4a4211049cb3f8898786c" kindref="member">csa_table</ref>[0][0];</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;8;j++)<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp0<sp/>=<sp/>*p0;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp1<sp/>=<sp/>*p1;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p0<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(tmp0,<sp/>csa[0])<sp/>-<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(tmp1,<sp/>csa[1]));</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p1<sp/>=<sp/><ref refid="mpaudec_8c_1af320c5c48a5dc24d4be72eb5d3085717" kindref="member">FRAC_RND</ref>(<ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(tmp0,<sp/>csa[1])<sp/>+<sp/><ref refid="mpaudec_8c_1a25f241fbc6e5930f41887fbed711c679" kindref="member">MUL64</ref>(tmp1,<sp/>csa[0]));</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p0--;</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1++;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csa<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862" refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" kindref="member">compute_imdct</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>*g,<sp/></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>*sb_samples,</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>*mdct_buf)</highlight></codeline>
<codeline lineno="1866"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>*ptr,<sp/>*win,<sp/>*win1,<sp/>*buf,<sp/>*buf2,<sp/>*out_ptr,<sp/>*ptr1;</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>in[6];</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>out[36];</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>out2[12];</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>k,<sp/>mdct_long_end,<sp/>v,<sp/>sblimit;</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>last<sp/>non<sp/>zero<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>576;</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref><sp/>+<sp/>2<sp/>*<sp/>18;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptr<sp/>&gt;=<sp/>ptr1)<sp/>{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>-=<sp/>6;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>ptr[0]<sp/>|<sp/>ptr[1]<sp/>|<sp/>ptr[2]<sp/>|<sp/>ptr[3]<sp/>|<sp/>ptr[4]<sp/>|<sp/>ptr[5];</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/>sblimit<sp/>=<sp/>((ptr<sp/>-<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>)<sp/>/<sp/>18)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>check<sp/>for<sp/>8000<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref>)</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdct_long_end<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdct_long_end<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdct_long_end<sp/>=<sp/>sblimit;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>mdct_buf;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a8657257f63f8b3dcbd9a4b0667c626bf" kindref="member">sb_hybrid</ref>;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;mdct_long_end;j++)<sp/>{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a8e0f45791456c07ffa41f0dacd94f152" kindref="member">imdct36</ref>(out,<sp/>ptr);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>window<sp/>&amp;<sp/>overlap<sp/>with<sp/>previous<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>sb_samples<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref><sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win1<sp/>=<sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[0];</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win1<sp/>=<sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref>];</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>frequency<sp/>inversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win<sp/>=<sp/>win1<sp/>+<sp/>((4<sp/>*<sp/>36)<sp/>&amp;<sp/>-(j<sp/>&amp;<sp/>1));</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;18;i++)<sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(out[i],<sp/>win[i])<sp/>+<sp/>buf[i];</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(out[i<sp/>+<sp/>18],<sp/>win[i<sp/>+<sp/>18]);</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/><ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=mdct_long_end;j&lt;sblimit;j++)<sp/>{</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;6;i++)<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[6<sp/>+<sp/>i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out[30+i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>select<sp/>frequency<sp/>inversion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>win<sp/>=<sp/><ref refid="mpaudec_8c_1ab42e62b9a0a1df8ced04d2e7c037ff55" kindref="member">mdct_win</ref>[2]<sp/>+<sp/>((4<sp/>*<sp/>36)<sp/>&amp;<sp/>-(j<sp/>&amp;<sp/>1));</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>=<sp/>out<sp/>+<sp/>6;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;3;k++)<sp/>{</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reorder<sp/>input<sp/>for<sp/>short<sp/>mdct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1<sp/>=<sp/>ptr<sp/>+<sp/>k;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;6;i++)<sp/>{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in[i]<sp/>=<sp/>*ptr1;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr1<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a537c21d3e9b6a3435fd1dd884145b853" kindref="member">imdct12</ref>(out2,<sp/>in);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>12<sp/>point<sp/>window<sp/>and<sp/>do<sp/>small<sp/>overlap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;6;i++)<sp/>{</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2[i]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(out2[i],<sp/>win[i])<sp/>+<sp/>buf2[i];</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2[i<sp/>+<sp/>6]<sp/>=<sp/><ref refid="mpaudec_8c_1a4b441407adf716949297d9fd8cfded54" kindref="member">MULL</ref>(out2[i<sp/>+<sp/>6],<sp/>win[i<sp/>+<sp/>6]);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf2<sp/>+=<sp/>6;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overlap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>sb_samples<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;18;i++)<sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr<sp/>=<sp/>out[i]<sp/>+<sp/>buf[i];</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>out[i<sp/>+<sp/>18];</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/><ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>bands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=sblimit;j&lt;<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;j++)<sp/>{</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>overlap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>sb_samples<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;18;i++)<sp/>{</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr<sp/>=<sp/>buf[i];</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_ptr<sp/>+=<sp/><ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>+=<sp/>18;</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>main<sp/>layer3<sp/>decoding<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963" refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" kindref="member">mp_decode_layer3</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s)</highlight></codeline>
<codeline lineno="1964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nb_granules,<sp/>main_data_begin,<sp/>private_bits;</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gr,<sp/>ch,<sp/>blocksplit_flag,<sp/>i,<sp/>j,<sp/>k,<sp/>n,<sp/>bits_pos,<sp/>bits_left;</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structGranuleDef" kindref="compound">GranuleDef</ref><sp/>granules[2][2],<sp/>*g;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>exponents[576];</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>side<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_data_begin<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>private_bits<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>private_bits<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_granules<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>main_data_begin<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>9);</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>private_bits<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>private_bits<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>5);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_granules<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granules[ch][0].<ref refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" kindref="member">scfsi</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>all<sp/>scale<sp/>factors<sp/>are<sp/>transmitted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>granules[ch][1].<ref refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" kindref="member">scfsi</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(gr=0;gr&lt;nb_granules;gr++)<sp/>{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;gr=%d<sp/>ch=%d:<sp/>side_info\n&quot;</highlight><highlight class="normal">,<sp/>gr,<sp/>ch);</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>&amp;granules[ch][gr];</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ab00cb930095ddb1bab8c6e030add28d6" kindref="member">part2_3_length</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>12);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a98900bb32f17566b7baf3991c9bf7345" kindref="member">big_values</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>9);</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" kindref="member">global_gain</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>8);</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>MS<sp/>stereo<sp/>only<sp/>is<sp/>selected,<sp/>we<sp/>precompute<sp/>the</highlight></codeline>
<codeline lineno="2001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1/sqrt(2)<sp/>renormalization<sp/>factor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/>(<ref refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" kindref="member">MODE_EXT_MS_STEREO</ref><sp/>|<sp/><ref refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" kindref="member">MODE_EXT_I_STEREO</ref>))<sp/>==<sp/></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a0458002b9f1698e9a9c3ef251b1b964e" kindref="member">MODE_EXT_MS_STEREO</ref>)</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a2329193981d19c1ecfbc3a6e0e52dbfb" kindref="member">global_gain</ref><sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>)</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>9);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocksplit_flag<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blocksplit_flag)<sp/>{</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>2);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;2;i++)</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" kindref="member">table_select</ref>[i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>5);</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;3;i++)<sp/></highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ad09a9bdbe41426be60026686415e211e" kindref="member">subblock_gain</ref>[i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>huffman<sp/>coded<sp/>region<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[0]<sp/>=<sp/>(36<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>&lt;=<sp/>2)<sp/></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[0]<sp/>=<sp/>(36<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>!=<sp/>8)<sp/></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[0]<sp/>=<sp/>(54<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[0]<sp/>=<sp/>(108<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[1]<sp/>=<sp/>(576<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>region_address1,<sp/>region_address2,<sp/>l;</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;3;i++)</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a40d396d71b3a28bc1c9487dbecbdf558" kindref="member">table_select</ref>[i]<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>5);</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>huffman<sp/>coded<sp/>region<sp/>sizes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_address1<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>4);</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_address2<sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>3);</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;region1=%d<sp/>region2=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region_address1,<sp/>region_address2);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[0]<sp/>=<sp/></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" kindref="member">band_index_long</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>][region_address1<sp/>+<sp/>1]<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>region_address1<sp/>+<sp/>region_address2<sp/>+<sp/>2;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>should<sp/>not<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>22)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l<sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[1]<sp/>=<sp/></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ac2b4a1c4ea09034adb3f3c922ca7bdae" kindref="member">band_index_long</ref>[s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref>][l]<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>region<sp/>offsets<sp/>to<sp/>region<sp/>sizes<sp/>and<sp/>truncate</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>to<sp/>big_values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[2]<sp/>=<sp/>(576<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;3;i++)<sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[i];</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;<sp/>g-&gt;<ref refid="structGranuleDef_1a98900bb32f17566b7baf3991c9bf7345" kindref="member">big_values</ref>)</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1a98900bb32f17566b7baf3991c9bf7345" kindref="member">big_values</ref>;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a0d469d79cd8296ed88ad157fda7cf67c" kindref="member">region_size</ref>[i]<sp/>=<sp/>k<sp/>-<sp/>j;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>k;</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>band<sp/>indexes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>switched<sp/>mode,<sp/>we<sp/>handle<sp/>the<sp/>36<sp/>first<sp/>samples<sp/>as</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>long<sp/>blocks.<sp/><sp/>For<sp/>8000Hz,<sp/>we<sp/>handle<sp/>the<sp/>48<sp/>first</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exponents<sp/>as<sp/>long<sp/>blocks<sp/>(XXX:<sp/>check<sp/>this!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>&lt;=<sp/>2)</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>!=<sp/>8)</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>=<sp/>4;<sp/></highlight><highlight class="comment">/*<sp/>8000<sp/>Hz<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a56cc0293ed289193b660ca154a6fc804" kindref="member">sample_rate_index</ref><sp/>!=<sp/>8)</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref><sp/>=<sp/>2;<sp/></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a857300b95700cf0a6601fb3f3269dc2f" kindref="member">short_start</ref><sp/>=<sp/>13;</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a9db928ec8bbf4562addeb1b9d7ade17e" kindref="member">long_end</ref><sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" kindref="member">preflag</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>)</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" kindref="member">preflag</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a3dcccee2507568460f6e4cccd97e9f29" kindref="member">scalefac_scale</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ae0ef76bf6acfe8dbb72c1a93acc4fa41" kindref="member">count1table_select</ref><sp/>=<sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>1);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;block_type=%d<sp/>switch_point=%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref>,<sp/>g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref>);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>we<sp/>get<sp/>bits<sp/>from<sp/>the<sp/>main_data_begin<sp/>offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;seekback:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>main_data_begin);</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ab3d38c0057af45f5edb7f6dc158ede46" kindref="member">seek_to_maindata</ref>(s,<sp/>main_data_begin);</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(gr=0;gr&lt;nb_granules;gr++)<sp/>{</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>&amp;granules[ch][gr];</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_pos<sp/>=<sp/><ref refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" kindref="member">get_bits_count</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*sc;</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>slen,<sp/>slen1,<sp/>slen2;</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MPEG1<sp/>scale<sp/>factors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen1<sp/>=<sp/><ref refid="mpaudectab_8h_1a362147b898fe434776eff40b414df115" kindref="member">slen_table</ref>[0][g-&gt;<ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref>];</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen2<sp/>=<sp/><ref refid="mpaudectab_8h_1a362147b898fe434776eff40b414df115" kindref="member">slen_table</ref>[1][g-&gt;<ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref>];</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;slen1=%d<sp/>slen2=%d\n&quot;</highlight><highlight class="normal">,<sp/>slen1,<sp/>slen2);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref><sp/>?<sp/>17<sp/>:<sp/>18;</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j++]<sp/>=<sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>slen1);</highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;18;i++)</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j++]<sp/>=<sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>slen2);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;3;i++)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc<sp/>=<sp/>granules[ch][0].<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>;</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;4;k++)<sp/>{</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(k<sp/>==<sp/>0<sp/>?<sp/>6<sp/>:<sp/>5);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((g-&gt;<ref refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" kindref="member">scfsi</ref><sp/>&amp;<sp/>(0x8<sp/>&gt;&gt;<sp/>k))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slen<sp/>=<sp/>(k<sp/>&lt;<sp/>2)<sp/>?<sp/>slen1<sp/>:<sp/>slen2;</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j++]<sp/>=<sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>slen);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>simply<sp/>copy<sp/>from<sp/>last<sp/>granule<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)<sp/>{</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j]<sp/>=<sp/>sc[j];</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;scfsi=%x<sp/>gr=%d<sp/>ch=%d<sp/>scale_factors:\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1addc5049971aaae5983cc28a3d6a730bf" kindref="member">scfsi</ref>,<sp/>gr,<sp/>ch);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;j;i++)</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[i]);</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tindex,<sp/>tindex2,<sp/>slen[4],<sp/>sl,<sp/>sf;</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>LSF<sp/>scale<sp/>factors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(g-&gt;<ref refid="structGranuleDef_1aa075917838d8b278afbd8a5fbda8b27e" kindref="member">block_type</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1ae532b7e94f932f9c0c4184b341a36366" kindref="member">switch_point</ref><sp/>?<sp/>2<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1abece083cd9bed288abb4520a8d52d4e8" kindref="member">scalefac_compress</ref>;</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;<ref refid="structMPADecodeContext_1a60944277285655b3ee32aa355585dc5b" kindref="member">mode_ext</ref><sp/>&amp;<sp/><ref refid="mpaudec_8c_1a95a02ac384a488baecdae1dd3d449ab1" kindref="member">MODE_EXT_I_STEREO</ref>)<sp/>&amp;&amp;<sp/>ch<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>intensity<sp/>stereo<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&lt;<sp/>180)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(slen,<sp/>sf,<sp/>6,<sp/>6,<sp/>0);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex2<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&lt;<sp/>244)<sp/>{</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(slen,<sp/>sf<sp/>-<sp/>180,<sp/>4,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex2<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(slen,<sp/>sf<sp/>-<sp/>244,<sp/>3,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex2<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>normal<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&lt;<sp/>400)<sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(slen,<sp/>sf,<sp/>5,<sp/>4,<sp/>4);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf<sp/>&lt;<sp/>500)<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(slen,<sp/>sf<sp/>-<sp/>400,<sp/>5,<sp/>4,<sp/>0);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex2<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acafc5e389fb92f6955d3449abd7187b2" kindref="member">lsf_sf_expand</ref>(slen,<sp/>sf<sp/>-<sp/>500,<sp/>3,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tindex2<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1ad7443fbb2e96174d032f9d6e6d1fe94e" kindref="member">preflag</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;4;k++)<sp/>{</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="mpaudectab_8h_1aa586feefea61f07471609a8e741ec04d" kindref="member">lsf_nsf_table</ref>[tindex2][tindex][k];</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sl<sp/>=<sp/>slen[k];</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;n;i++)</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j++]<sp/>=<sp/><ref refid="mpaudec_8c_1a3bb107475a04ad73ab8f45dd8f1dbc44" kindref="member">get_bitsz</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>sl);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>XXX:<sp/>should<sp/>compute<sp/>exact<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;j&lt;40;j++)</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">#</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defined(DEBUG)</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;gr=%d<sp/>ch=%d<sp/>scale_factors:\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr,<sp/>ch);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;40;i++)</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>g-&gt;<ref refid="structGranuleDef_1a4a9dad38a4188a7764c7593b58a4bcf8" kindref="member">scale_factors</ref>[i]);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a19901913c3051acd8692540101edd707" kindref="member">exponents_from_scale_factors</ref>(s,<sp/>g,<sp/>exponents);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>Huffman<sp/>coded<sp/>residue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpaudec_8c_1aa123e4d670f1d03b262749f6d2134630" kindref="member">huffman_decode</ref>(s,<sp/>g,<sp/>exponents,</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_pos<sp/>+<sp/>g-&gt;<ref refid="structGranuleDef_1ab00cb930095ddb1bab8c6e030add28d6" kindref="member">part2_3_length</ref>)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>extension<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_left<sp/>=<sp/>g-&gt;<ref refid="structGranuleDef_1ab00cb930095ddb1bab8c6e030add28d6" kindref="member">part2_3_length</ref><sp/>-<sp/>(<ref refid="bits_8c_1aa3797eab0bbe953c41e8a070aa3a4dbc" kindref="member">get_bits_count</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>)<sp/>-<sp/>bits_pos);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits_left<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;bits_left=%d\n&quot;</highlight><highlight class="normal">,<sp/>bits_left);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bits_left<sp/>&gt;=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bits_8c_1aea74eea48a18a3731b052ac530f6afce" kindref="member">skip_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>16);</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits_left<sp/>-=<sp/>16;</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits_left<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bits_8c_1aea74eea48a18a3731b052ac530f6afce" kindref="member">skip_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>bits_left);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>ch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a34bde35be4bc67de1fd03285c3729de4" kindref="member">compute_stereo</ref>(s,<sp/>&amp;granules[0][gr],<sp/>&amp;granules[1][gr]);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g<sp/>=<sp/>&amp;granules[ch][gr];</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1ac3d939325754cbedaaf6bd1300da0f81" kindref="member">reorder_block</ref>(s,<sp/>g);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1aeb64a1031552d0031c4b3e32e5260ff3" kindref="member">compute_antialias</ref>(s,<sp/>g);</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1acf918d4b847c8a23d9cb38db467c7483" kindref="member">compute_imdct</ref>(s,<sp/>g,<sp/>&amp;s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][18<sp/>*<sp/>gr][0],<sp/>s-&gt;<ref refid="structMPADecodeContext_1aefa78c13626ac754088af8c6569eb15a" kindref="member">mdct_buf</ref>[ch]);<sp/></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>gr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_granules<sp/>*<sp/>18;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258" refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" kindref="member">mp_decode_frame</ref>(<ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s,<sp/></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int16_t<sp/>*samples)</highlight></codeline>
<codeline lineno="2260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>nb_frames,<sp/>ch;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>*samples_ptr;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bits_8c_1a82a721f07b4c8c18282532ceeb0b76d3" kindref="member">init_get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>+<sp/><ref refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" kindref="member">HEADER_SIZE</ref>,<sp/></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>-<sp/><ref refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" kindref="member">HEADER_SIZE</ref>)*8);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>skip<sp/>error<sp/>protection<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1aaaaad5dfc4720e69591ec81301cce46f" kindref="member">error_protection</ref>)</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bits_8c_1a4c9accf71fe52dba23187e83252f2459" kindref="member">get_bits</ref>(&amp;s-&gt;<ref refid="structMPADecodeContext_1aa5f9521d91978fea2cc54fac02a392f3" kindref="member">gb</ref>,<sp/>16);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;frame<sp/>%d:\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;frame_count);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_frames<sp/>=<sp/><ref refid="mpaudec_8c_1aa8d8ca6a6ace0fa4945bbf9de65c0364" kindref="member">mp_decode_layer1</ref>(s);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_frames<sp/>=<sp/><ref refid="mpaudec_8c_1a72ee70f98e9873f63c88b69b80e15825" kindref="member">mp_decode_layer2</ref>(s);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_frames<sp/>=<sp/><ref refid="mpaudec_8c_1aa6bde9d54d008252eb8b748f805c7c1e" kindref="member">mp_decode_layer3</ref>(s);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DEBUG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;nb_frames;i++)<sp/>{</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d-%d:&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>ch);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;<ref refid="mpegaudio_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>;j++)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>%0.6f&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][i][j]<sp/>/<sp/><ref refid="mpaudec_8c_1a58bf38924819d3cb38facc24eb4bf799" kindref="member">FRAC_ONE</ref>);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>the<sp/>synthesis<sp/>filter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(ch=0;ch&lt;s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;ch++)<sp/>{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_ptr<sp/>=<sp/>samples<sp/>+<sp/>ch;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;nb_frames;i++)<sp/>{</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1a68661d84372543e26e2d315f5e7b35e7" kindref="member">synth_filter</ref>(s,<sp/>ch,<sp/>samples_ptr,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>,</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1ad569b1b6bebb3cd6a261ec5d5211ec8c" kindref="member">sb_samples</ref>[ch][i]);</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samples_ptr<sp/>+=<sp/>32<sp/>*<sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>s-&gt;frame_count++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_frames<sp/>*<sp/>32<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(short)<sp/>*<sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312" refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1ad804754f6cb3863f2489fcddc56f9ae4" kindref="member">mpaudec_decode_frame</ref>(<ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref><sp/>*<sp/>mpctx,</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*data_size,</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*<sp/>buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size)</highlight></codeline>
<codeline lineno="2315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structMPADecodeContext" kindref="compound">MPADecodeContext</ref><sp/>*s;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*buf_ptr<sp/>=<sp/>buf;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/>int16_t<sp/>*out_samples<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mpctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mpctx-&gt;<ref refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" kindref="member">priv_data</ref><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" kindref="member">priv_data</ref>;</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(buf_size<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>out_size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>header;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>free_format_next_header<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>header<sp/>seen<sp/>:<sp/>find<sp/>one.<sp/>We<sp/>need<sp/>at<sp/>least<sp/>HEADER_SIZE</highlight></codeline>
<codeline lineno="2330"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>to<sp/>parse<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" kindref="member">HEADER_SIZE</ref><sp/>-<sp/>len;</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>buf_size)</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>buf_size;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>,<sp/>buf_ptr,<sp/>len);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_size<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>)<sp/>&gt;=<sp/><ref refid="mpaudec_8c_1a49999be01380f41cc0d0f1f1406fb277" kindref="member">HEADER_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[0]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[1]<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[3];</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<ref refid="mpaudec_8c_1a7c31d00e6546442f4894d24f15c61dd6" kindref="member">check_header</ref>(header)<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>sync<sp/>found<sp/>:<sp/>move<sp/>by<sp/>one<sp/>byte<sp/>(inefficient,<sp/>but<sp/>simple!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>,<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>+<sp/>1,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>--;</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;skip<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/>header);</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>free<sp/>format<sp/>frame<sp/>size<sp/>to<sp/>give<sp/>a<sp/>chance</highlight></codeline>
<codeline lineno="2352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>get<sp/>a<sp/>new<sp/>bitrate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" kindref="member">decode_header</ref>(s,<sp/>header)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>format:<sp/>prepare<sp/>to<sp/>compute<sp/>frame<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>codec<sp/>info<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1a36e44d2b96644df34b619a854e1abc74" kindref="member">sample_rate</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a433005252c35cff955577e14971a5dba" kindref="member">sample_rate</ref>;</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1a988371375f0a8b976370718f06ed8dcd" kindref="member">channels</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a7bda29d3b0d640027bc4ce9e0df9a1ca" kindref="member">nb_channels</ref>;</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1ad65f95dc72d0c3d64744c88b194aa904" kindref="member">bit_rate</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a0a10f8346af2c5d6605b76b885da11b5" kindref="member">bit_rate</ref>;</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1adc7047707acb5823b3c23c1b56dd84a4" kindref="member">layer</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1a11e79ba1890ab90c7facb5e602debf01" kindref="member">frame_size</ref><sp/>=<sp/>384;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1a11e79ba1890ab90c7facb5e602debf01" kindref="member">frame_size</ref><sp/>=<sp/>1152;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a80af6fe0fc8f06219d22b80884a739b2" kindref="member">lsf</ref>)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1a11e79ba1890ab90c7facb5e602debf01" kindref="member">frame_size</ref><sp/>=<sp/>576;</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1a11e79ba1890ab90c7facb5e602debf01" kindref="member">frame_size</ref><sp/>=<sp/>1152;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>format<sp/>:<sp/>find<sp/>next<sp/>sync<sp/>to<sp/>compute<sp/>frame<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="mpegaudio_8h_1afe766840654774677e78f6baf94c88dc" kindref="member">MPA_MAX_CODED_FRAME_SIZE</ref><sp/>-<sp/>len;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>buf_size)</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>buf_size;</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>frame<sp/>too<sp/>long:<sp/>resync<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>,<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>+<sp/>1,<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>--;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*p,<sp/>*pend;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>header1;</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>,<sp/>buf_ptr,<sp/>len);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pend<sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>+<sp/>len<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>&lt;=<sp/>pend<sp/>&amp;&amp;<sp/>free_format_next_header<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>(p[0]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(p[1]<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>p[3];</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header1<sp/>=<sp/>(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[0]<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[1]<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[2]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[3];</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>with<sp/>high<sp/>probability<sp/>that<sp/>we<sp/>have<sp/>a</highlight></codeline>
<codeline lineno="2405"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((header<sp/>&amp;<sp/><ref refid="mpaudec_8c_1a2bb2d7ffb7f980fa7537e3f9e1e69c16" kindref="member">SAME_HEADER_MASK</ref>)<sp/>==</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(header1<sp/>&amp;<sp/><ref refid="mpaudec_8c_1a2bb2d7ffb7f980fa7537e3f9e1e69c16" kindref="member">SAME_HEADER_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header<sp/>found:<sp/>update<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(p<sp/>+<sp/>4)<sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_size<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free_format_next_header<sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>frame<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>padding<sp/>=<sp/>(header1<sp/>&gt;&gt;<sp/>9)<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1ac96462bc103c100a51e8ad4115af0101" kindref="member">layer</ref><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref><sp/>-=<sp/>padding<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref><sp/>-=<sp/>padding;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;free<sp/>frame<sp/>size=%d<sp/>padding=%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9b728908a61941cfd1ec8f9c66f4f305" kindref="member">free_format_frame_size</ref>,<sp/>padding);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mpaudec_8c_1adc65cd68ae1134afaf2b4d0aa8270b26" kindref="member">decode_header</ref>(s,<sp/>header1);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free_format_next_header<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>found:<sp/>simply<sp/>increase<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_size<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>s-&gt;frame_size)<sp/>{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>&gt;<sp/><ref refid="mpegaudio_8h_1afe766840654774677e78f6baf94c88dc" kindref="member">MPA_MAX_CODED_FRAME_SIZE</ref>)</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>=<sp/><ref refid="mpegaudio_8h_1afe766840654774677e78f6baf94c88dc" kindref="member">MPA_MAX_CODED_FRAME_SIZE</ref>;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>-<sp/>len;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>buf_size)</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>buf_size;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref>,<sp/>buf_ptr,<sp/>len);</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_size<sp/>-=<sp/>len;</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>)<sp/>&gt;=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpctx-&gt;<ref refid="structMPAuDecContext_1ad2b0b51f7e58b391bb558e4e910d86de" kindref="member">coded_frame_size</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref>;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpctx-&gt;<ref refid="structMPAuDecContext_1ac1e30ced961e8cdc9af6dcdbbde6acd5" kindref="member">parse_only</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>simply<sp/>return<sp/>the<sp/>frame<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(uint8_t<sp/>**)data<sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_size<sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>-<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_size<sp/>=<sp/><ref refid="mpaudec_8c_1a2dff7b15a5f55a97729fb3f2d7194e64" kindref="member">mp_decode_frame</ref>(s,<sp/>out_samples);</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(free_format_next_header<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[0]<sp/>=<sp/>free_format_next_header<sp/>&gt;&gt;<sp/>24;</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[1]<sp/>=<sp/>free_format_next_header<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[2]<sp/>=<sp/>free_format_next_header<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>[3]<sp/>=<sp/>free_format_next_header;</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref><sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a5aa3bf38d36e9a98410273712be1df30" kindref="member">inbuf_ptr</ref><sp/>=<sp/>s-&gt;<ref refid="structMPADecodeContext_1adac9267053c81ebdcfb474a9006b0def" kindref="member">inbuf</ref>;</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structMPADecodeContext_1a9a5206930223aef64a3bac189dd039aa" kindref="member">frame_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/>*data_size<sp/>=<sp/>out_size;</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf_ptr<sp/>-<sp/>buf;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472" refid="mpaudec_8h_1ab0a860386211b1374764b470cc56129b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="mpaudec_8c_1ab0a860386211b1374764b470cc56129b" kindref="member">mpaudec_clear</ref>(<ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref><sp/>*mpctx)</highlight></codeline>
<codeline lineno="2473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mpctx<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/>free(mpctx-&gt;<ref refid="structMPAuDecContext_1aeeedc8a25b1887bc88c1200d30728f09" kindref="member">priv_data</ref>);</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(mpctx,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structMPAuDecContext" kindref="compound">MPAuDecContext</ref>));</highlight></codeline>
<codeline lineno="2477"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="irrKlang-1.5.0/plugins/ikpMP3/decoder/mpaudec.c"/>
  </compounddef>
</doxygen>
