<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="classirrklang_1_1ISoundMixedOutputReceiver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>irrklang::ISoundMixedOutputReceiver</compoundname>
    <includes refid="ik__ISoundMixedOutputReceiver_8h" local="no">ik_ISoundMixedOutputReceiver.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classirrklang_1_1ISoundMixedOutputReceiver_1a2950c073c7f242833bbab6f1eb1f1ce3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual irrklang::ISoundMixedOutputReceiver::~ISoundMixedOutputReceiver</definition>
        <argsstring>()</argsstring>
        <name>~ISoundMixedOutputReceiver</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/include/ik_ISoundMixedOutputReceiver.h" line="25" column="1" bodyfile="irrKlang-1.5.0/include/ik_ISoundMixedOutputReceiver.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classirrklang_1_1ISoundMixedOutputReceiver_1a4951ef6422a5f6aaf384095a5f1d930e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void irrklang::ISoundMixedOutputReceiver::OnAudioDataReady</definition>
        <argsstring>(const void *data, int byteCount, int playbackrate)=0</argsstring>
        <name>OnAudioDataReady</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>byteCount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>playbackrate</declname>
        </param>
        <briefdescription>
<para>Called when a chunk of sound has been mixed and is about to be played. </para>        </briefdescription>
        <detaileddescription>
<para>Note: This is called from the playing thread of the sound library, so you need to make everything you are doing in this method thread safe. Additionally, it would be a good idea to do nothing complicated in your implementation and return as fast as possible, otherwise sound output may be stuttering. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>representing the sound frames which just have been mixed. Sound data always consists of two interleaved sound channels at 16bit per frame. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byteCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of bytes of the data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>playbackrate</parametername>
</parameternamelist>
<parameterdescription>
<para>The playback rate at samples per second (usually something like 44000). This value will not change and always be the same for an instance of an <ref refid="classirrklang_1_1ISoundEngine" kindref="compound">ISoundEngine</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="irrKlang-1.5.0/include/ik_ISoundMixedOutputReceiver.h" line="37" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface to be implemented by the user, which recieves the mixed output when it it played by the sound engine. </para>    </briefdescription>
    <detaileddescription>
<para>This can be used to store the sound output as .wav file or for creating a Oscillograph or similar. Simply implement your own class derived from <ref refid="classirrklang_1_1ISoundMixedOutputReceiver" kindref="compound">ISoundMixedOutputReceiver</ref> and use <ref refid="classirrklang_1_1ISoundEngine_1a3cbaae130ddd88adfef6af3861e8d9b0" kindref="member">ISoundEngine::setMixedDataOutputReceiver</ref> to let the audio driver know about it. </para>    </detaileddescription>
    <location file="irrKlang-1.5.0/include/ik_ISoundMixedOutputReceiver.h" line="21" column="1" bodyfile="irrKlang-1.5.0/include/ik_ISoundMixedOutputReceiver.h" bodystart="20" bodyend="39"/>
    <listofallmembers>
      <member refid="classirrklang_1_1ISoundMixedOutputReceiver_1a4951ef6422a5f6aaf384095a5f1d930e" prot="public" virt="pure-virtual"><scope>irrklang::ISoundMixedOutputReceiver</scope><name>OnAudioDataReady</name></member>
      <member refid="classirrklang_1_1ISoundMixedOutputReceiver_1a2950c073c7f242833bbab6f1eb1f1ce3" prot="public" virt="virtual"><scope>irrklang::ISoundMixedOutputReceiver</scope><name>~ISoundMixedOutputReceiver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
