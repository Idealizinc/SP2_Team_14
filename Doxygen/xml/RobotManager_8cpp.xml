<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="RobotManager_8cpp" kind="file" language="C++">
    <compoundname>RobotManager.cpp</compoundname>
    <includes refid="RobotManager_8h" local="yes">RobotManager.h</includes>
    <incdepgraph>
      <node id="1623">
        <label>list</label>
      </node>
      <node id="1626">
        <label>MyMath.h</label>
        <link refid="MyMath_8h"/>
        <childnode refid="1627" relation="include">
        </childnode>
        <childnode refid="1628" relation="include">
        </childnode>
        <childnode refid="1629" relation="include">
        </childnode>
        <childnode refid="1630" relation="include">
        </childnode>
      </node>
      <node id="1633">
        <label>RayCast.h</label>
        <link refid="Raycast_8h"/>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
      </node>
      <node id="1632">
        <label>WeaponSystem.h</label>
        <link refid="WeaponSystem_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1633" relation="include">
        </childnode>
      </node>
      <node id="1627">
        <label>cmath</label>
      </node>
      <node id="1625">
        <label>Vector3.h</label>
        <link refid="Vector3_8h"/>
        <childnode refid="1626" relation="include">
        </childnode>
        <childnode refid="1631" relation="include">
        </childnode>
      </node>
      <node id="1628">
        <label>exception</label>
      </node>
      <node id="1634">
        <label>Boundary.h</label>
        <link refid="Boundary_8h"/>
      </node>
      <node id="1629">
        <label>ctime</label>
      </node>
      <node id="1621">
        <label>ComGLab/Source/RobotManager.cpp</label>
        <link refid="RobotManager.cpp"/>
        <childnode refid="1622" relation="include">
        </childnode>
      </node>
      <node id="1635">
        <label>math.h</label>
      </node>
      <node id="1630">
        <label>cstdlib</label>
      </node>
      <node id="1631">
        <label>iostream</label>
      </node>
      <node id="1624">
        <label>Robot.h</label>
        <link refid="Robot_8h"/>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1632" relation="include">
        </childnode>
        <childnode refid="1634" relation="include">
        </childnode>
        <childnode refid="1635" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
      </node>
      <node id="1622">
        <label>RobotManager.h</label>
        <link refid="RobotManager_8h"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
<para>.cpp file that manages robots in the scene </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Lim Rui An </para></simplesect>
<simplesect kind="par"><title>email: 150577L.nyp.edu.sg</title><para></para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************/</highlight></codeline>
<codeline lineno="9"><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="RobotManager_8h" kindref="compound">RobotManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight></codeline>
<codeline lineno="19"><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classRobotManager_1ad0c62becf9a947a3679995039074c2bb" refkind="member"><highlight class="normal"><ref refid="classRobotManager_1ad0c62becf9a947a3679995039074c2bb" kindref="member">RobotManager::~RobotManager</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::list&lt;Robot&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.end();<sp/></highlight><highlight class="comment">/*++iter*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.erase(iter);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight></codeline>
<codeline lineno="35"><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classRobotManager_1a621e32721f045db98dc13b288aaeb09f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRobotManager_1a621e32721f045db98dc13b288aaeb09f" kindref="member">RobotManager::IncrementPosition</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::list&lt;Robot&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*iter).Move();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight></codeline>
<codeline lineno="51"><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classRobotManager_1affe43358be46aeb70d8cc616f09ecce2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRobotManager_1affe43358be46aeb70d8cc616f09ecce2" kindref="member">RobotManager::CleanUp</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.size()<sp/>&gt;<sp/><ref refid="classRobotManager_1a7db81d08f5973976a4090ff2571e3d78" kindref="member">MaxRobotCount</ref>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.pop_back();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::list&lt;Robot&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.end();<sp/></highlight><highlight class="comment">/*++iter*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(GetDist(*iter)<sp/>&gt;<sp/>MaxDist)</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>RobotList.erase(iter);</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*iter).GetHealth()<sp/>&lt;=<sp/>0<sp/>&amp;&amp;<sp/>(*iter).deadanimationover)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.erase(iter);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iter;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classRobotManager_1a04fbfa8ef3b45ec3f12ad5ebdb581c4a" kindref="member">CurrentRobotCount</ref><sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.size();</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************/</highlight></codeline>
<codeline lineno="83"><highlight class="comment">/****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classRobotManager_1a836b4959e675f78e146bba9444ac1834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classRobotManager_1a836b4959e675f78e146bba9444ac1834" kindref="member">RobotManager::ClearList</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::list&lt;Robot&gt;::iterator<sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.begin();<sp/>iter<sp/>!=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.end();<sp/></highlight><highlight class="comment">/*++iter*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/><ref refid="classRobotManager_1a9c47f42fad00110c31689477d757e647" kindref="member">RobotList</ref>.erase(iter);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//float<sp/>RobotManager::GetDist(Robot<sp/>Ray)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Ray.Position().Length();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//}</highlight></codeline>
    </programlisting>
    <location file="ComGLab/Source/RobotManager.cpp"/>
  </compounddef>
</doxygen>
